[Script Info]
; Script generated by Aegisub 3.1.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
Last Style Storage: Default
Aegisub Video Zoom Percent: 1.000000
Aegisub Scroll Position: 0
Aegisub Active Line: 4

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yin, 冬青黑体简体中文 W3,20,&H00FFFFFF,&HF0000000,&H00000000,&H32000000,0,0,0,0,100,100,0,0,1,1,0,2,5,5,5,134

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:05.04,0:00:07.01,yin,,0,0,0,, 斯坦福大学 \N{\fs12}Stanford University.
Dialogue: 0,0:00:11.28,0:00:16.91,yin,,0,0,0,, 欢迎来到 2013 至 2014 秋季学期 CS193P\N{\fs12}Okay. Well, welcome to CS193P fall of 2013/2014.
Dialogue: 0,0:00:17.29,0:00:20.59,yin,,0,0,0,, 今天我们会继续讲解 \N{\fs12}Today we’re going to continue our discussion
Dialogue: 0,0:00:20.60,0:00:22.45,yin,,0,0,0,, 属性化字符串的内容 \N{\fs12}of attributed string from last time
Dialogue: 0,0:00:22.63,0:00:24.40,yin,,0,0,0,, 还会介绍 UITextView\N{\fs12}and talk about UITextView,
Dialogue: 0,0:00:24.59,0:00:28.66,yin,,0,0,0,, 它基本上是一个可变属性化字符串查看器 \N{\fs12}which is basically a mutable attributed string viewer, okay?
Dialogue: 0,0:00:28.68,0:00:32.33,yin,,0,0,0,, 有点像 UILable 但是功能更强大 \N{\fs12}It’s kind of like a UILabel but much more powerful.
Dialogue: 0,0:00:32.81,0:00:34.09,yin,,0,0,0,, 我们会讲讲这部分内容 \N{\fs12}And we’ll talk about that.
Dialogue: 0,0:00:34.43,0:00:37.68,yin,,0,0,0,, 然后我们会介绍 iOS7 甚至整个 iOS 中 \N{\fs12}Then we’re going to talk about a very important kind of conceptual thing
Dialogue: 0,0:00:37.69,0:00:39.59,yin,,0,0,0,, 非常重要的一个概念 \N{\fs12}in iOS 7, or in iOS in general,
Dialogue: 0,0:00:39.59,0:00:41.66,yin,,0,0,0,, 也就是视图控制器生命周期 \N{\fs12}which is view controller lifecycle.
Dialogue: 0,0:00:41.67,0:00:45.13,yin,,0,0,0,, 指的是 MVC 中控制器的生命周期 \N{\fs12}So that’s just the lifecycle of the controller part of your MVC
Dialogue: 0,0:00:45.39,0:00:49.05,yin,,0,0,0,, 以及在其生命周期的各个阶段中 \N{\fs12}and how it gets notified at different times in its lifecycle
Dialogue: 0,0:00:49.06,0:00:50.20,yin,,0,0,0,, 如何得到事件进展的通知 \N{\fs12}about what’s going on.
Dialogue: 0,0:00:50.83,0:00:52.85,yin,,0,0,0,, 然后我们会讲解广播站机制 \N{\fs12}Then we’re going to talk about the radio station
Dialogue: 0,0:00:52.99,0:00:54.99,yin,,0,0,0,, 在讲 MVC 时我提到过 \N{\fs12}that I referred to in MVC.
Dialogue: 0,0:00:55.63,0:00:58.96,yin,,0,0,0,, 今天我们会从不太相同的角度进行讲解 \N{\fs12}We’re going to talk about it in a little different context that we see in MVC
Dialogue: 0,0:00:58.97,0:01:01.91,yin,,0,0,0,, 因为目前我只是想为大家介绍一下这部分内容 \N{\fs12}because I just want to introduce it to you now.
Dialogue: 0,0:01:02.12,0:01:06.91,yin,,0,0,0,, 而在今天的整个讲解过程中 \N{\fs12}And then throughout today’s thing –
Dialogue: 0,0:01:06.92,0:01:08.35,yin,,0,0,0,, 我会… 看这个幻灯片 \N{\fs12}so I’m going to be — slides here.
Dialogue: 0,0:01:08.35,0:01:09.70,yin,,0,0,0,, 在幻灯片讲解过程中 \N{\fs12}I’m going to be stopping every once and a while
Dialogue: 0,0:01:09.70,0:01:10.85,yin,,0,0,0,, 我会停下来做一些演示 \N{\fs12}and we’ll do a little demo.
Dialogue: 0,0:01:11.12,0:01:15.47,yin,,0,0,0,, 然后再继续讲解幻灯片内容 \N{\fs12}And then we will move back to the slides
Dialogue: 0,0:01:15.48,0:01:18.07,yin,,0,0,0,, 如此反复 直至讲完全部内容 \N{\fs12}and back and forth as we cover various topics.
Dialogue: 0,0:01:18.41,0:01:21.93,yin,,0,0,0,, 明白了吗 那我们先来讲 UITextView\N{\fs12}Okay? So let’s start with UITextView.
Dialogue: 0,0:01:22.40,0:01:26.40,yin,,0,0,0,, 和 UILabel 一样 它也能显示文本 但是功能更强大 \N{\fs12}Like UILabel in that it displays text but way more powerful
Dialogue: 0,0:01:26.40,0:01:29.07,yin,,0,0,0,, 因为它能显示多行文本 \N{\fs12}because the text is multiline.
Dialogue: 0,0:01:29.07,0:01:30.94,yin,,0,0,0,, 在 UILabel 中 如果想显示多行文本 \N{\fs12}UILabel, if you want it to be multiline,
Dialogue: 0,0:01:30.95,0:01:33.18,yin,,0,0,0,, 你需要提前声明有多少行 \N{\fs12}you kind of have to say how many lines it is in advance,
Dialogue: 0,0:01:33.19,0:01:36.27,yin,,0,0,0,, 而在 UITextView 中 想显示多少行都可以 \N{\fs12}whereas UITextView, as many lines as it needs.
Dialogue: 0,0:01:36.74,0:01:41.69,yin,,0,0,0,, 还可以滚动 可以编辑 也可以根据需要选中 \N{\fs12}It’s also scrollable, editable, or just selectable if you want.
Dialogue: 0,0:01:41.91,0:01:45.84,yin,,0,0,0,, 当然了 你还可以使用可变属性化字符串的各种设置 \N{\fs12}And of course, you get all the mutable attributed string
Dialogue: 0,0:01:45.88,0:01:48.53,yin,,0,0,0,, 比如颜色等等 \N{\fs12}setting of various things like colors and all that stuff.
Dialogue: 0,0:01:48.53,0:01:53.83,yin,,0,0,0,,UITextView 非常强大且容易使用 \N{\fs12}So UITextView, super powerful object but very easy to use.
Dialogue: 0,0:01:54.86,0:01:59.48,yin,,0,0,0,, 使用时要用到它的一个属性 叫做 textStorage\N{\fs12}The way you use it is that it has a property called textStorage,
Dialogue: 0,0:01:59.78,0:02:01.50,yin,,0,0,0,, 它是一个 NSTextStorage 类型 \N{\fs12}which is an NSTextStorage.
Dialogue: 0,0:02:01.50,0:02:05.29,yin,,0,0,0,,NSTextStorage 是 NSMutableAttributedString 的一个子类 \N{\fs12}NSTextStorage is a subclass of NSMutableAttributedString.
Dialogue: 0,0:02:05.72,0:02:07.18,yin,,0,0,0,, 你得到这个 textStorage 后 \N{\fs12}So you get this textStorage,
Dialogue: 0,0:02:07.18,0:02:08.96,yin,,0,0,0,, 就可以直接设置属性 \N{\fs12}and you can just start setting attributes
Dialogue: 0,0:02:08.98,0:02:11.82,yin,,0,0,0,, 或者如果它是可编辑的 用户会进行编辑 \N{\fs12}or if it’s editable, the user will start editing it
Dialogue: 0,0:02:11.82,0:02:14.11,yin,,0,0,0,, 属性会在这个可变字符串上显示出来 \N{\fs12}and the attributes will just show up on this mutable string.
Dialogue: 0,0:02:14.42,0:02:18.54,yin,,0,0,0,, 这是 iOS7 中新增的一个很棒的编程接口 \N{\fs12}It’s a super great programming interface new in iOS 7.
Dialogue: 0,0:02:18.64,0:02:21.78,yin,,0,0,0,, 它有一个可变属性化字符串 \N{\fs12}Okay. It’s having a mutable attributed string
Dialogue: 0,0:02:21.79,0:02:25.19,yin,,0,0,0,, 像这样由 UITextView 发布出来 \N{\fs12}be just vended like this by UITextView
Dialogue: 0,0:02:25.20,0:02:28.47,yin,,0,0,0,, 你或用户可以随时对其进行编辑 \N{\fs12}and editable on the fly by both the user and by you
Dialogue: 0,0:02:28.48,0:02:32.02,yin,,0,0,0,, 这是新功能 非常棒 非常好用 \N{\fs12}is all new and it’s really incredibly awesome and easy to use.
Dialogue: 0,0:02:33.26,0:02:36.31,yin,,0,0,0,,UITextView 有一些方法 \N{\fs12}There are some methods on UITextView like, you know,
Dialogue: 0,0:02:36.31,0:02:38.34,yin,,0,0,0,, 比如字体属性可以用来设置字体 \N{\fs12}property font where you can just set the font.
Dialogue: 0,0:02:39.05,0:02:41.68,yin,,0,0,0,, 但是大家要明白 当你设置字体时 \N{\fs12}Understand, though, that when you set the font,
Dialogue: 0,0:02:41.68,0:02:44.89,yin,,0,0,0,, 它会依次查看可变字符串中的每个字符 \N{\fs12}all it’s doing is going through every character in the mutable string
Dialogue: 0,0:02:44.89,0:02:47.24,yin,,0,0,0,, 然后将字体属性名称 \N{\fs12}and setting the font attribute name –
Dialogue: 0,0:02:47.24,0:02:49.91,yin,,0,0,0,, 设置为这个字体 \N{\fs12}font, you know, that thing — to this font.
Dialogue: 0,0:02:49.91,0:02:55.28,yin,,0,0,0,, 要记得加粗和斜体都是字体的属性 \N{\fs12}So remember that bold and italic are attributes of the font.
Dialogue: 0,0:02:55.60,0:02:57.30,yin,,0,0,0,, 大小其实也是 \N{\fs12}Okay? And so is the size, actually.
Dialogue: 0,0:02:57.59,0:03:00.07,yin,,0,0,0,, 所以如果你调用这个设置字体方法 \N{\fs12}So if you call this method set font –
Dialogue: 0,0:03:00.07,0:03:02.28,yin,,0,0,0,, 调用设置字体的 setter\N{\fs12}you know, call the set font setter there –
Dialogue: 0,0:03:02.56,0:03:04.91,yin,,0,0,0,, 所有加粗 斜体和大小的设置 \N{\fs12}it’s going to blast all of your bolds,
Dialogue: 0,0:03:04.91,0:03:07.24,yin,,0,0,0,, 就会无效了 \N{\fs12}and italics, and size, okay?
Dialogue: 0,0:03:07.24,0:03:08.98,yin,,0,0,0,, 所以使用时要小心 \N{\fs12}So you be a little careful of that.
Dialogue: 0,0:03:09.25,0:03:11.62,yin,,0,0,0,, 如果你想设置所有字符的字体 \N{\fs12}If you want to set the font, though, of every character
Dialogue: 0,0:03:11.62,0:03:13.22,yin,,0,0,0,, 且加粗斜体和大小不变 \N{\fs12}and have that stuff preserved,
Dialogue: 0,0:03:13.23,0:03:14.48,yin,,0,0,0,, 只要加个 for 循环 \N{\fs12}just do a little for loop,
Dialogue: 0,0:03:14.85,0:03:16.91,yin,,0,0,0,, 逐一查看可变字符串的全部属性 \N{\fs12}go through all the attributes in the mutable string,
Dialogue: 0,0:03:16.92,0:03:18.44,yin,,0,0,0,, 得到当前字体 \N{\fs12}get the font that’s already there.
Dialogue: 0,0:03:18.66,0:03:20.59,yin,,0,0,0,, 你可以用 UIFontDescriptor 的符号特征方法 \N{\fs12}You can grab the symbolic traits that are off of it
Dialogue: 0,0:03:20.60,0:03:23.65,yin,,0,0,0,, 获取它的符号特征 \N{\fs12}using the symbolic traits method in UIFontDescriptor
Dialogue: 0,0:03:24.20,0:03:26.01,yin,,0,0,0,, 然后新建一个字体 \N{\fs12}and then create a new font
Dialogue: 0,0:03:26.16,0:03:29.13,yin,,0,0,0,, 等于你想要设置的字体加上那些特征 \N{\fs12}that is the font you’re trying to set, plus those traits,
Dialogue: 0,0:03:29.37,0:03:31.13,yin,,0,0,0,, 然后再将最后结果设置为属性 \N{\fs12}and then set it back as the attribute.
Dialogue: 0,0:03:31.13,0:03:33.18,yin,,0,0,0,, 这是实现它需要用到的 for 循环 \N{\fs12}So a little for loop there to do that.
Dialogue: 0,0:03:33.18,0:03:36.03,yin,,0,0,0,, 但是我希望大家在用设置字体这类方法时要小心 \N{\fs12}But I just want you to be careful about methods like set font,
Dialogue: 0,0:03:36.04,0:03:37.90,yin,,0,0,0,, 这类方法在设置字体属性时 \N{\fs12}which are going to set the font attribute
Dialogue: 0,0:03:37.90,0:03:39.53,yin,,0,0,0,, 会改变全部字符的设置 \N{\fs12}of all the characters, okay?
Dialogue: 0,0:03:41.12,0:03:45.57,yin,,0,0,0,,UITextView 具有非常高级的文本布局机制 \N{\fs12}UITextView has incredibly advanced text layout mechanisms.
Dialogue: 0,0:03:45.57,0:03:50.28,yin,,0,0,0,, 比如 你可以指定文本所处容器 \N{\fs12}For example, you can specify the container that the text is going to be in
Dialogue: 0,0:03:50.28,0:03:52.49,yin,,0,0,0,, 甚至可以指定不可填充文本的限制区域 \N{\fs12}and it can even have exclusion zones.
Dialogue: 0,0:03:52.76,0:03:55.75,yin,,0,0,0,, 所以如果你在文字中间放置一张图片 \N{\fs12}So if you had an image that was dropped in the middle of your text
Dialogue: 0,0:03:55.78,0:03:57.79,yin,,0,0,0,, 想让文字环绕图片 \N{\fs12}and you wanted text to flow around it,
Dialogue: 0,0:03:57.79,0:04:02.40,yin,,0,0,0,, 即便这张图片的形状很奇怪 \N{\fs12}even if it’s funny-shaped thing — you know, image –
Dialogue: 0,0:04:02.41,0:04:03.40,yin,,0,0,0,, 你也可以实现文字环绕效果 \N{\fs12}you can flow around it.
Dialogue: 0,0:04:03.79,0:04:05.46,yin,,0,0,0,, 你只要… 非常简单 \N{\fs12}And you just — it’s so easy to do it.
Dialogue: 0,0:04:05.46,0:04:06.05,yin,,0,0,0,, 难以置信 \N{\fs12}unbelievably.
Dialogue: 0,0:04:06.06,0:04:07.45,yin,,0,0,0,, 你只要创建一条贝塞尔曲线 \N{\fs12}You just create a Bezier path
Dialogue: 0,0:04:07.46,0:04:09.79,yin,,0,0,0,, 包围住想要环绕的对象 \N{\fs12}that encompasses the thing you want it to flow around.
Dialogue: 0,0:04:09.79,0:04:11.64,yin,,0,0,0,, 你只要在 UITextView 的 textContainer 属性中 \N{\fs12}You just set that as an exclusion zone
Dialogue: 0,0:04:11.64,0:04:14.75,yin,,0,0,0,, 把它设为限制区域 \N{\fs12}in the textContainer property here of UITextView,
Dialogue: 0,0:04:14.90,0:04:15.92,yin,,0,0,0,, 就会自动进行环绕布局 \N{\fs12}and it will just flow around.
Dialogue: 0,0:04:15.92,0:04:19.67,yin,,0,0,0,, 我们这里不再讲这些高级应用了 \N{\fs12}So we’re not going to talk about that advanced stuff.
Dialogue: 0,0:04:19.68,0:04:22.95,yin,,0,0,0,, 这些都是 TextKit 中的内容 是 iOS7 的新增功能 \N{\fs12}It’s all part of TextKit, which is new for iOS 7.
Dialogue: 0,0:04:23.62,0:04:26.18,yin,,0,0,0,,layoutManager 负责布局各个字形 \N{\fs12}The layoutManager is the thing that lays out the glyphs.
Dialogue: 0,0:04:26.26,0:04:29.11,yin,,0,0,0,, 它得到全部字符和它们的属性 \N{\fs12}So it takes all the characters and all the attributes and stuff
Dialogue: 0,0:04:29.11,0:04:31.21,yin,,0,0,0,, 然后对各个字形逐一进行布局 \N{\fs12}and it laying out the glyphs one by one.
Dialogue: 0,0:04:31.44,0:04:33.25,yin,,0,0,0,, 有人不知道字形是什么吗 \N{\fs12}For those of you who don’t know what glyphs are,
Dialogue: 0,0:04:33.46,0:04:37.15,yin,,0,0,0,, 它们代表一个或一串字符 \N{\fs12}they’re kind of how you represent a character or a sequence of characters
Dialogue: 0,0:04:37.47,0:04:39.85,yin,,0,0,0,, 在屏幕上显示的样子 \N{\fs12}on screen with some things.
Dialogue: 0,0:04:39.85,0:04:41.29,yin,,0,0,0,, 所以 layoutManager 负责 \N{\fs12}So the layoutManager is the thing
Dialogue: 0,0:04:41.30,0:04:43.84,yin,,0,0,0,, 在文本容器中布局字形 \N{\fs12}that lays the glyphs out inside the text container.
Dialogue: 0,0:04:43.84,0:04:45.85,yin,,0,0,0,, 所以如果你对字体排印感兴趣 \N{\fs12}So if you’re interested in typography
Dialogue: 0,0:04:45.86,0:04:47.37,yin,,0,0,0,, 或者想在期末项目中 \N{\fs12}or you’re going to do a final project
Dialogue: 0,0:04:47.38,0:04:50.01,yin,,0,0,0,, 做关于文本布局的应用 \N{\fs12}that has a lot of text layout and stuff in it,
Dialogue: 0,0:04:50.24,0:04:51.91,yin,,0,0,0,, 就应该从这里入手 \N{\fs12}this is where you get started there.
Dialogue: 0,0:04:52.65,0:04:55.08,yin,,0,0,0,, 我们来演示一下 \N{\fs12}Okay? So let’s have a demo
Dialogue: 0,0:04:55.09,0:04:56.95,yin,,0,0,0,, 结合上节课讲过的 \N{\fs12}where we kind of combine all the things
Dialogue: 0,0:04:56.96,0:04:59.34,yin,,0,0,0,, 关于 UITextView 的全部内容 \N{\fs12}we saw in last lecture in this UITextView.
Dialogue: 0,0:04:59.98,0:05:02.82,yin,,0,0,0,, 我要叫这个演示 Attributor 属性 \N{\fs12}I’m going to call this demo “Attributor”
Dialogue: 0,0:05:02.85,0:05:06.80,yin,,0,0,0,, 因为我们要用到属性化字符串 \N{\fs12}because we’re going to be doing attributed strings here.
Dialogue: 0,0:05:07.36,0:05:08.70,yin,,0,0,0,, 它的样子呢 \N{\fs12}And it’s going to look like this.
Dialogue: 0,0:05:08.71,0:05:10.34,yin,,0,0,0,, 这是一个新应用 \N{\fs12}It’s going to be a totally new app,
Dialogue: 0,0:05:10.34,0:05:12.37,yin,,0,0,0,, 和 Matchismo 毫无关联 \N{\fs12}totally unrelated to Matchismo.
Dialogue: 0,0:05:12.37,0:05:14.21,yin,,0,0,0,, 我要新建一个项目 \N{\fs12}So I’m going to say create new project.
Dialogue: 0,0:05:15.50,0:05:17.92,yin,,0,0,0,, 隐藏其他面板 \N{\fs12}Let’s go ahead and also hide others here
Dialogue: 0,0:05:17.92,0:05:18.51,yin,,0,0,0,, 已经设置好了 \N{\fs12}which we are doing.
Dialogue: 0,0:05:18.52,0:05:22.09,yin,,0,0,0,, 我要选择单一视图应用 \N{\fs12}So I’m going to do a single view application.
Dialogue: 0,0:05:22.09,0:05:24.33,yin,,0,0,0,, 我们总是选择这项 单一的 MVC\N{\fs12}We almost always start with that, a single MVC.
Dialogue: 0,0:05:24.34,0:05:26.24,yin,,0,0,0,, 我会在下节课中 \N{\fs12}This demo I’m eventually going to
Dialogue: 0,0:05:26.26,0:05:30.14,yin,,0,0,0,, 将这个示例应用变成多 MVC 的应用 \N{\fs12}make into a multi-MVC application at the next lecture,
Dialogue: 0,0:05:30.30,0:05:33.75,yin,,0,0,0,, 但是这里我们先选择单一视图 \N{\fs12}but we’re going to start here with this.
Dialogue: 0,0:05:33.75,0:05:34.97,yin,,0,0,0,, 我要叫它 Attributor 属性 \N{\fs12}So I’m going to call it Attributor.
Dialogue: 0,0:05:34.97,0:05:36.94,yin,,0,0,0,, 类前缀为 Attributor\N{\fs12}I’m going to have the class prefix be attributor
Dialogue: 0,0:05:36.94,0:05:40.09,yin,,0,0,0,, 这样我们的控制器就叫做 AttributorViewController\N{\fs12}so that our controller is called AttributorViewController.
Dialogue: 0,0:05:40.90,0:05:41.59,yin,,0,0,0,, 这样做就行了 \N{\fs12}Just do that.
Dialogue: 0,0:05:41.74,0:05:43.11,yin,,0,0,0,, 我要把它保存在 Developer 目录下 \N{\fs12}I’m going to put it in Developer,
Dialogue: 0,0:05:43.11,0:05:44.40,yin,,0,0,0,, 和 Matchismo 保存在同样的地方 \N{\fs12}same place I have Matchismo.
Dialogue: 0,0:05:44.41,0:05:45.78,yin,,0,0,0,, 这是我的根目录 Developer\N{\fs12}This is my home directory, Developer.
Dialogue: 0,0:05:45.78,0:05:47.19,yin,,0,0,0,, 这里不需要源代码控制 \N{\fs12}I’m not going to use source control.
Dialogue: 0,0:05:48.56,0:05:49.55,yin,,0,0,0,, 这就好了 \N{\fs12}And here we go.
Dialogue: 0,0:05:49.79,0:05:53.11,yin,,0,0,0,, 这只是一个普通的应用 和我们以前做过的一样 \N{\fs12}So this is just a regular app just as you’re used to.
Dialogue: 0,0:05:53.48,0:05:57.42,yin,,0,0,0,, 同样 我要将这些委托内容移到 Supporting Files 中 \N{\fs12}Again, I like to move these delegate things into supporting files
Dialogue: 0,0:05:57.44,0:05:59.45,yin,,0,0,0,, 因为我们目前用不到委托 \N{\fs12}because we’re not really going to be doing the delegate.
Dialogue: 0,0:06:00.21,0:06:01.72,yin,,0,0,0,, 这学期讲到 iOS7 多任务处理的时候 \N{\fs12}This quarter we might actually do the delegates
Dialogue: 0,0:06:01.72,0:06:04.88,yin,,0,0,0,, 我们可能才会真正用到委托 \N{\fs12}when we start talking about multitasking in iOS 7.
Dialogue: 0,0:06:04.96,0:06:06.10,yin,,0,0,0,, 大部分情况下 \N{\fs12}But for most of the time
Dialogue: 0,0:06:06.11,0:06:07.63,yin,,0,0,0,, 你可以直接将它们移走 \N{\fs12}you can just kind of move that out of the way.
Dialogue: 0,0:06:09.00,0:06:10.48,yin,,0,0,0,, 这是我的空白 storyboard\N{\fs12}Here’s my blank storyboard.
Dialogue: 0,0:06:10.48,0:06:13.56,yin,,0,0,0,, 这里我也要把它改为小尺寸的 \N{\fs12}Again, I’m going to go down to small size
Dialogue: 0,0:06:14.17,0:06:16.48,yin,,0,0,0,, 这样更适合屏幕显示 \N{\fs12}instead of the tall size just so it fits.
Dialogue: 0,0:06:16.48,0:06:18.70,yin,,0,0,0,, 这样做没什么特殊原因 只是更方便显示 \N{\fs12}Okay, there’s no reason to do that, except for that it fits.
Dialogue: 0,0:06:18.79,0:06:23.42,yin,,0,0,0,, 大家在作业中也可以用大尺寸版本 \N{\fs12}By the way, you’re welcome to use the larger size in your homework if you want
Dialogue: 0,0:06:25.22,0:06:27.68,yin,,0,0,0,, 因为我会要求大家在作业中实现越来越多的功能 \N{\fs12}because as I ask you to do more and more in the homework,
Dialogue: 0,0:06:27.70,0:06:29.87,yin,,0,0,0,, 那样你就需要更大的空间 所以大点没问题 \N{\fs12}then you kind of need more and more space, which is fine.
Dialogue: 0,0:06:31.53,0:06:32.81,yin,,0,0,0,, 当然 在设计用户界面时 \N{\fs12}Of course, we need to think a little bit
Dialogue: 0,0:06:32.81,0:06:34.20,yin,,0,0,0,, 我们需要考虑到 \N{\fs12}when we design user interfaces
Dialogue: 0,0:06:34.21,0:06:37.76,yin,,0,0,0,, 有些用户可能在小屏幕手机上运行应用 \N{\fs12}that this application might run on some users on smaller phones
Dialogue: 0,0:06:37.77,0:06:39.96,yin,,0,0,0,, 而有些用户可能用的是大屏幕手机 \N{\fs12}and on some users on larger phones, right?
Dialogue: 0,0:06:39.96,0:06:42.30,yin,,0,0,0,, 所以我们需要一个可以伸缩的用户界面 \N{\fs12}So we kind of need a user interface that can stretch.
Dialogue: 0,0:06:42.60,0:06:44.70,yin,,0,0,0,, 下周我们会介绍自动布局机制 \N{\fs12}And next week we’ll be talking about autolayout,
Dialogue: 0,0:06:45.00,0:06:48.41,yin,,0,0,0,,iOS 的这种机制可以让你在设计用户界面时 \N{\fs12}which is a mechanism in iOS for you to design a user interface
Dialogue: 0,0:06:48.41,0:06:51.65,yin,,0,0,0,, 指定它的拉伸和缩小的方式 \N{\fs12}and specify how it stretches and shrinks, okay,
Dialogue: 0,0:06:51.65,0:06:52.59,yin,,0,0,0,, 非常重要 \N{\fs12}which is really important.
Dialogue: 0,0:06:52.90,0:06:55.30,yin,,0,0,0,, 不只适用于不同大小的 iPhone\N{\fs12}And not just on different size iPhones
Dialogue: 0,0:06:55.31,0:06:57.57,yin,,0,0,0,, 还适用于不同的设备 比如 iPad\N{\fs12}but different devices — iPads,
Dialogue: 0,0:06:57.59,0:07:00.66,yin,,0,0,0,, 你可能会在 iPad 的一个小窗口中使用它们等等 \N{\fs12}you might be using them in a little window inside an iPad, etc.
Dialogue: 0,0:07:00.67,0:07:04.69,yin,,0,0,0,, 我们希望 MVC 的视图是可伸缩的 \N{\fs12}We want to make our views of our MVCs be shrinkable
Dialogue: 0,0:07:04.70,0:07:05.99,yin,,0,0,0,, 至少在某种程度上 \N{\fs12}to at least some extent.
Dialogue: 0,0:07:06.26,0:07:08.17,yin,,0,0,0,, 当然也不要忘记设备的旋转问题 \N{\fs12}And of course, don’t forget device rotation.
Dialogue: 0,0:07:08.30,0:07:09.40,yin,,0,0,0,, 当设备旋转后 \N{\fs12}When you turn your device,
Dialogue: 0,0:07:09.40,0:07:11.51,yin,,0,0,0,, 它突然变成了宽比长高 \N{\fs12}it all of a sudden gets wider than it is tall.
Dialogue: 0,0:07:11.51,0:07:14.35,yin,,0,0,0,, 所有元素都需要移动 以适应新的布局 \N{\fs12}Okay? Well, everything needs to move around to deal with that, too.
Dialogue: 0,0:07:14.54,0:07:16.83,yin,,0,0,0,, 我们会在下周讲这部分内容 \N{\fs12}Okay? So we’ll talk about all of that next week.
Dialogue: 0,0:07:17.32,0:07:20.18,yin,,0,0,0,, 我先让大家看看我要构建的用户界面 \N{\fs12}So let me show you the user interface I want to build here first
Dialogue: 0,0:07:20.19,0:07:21.76,yin,,0,0,0,, 这样你们就会明白我想实现什么目标 \N{\fs12}so that you can kind of understand where I’m headed,
Dialogue: 0,0:07:21.77,0:07:23.26,yin,,0,0,0,, 然后我们再编写代码实现它 \N{\fs12}and then we’ll write the code to do it.
Dialogue: 0,0:07:23.83,0:07:27.06,yin,,0,0,0,, 它主要以一个 UITextView 为中心 \N{\fs12}It’s going to be primarily centered around a UITextView.
Dialogue: 0,0:07:27.06,0:07:31.33,yin,,0,0,0,, 我可以在这里查看能拖拽出的各种对象 \N{\fs12}So here I am looking at all my various things that I can drag out.
Dialogue: 0,0:07:31.51,0:07:33.89,yin,,0,0,0,, 拉到下面 找到 UITextView\N{\fs12}So I’m going to go down here to UITextView,
Dialogue: 0,0:07:33.89,0:07:38.74,yin,,0,0,0,, 应该在这 在哪呢 \N{\fs12}which is right — where is that thing?
Dialogue: 0,0:07:39.12,0:07:39.93,yin,,0,0,0,, 太往下了 \N{\fs12}Too far down.
Dialogue: 0,0:07:40.09,0:07:41.92,yin,,0,0,0,, 我找不到 UITextView 了 \N{\fs12}UITextView — I can’t find it.
Dialogue: 0,0:07:41.92,0:07:43.58,yin,,0,0,0,, 在这呢 \N{\fs12}It’s right there.
Dialogue: 0,0:07:44.03,0:07:46.40,yin,,0,0,0,,UITextView 用来显示多行文本 \N{\fs12}Okay? So UITextView displays multiple lines of text.
Dialogue: 0,0:07:46.40,0:07:47.28,yin,,0,0,0,, 我把它拖出来 \N{\fs12}So I drag it out.
Dialogue: 0,0:07:47.66,0:07:50.96,yin,,0,0,0,, 默认情况下 它是充满全屏的 \N{\fs12}By default it wants to be the whole size of the screen.
Dialogue: 0,0:07:50.96,0:07:53.18,yin,,0,0,0,, 但我其实要在这里加点按钮什么的 \N{\fs12}But I’m actually going to put some other buttons and stuff in here,
Dialogue: 0,0:07:53.30,0:07:56.41,yin,,0,0,0,, 所以我要把它拉小一点 \N{\fs12}so I’m going to resize this to be smaller.
Dialogue: 0,0:07:56.93,0:07:59.21,yin,,0,0,0,, 我还想让它有一点边 \N{\fs12}I also want it to have a little bit of edges here.
Dialogue: 0,0:07:59.21,0:08:01.20,yin,,0,0,0,, 注意 我在 UI 中进行操作时 \N{\fs12}Now, notice that as I do everything in the UI,
Dialogue: 0,0:08:01.21,0:08:03.02,yin,,0,0,0,, 借助了这些蓝色的线 \N{\fs12}I’m using these blue lines.
Dialogue: 0,0:08:03.37,0:08:07.42,yin,,0,0,0,, 我还没真正告诉大家为什么要这么做 \N{\fs12}And I haven’t really told you exactly why that is,
Dialogue: 0,0:08:07.42,0:08:08.72,yin,,0,0,0,, 但是当我们讲到 \N{\fs12}but when we start talking about
Dialogue: 0,0:08:08.74,0:08:11.24,yin,,0,0,0,, 可变大小的视图 \N{\fs12}having these flexible-sized views
Dialogue: 0,0:08:11.24,0:08:12.47,yin,,0,0,0,, 需要调整视图的大小时 \N{\fs12}that are going to want to resize,
Dialogue: 0,0:08:12.68,0:08:15.15,yin,,0,0,0,, 这些蓝线有重要的作用 \N{\fs12}these blue lines play a crucial role.
Dialogue: 0,0:08:15.15,0:08:17.06,yin,,0,0,0,, 所以当你们构建自己的 UI 时 \N{\fs12}And so when you’re building your UIs,
Dialogue: 0,0:08:17.08,0:08:19.29,yin,,0,0,0,, 尽量使用蓝线 \N{\fs12}use the blue lines as much as possible
Dialogue: 0,0:08:19.31,0:08:21.15,yin,,0,0,0,, 因为这样当我们处理自动布局时 \N{\fs12}because then when we start doing autolayout,
Dialogue: 0,0:08:21.51,0:08:24.38,yin,,0,0,0,, 蓝线可以帮助自动布局系统 \N{\fs12}the blue lines are going to help the autolayout system
Dialogue: 0,0:08:24.48,0:08:26.84,yin,,0,0,0,, 明白它们需要做怎样的处理 \N{\fs12}kind of get a clue as to what they should be doing.
Dialogue: 0,0:08:27.80,0:08:28.04,yin,,0,0,0,, 好的 \N{\fs12}All right.
Dialogue: 0,0:08:28.06,0:08:29.31,yin,,0,0,0,, 我要把这个文本视图放在这 \N{\fs12}So I’m going to have this text view here.
Dialogue: 0,0:08:29.31,0:08:31.49,yin,,0,0,0,, 然后我想添加一些文本 \N{\fs12}And what I want to do is have some text.
Dialogue: 0,0:08:31.50,0:08:32.98,yin,,0,0,0,, 我就直接用默认文本了 \N{\fs12}And I’ll just use the default text.
Dialogue: 0,0:08:33.00,0:08:34.74,yin,,0,0,0,, 在创建文本视图时 如果你看这里 \N{\fs12}If you look over here when you create a text view,
Dialogue: 0,0:08:34.74,0:08:38.28,yin,,0,0,0,, 可以看到这些伪拉丁文本 \N{\fs12}you see you get this kind of pseudo-Latin text here.
Dialogue: 0,0:08:39.47,0:08:41.10,yin,,0,0,0,, 我就直接用这段默认文本了 \N{\fs12}Then I’ll just use that as the default.
Dialogue: 0,0:08:41.10,0:08:41.89,yin,,0,0,0,, 所以这就是这个应用运行时 \N{\fs12}So that’s going to be the text
Dialogue: 0,0:08:41.90,0:08:43.34,yin,,0,0,0,, 会显示出的文本 \N{\fs12}that’s going to be in this when I run.
Dialogue: 0,0:08:43.34,0:08:45.82,yin,,0,0,0,, 运行应用时 就会得到这段文本 \N{\fs12}And if I run this, I’ll just get this text.
Dialogue: 0,0:08:46.97,0:08:50.15,yin,,0,0,0,, 但是我还想要选择某些文本 \N{\fs12}But what I want to be able to do is select some of the text.
Dialogue: 0,0:08:50.15,0:08:53.02,yin,,0,0,0,, 所以我要把这段文本设置为可选择的 \N{\fs12}So I’m going to make this text selectable, okay –
Dialogue: 0,0:08:53.12,0:08:55.22,yin,,0,0,0,, 但是不能编辑 只能选择 \N{\fs12}not editable, though; just selectable.
Dialogue: 0,0:08:55.58,0:08:57.21,yin,,0,0,0,, 这样我就能选择这里的某些单词了 \N{\fs12}And so I can select words in here.
Dialogue: 0,0:08:57.21,0:08:59.47,yin,,0,0,0,, 我还想改变单词的颜色 \N{\fs12}And I want to be able to change the color of the words,
Dialogue: 0,0:08:59.66,0:09:03.31,yin,,0,0,0,, 也许在字符外加个轮廓 \N{\fs12}maybe put a little outline around the characters, okay?
Dialogue: 0,0:09:03.31,0:09:07.43,yin,,0,0,0,, 在这里做一些能用属性化字符串实现的功能 \N{\fs12}Do some fun stuff that we can do with attributed string in here.
Dialogue: 0,0:09:08.03,0:09:10.33,yin,,0,0,0,, 我会允许应用做什么呢 \N{\fs12}And what am I going to allow us to do?
Dialogue: 0,0:09:10.33,0:09:11.19,yin,,0,0,0,, 我们看看 \N{\fs12}Well, let’s see.
Dialogue: 0,0:09:11.19,0:09:13.68,yin,,0,0,0,, 我们在下面添加几个按钮 \N{\fs12}Let me go get some buttons down here at the bottom.
Dialogue: 0,0:09:13.97,0:09:16.91,yin,,0,0,0,, 我们加一个添加轮廓功能怎么样 \N{\fs12}How about let’s allow outlining.
Dialogue: 0,0:09:17.10,0:09:19.86,yin,,0,0,0,, 在下面这里添加一个按钮 叫做 Outline\N{\fs12}So I’m going to create a button down here called “Outline.”
Dialogue: 0,0:09:21.20,0:09:24.25,yin,,0,0,0,, 当然了 也可以去除轮廓 \N{\fs12}And of course, let’s also let us unoutline.
Dialogue: 0,0:09:24.99,0:09:26.07,yin,,0,0,0,, 那我就在这里再添加一个按钮 \N{\fs12}So I’ll create another button up here.
Dialogue: 0,0:09:26.08,0:09:27.52,yin,,0,0,0,, 叫它 Unoutline\N{\fs12}I’ll call it “Unoutline.”
Dialogue: 0,0:09:27.85,0:09:31.79,yin,,0,0,0,, 这也许不是个单词 但是可以理解它的功能 \N{\fs12}That’s probably not a word, but we know what we want.
Dialogue: 0,0:09:31.80,0:09:34.40,yin,,0,0,0,, 我同样还要借助蓝线 \N{\fs12}Again, I’m going to use the blue lines to try and get things,
Dialogue: 0,0:09:34.40,0:09:36.63,yin,,0,0,0,, 让它们尽量对齐 \N{\fs12}you know, lined up as much as possible.
Dialogue: 0,0:09:37.00,0:09:38.65,yin,,0,0,0,, 我们把这个按钮放在这个角 \N{\fs12}This guy, let’s put him right in the corner.
Dialogue: 0,0:09:38.65,0:09:40.36,yin,,0,0,0,, 让这些按钮基准线对齐 \N{\fs12}These guys will line the base lines up.
Dialogue: 0,0:09:40.36,0:09:42.02,yin,,0,0,0,, 这就是这两条线的含义 \N{\fs12}That’s what the double line right there means,
Dialogue: 0,0:09:42.02,0:09:45.11,yin,,0,0,0,, 代表其他按钮所对齐的基准线 \N{\fs12}that the baseline of the other button line up.
Dialogue: 0,0:09:45.79,0:09:48.49,yin,,0,0,0,, 同样 右边线也对齐了 \N{\fs12}And we got, also, this right line was lined up.
Dialogue: 0,0:09:48.49,0:09:51.10,yin,,0,0,0,, 这样它们就会紧跟边缘变化 保持对齐 \N{\fs12}So they’re going to stick to the edges and stay lined up.
Dialogue: 0,0:09:52.33,0:09:57.22,yin,,0,0,0,, 我们允许添加和去除轮廓 \N{\fs12}So we’ll allow outlining and unoutlining.
Dialogue: 0,0:09:57.24,0:09:58.90,yin,,0,0,0,, 我还要允许设置颜色 \N{\fs12}And then also, I’m going to allow setting colors.
Dialogue: 0,0:09:58.90,0:10:00.58,yin,,0,0,0,, 我要用的方法很有意思 \N{\fs12}And the way I’m going to do that is kind of fun.
Dialogue: 0,0:10:00.86,0:10:02.17,yin,,0,0,0,, 我们先拖出一个按钮 \N{\fs12}So let’s get a button out here.
Dialogue: 0,0:10:02.47,0:10:05.65,yin,,0,0,0,, 正好可以讲一下如何改变大小 \N{\fs12}This is a good way to talk about if I’m resizing,
Dialogue: 0,0:10:05.65,0:10:08.09,yin,,0,0,0,, 我想让这个按钮大小为 6464\N{\fs12}I want this button to be 64 by 64.
Dialogue: 0,0:10:08.09,0:10:09.51,yin,,0,0,0,, 我知道这个尺寸很合适 \N{\fs12}I know that that’s a good size.
Dialogue: 0,0:10:09.67,0:10:12.77,yin,,0,0,0,, 我可以一点点调整 将它设置为我想要的准确大小 \N{\fs12}And I could try and get it exactly the size I want.
Dialogue: 0,0:10:12.84,0:10:15.45,yin,,0,0,0,, 但是如果你知道目标尺寸 这样做更简单 \N{\fs12}But it’s actually much easier — if you know the size you want –
Dialogue: 0,0:10:15.70,0:10:17.74,yin,,0,0,0,, 也就是打开这里的尺寸检查器 \N{\fs12}to go over here in the size inspector.
Dialogue: 0,0:10:17.84,0:10:18.96,yin,,0,0,0,, 看到这个尺寸检查器了吗 \N{\fs12}You see this size inspector?
Dialogue: 0,0:10:19.09,0:10:22.69,yin,,0,0,0,, 你可以在这里直接输入 我想要 6464 的 \N{\fs12}And you can just type in, “I want 64 by 64,” okay?
Dialogue: 0,0:10:23.08,0:10:24.93,yin,,0,0,0,, 关于尺寸检查器的内容 \N{\fs12}So this size inspector, we’re going to see
Dialogue: 0,0:10:25.23,0:10:27.99,yin,,0,0,0,, 我们会在讲自动布局时详细讲解 \N{\fs12}when we start talking about autolayout a lot
Dialogue: 0,0:10:28.00,0:10:29.63,yin,,0,0,0,, 下面会有很多内容 \N{\fs12}there’s going to be a lot of stuff down here,
Dialogue: 0,0:10:29.63,0:10:32.17,yin,,0,0,0,, 代表元素在改变尺寸后 \N{\fs12}describing how this thing gets constrained
Dialogue: 0,0:10:32.17,0:10:33.38,yin,,0,0,0,, 具有怎样的约束 \N{\fs12}when things change size.
Dialogue: 0,0:10:33.59,0:10:35.61,yin,,0,0,0,, 这里同样可以设置尺寸 \N{\fs12}But it’s also good for setting the size.
Dialogue: 0,0:10:35.61,0:10:36.63,yin,,0,0,0,, 尺寸设置好以后 \N{\fs12}And then once the size is set,
Dialogue: 0,0:10:36.63,0:10:38.58,yin,,0,0,0,, 我把它放在一个合适的地方 像这样 \N{\fs12}I’ll move into a nice spot like that.
Dialogue: 0,0:10:39.13,0:10:41.91,yin,,0,0,0,, 现在我可以加一个单词 Red 红色 \N{\fs12}Now, I could put, like, the word “Red” here
Dialogue: 0,0:10:42.06,0:10:44.26,yin,,0,0,0,, 将 Red 显示在按钮上 \N{\fs12}and make this a button that has the word “Red” on it.
Dialogue: 0,0:10:44.26,0:10:46.10,yin,,0,0,0,, 我可以让文本变为红色 \N{\fs12}And I could make the text be red.
Dialogue: 0,0:10:46.10,0:10:47.36,yin,,0,0,0,, 这就是我希望这个按钮实现的功能 \N{\fs12}That’s what I want this button to do.
Dialogue: 0,0:10:47.36,0:10:50.52,yin,,0,0,0,, 当我点击按钮后 我希望选中的文本变为红色 \N{\fs12}When I click here, I want whatever’s selected to turn red.
Dialogue: 0,0:10:50.71,0:10:54.16,yin,,0,0,0,, 但我不想用单词表示 我想直接使用颜色 \N{\fs12}But instead of using words, I’m actually going to use the color.
Dialogue: 0,0:10:54.16,0:10:56.07,yin,,0,0,0,, 我只要转到检查器 \N{\fs12}I’m just going to go to the inspector.
Dialogue: 0,0:10:56.31,0:11:03.23,yin,,0,0,0,, 因为按钮继承自控制 而控制继承自视图 \N{\fs12}And since a button inherits from control and control inherits from view,
Dialogue: 0,0:11:03.40,0:11:05.97,yin,,0,0,0,, 明白继承层次在检查器中是怎样的了吧 \N{\fs12}see how that inheritance hierarchy is working in the inspector,
Dialogue: 0,0:11:06.16,0:11:09.96,yin,,0,0,0,, 我要到下面这里改变它的背景颜色 \N{\fs12}I’m going to go down here and change its background color,
Dialogue: 0,0:11:10.12,0:11:11.42,yin,,0,0,0,, 这和我们之前 \N{\fs12}which is the same thing we did
Dialogue: 0,0:11:11.42,0:11:14.26,yin,,0,0,0,, 设置整个视图的背景为绿色的操作是一样的 \N{\fs12}when we set the background of the whole view to green.
Dialogue: 0,0:11:14.85,0:11:17.74,yin,,0,0,0,, 我要将它设置为 比如说红色 \N{\fs12}And I’m going to set this one to — let’s say this one’s red.
Dialogue: 0,0:11:18.50,0:11:20.70,yin,,0,0,0,, 现在我就有了一个好看的红色按钮 \N{\fs12}Okay? So now I have a nice red button here.
Dialogue: 0,0:11:20.70,0:11:21.72,yin,,0,0,0,, 当我点击这个按钮 \N{\fs12}And when I click on this,
Dialogue: 0,0:11:21.74,0:11:23.81,yin,,0,0,0,, 我要将它连起来 让文本变为红色 \N{\fs12}I’m going to have to wire it up to make this turn red.
Dialogue: 0,0:11:23.81,0:11:26.76,yin,,0,0,0,, 我们再添加一些其他颜色的按钮 \N{\fs12}So let’s make some more buttons here of different colors.
Dialogue: 0,0:11:26.87,0:11:28.66,yin,,0,0,0,, 同样 借助蓝线 \N{\fs12}Again, I’m using the blue lines.
Dialogue: 0,0:11:28.84,0:11:31.13,yin,,0,0,0,, 看到它们沿线对齐了吗 \N{\fs12}See how they’re snapping in place?
Dialogue: 0,0:11:31.75,0:11:33.19,yin,,0,0,0,, 借助蓝线 \N{\fs12}Okay. Getting blue lines –
Dialogue: 0,0:11:33.20,0:11:35.26,yin,,0,0,0,, 当然要尽可能多地使用蓝线 \N{\fs12}definitely want blue lines as much as possible.
Dialogue: 0,0:11:36.80,0:11:40.36,yin,,0,0,0,, 这里我们把它的背景设为绿色 \N{\fs12}So here let’s make this background be green.
Dialogue: 0,0:11:40.83,0:11:42.69,yin,,0,0,0,, 把它设为橙色 \N{\fs12}I’ll make this one be orange,
Dialogue: 0,0:11:42.72,0:11:45.50,yin,,0,0,0,, 把它设为紫色 \N{\fs12}make this one be — oh, I don’t know — purple.
Dialogue: 0,0:11:45.65,0:11:47.98,yin,,0,0,0,, 好了 现在我们有了设置颜色和轮廓按钮 \N{\fs12}Okay? So now we have some colors and some outlines.
Dialogue: 0,0:11:48.25,0:11:51.40,yin,,0,0,0,, 然后我们把它…\N{\fs12}And then let’s also make this thing –
Dialogue: 0,0:11:52.24,0:11:54.90,yin,,0,0,0,, 我们在上面这里再加一个标题吧 \N{\fs12}well, let’s put a headline at the top here, too.
Dialogue: 0,0:11:55.20,0:11:56.50,yin,,0,0,0,, 再拖出一个按钮 \N{\fs12}So let me grab another button –
Dialogue: 0,0:11:57.51,0:11:59.13,yin,,0,0,0,, 实际上 这里用标签就可以了 \N{\fs12}actually, let’s do a label for this one
Dialogue: 0,0:11:59.13,0:12:00.60,yin,,0,0,0,, 因为它不需要点击功能 \N{\fs12}because we’re not going to make it clickable.
Dialogue: 0,0:12:00.92,0:12:02.55,yin,,0,0,0,, 所以我要在上面这里添加一个标签 \N{\fs12}So I’m going to put a label here at the top.
Dialogue: 0,0:12:02.81,0:12:06.22,yin,,0,0,0,, 加上比如说 CS193p Rocks\N{\fs12}I’m going to put something like “CS193p Rocks.”
Dialogue: 0,0:12:06.89,0:12:09.88,yin,,0,0,0,, 这就是它的标题 \N{\fs12}Okay. So that’s just going to be my title of this thing.
Dialogue: 0,0:12:09.93,0:12:11.03,yin,,0,0,0,, 我希望它居中 看起来好看一点 \N{\fs12}I want it nice and centered.
Dialogue: 0,0:12:11.70,0:12:13.75,yin,,0,0,0,, 把它移到上面 \N{\fs12}Let’s move this up so that it’s locked.
Dialogue: 0,0:12:14.00,0:12:16.95,yin,,0,0,0,, 调整至最大尺寸 \N{\fs12}Let’s resize it so it’s maximum space. It locks.
Dialogue: 0,0:12:17.25,0:12:19.00,yin,,0,0,0,, 现在我就完成了这个好看的用户界面 \N{\fs12}And so now I’ve got this nice user interface.
Dialogue: 0,0:12:19.14,0:12:20.77,yin,,0,0,0,, 所有元素都借助了蓝线 \N{\fs12}I’ve used blue guidelines for everything;
Dialogue: 0,0:12:20.78,0:12:22.32,yin,,0,0,0,, 它们都贴着某条蓝线 \N{\fs12}everyone’s sticking on a blue guideline.
Dialogue: 0,0:12:22.32,0:12:24.50,yin,,0,0,0,, 这样处理 非常有利于 \N{\fs12}That’s going to be really advantageous for us
Dialogue: 0,0:12:24.67,0:12:26.50,yin,,0,0,0,, 实现它的自动布局功能 \N{\fs12}when we try to do autolayout with it.
Dialogue: 0,0:12:27.32,0:12:28.40,yin,,0,0,0,, 现在 我们讲讲 \N{\fs12}Now, let’s talk a little bit
Dialogue: 0,0:12:28.41,0:12:29.95,yin,,0,0,0,, 我想在这里用的字体 \N{\fs12}about the fonts I want to use here.
Dialogue: 0,0:12:29.95,0:12:32.26,yin,,0,0,0,, 我在幻灯片中讲过了 \N{\fs12}And I told you in the slides
Dialogue: 0,0:12:32.44,0:12:35.65,yin,,0,0,0,, 在显示用户内容时 \N{\fs12}that when you’re displaying user content, okay,
Dialogue: 0,0:12:35.99,0:12:39.34,yin,,0,0,0,, 最好使用系统推荐字体 \N{\fs12}you want to use the preferred fonts of the system.
Dialogue: 0,0:12:39.66,0:12:42.67,yin,,0,0,0,, 我就要这样做 对它 \N{\fs12}Okay? And that’s what I’m going to do, both for this guy.
Dialogue: 0,0:12:42.67,0:12:44.44,yin,,0,0,0,, 它显然是用户内容 \N{\fs12}This is clearly the user content.
Dialogue: 0,0:12:44.68,0:12:47.12,yin,,0,0,0,, 这两个按钮不是用户内容 \N{\fs12}These two buttons are not user content.
Dialogue: 0,0:12:47.13,0:12:49.33,yin,,0,0,0,, 它们继续使用系统字体 \N{\fs12}They’re going to stay the system fonts, okay,
Dialogue: 0,0:12:49.33,0:12:50.42,yin,,0,0,0,, 因为它们是按钮 \N{\fs12}because they’re buttons.
Dialogue: 0,0:12:50.95,0:12:54.48,yin,,0,0,0,, 但是这个标题和正文是用户内容 \N{\fs12}But this title and this body are kind of user contents.
Dialogue: 0,0:12:54.49,0:12:56.79,yin,,0,0,0,, 你可以质疑这个标题算不上是用户内容 \N{\fs12}You could argue that the title is not quite user content,
Dialogue: 0,0:12:56.81,0:12:57.77,yin,,0,0,0,, 但它确实算是 \N{\fs12}but it kind of is.
Dialogue: 0,0:12:57.77,0:12:59.52,yin,,0,0,0,, 它可能通过本地化变为另外一种语言 \N{\fs12}It might get localized to another language
Dialogue: 0,0:12:59.82,0:13:01.85,yin,,0,0,0,, 或者根据应用内容的不同变为其他文本 \N{\fs12}or it might change, depending on what’s going on.
Dialogue: 0,0:13:01.85,0:13:02.36,yin,,0,0,0,, 我也不知道 \N{\fs12}I don’t know.
Dialogue: 0,0:13:02.36,0:13:04.24,yin,,0,0,0,, 但它确实属于标题 \N{\fs12}But it’s really kind of a headline.
Dialogue: 0,0:13:04.71,0:13:06.72,yin,,0,0,0,, 所以我要用标题字体 \N{\fs12}So I’m going to use the headline font
Dialogue: 0,0:13:07.15,0:13:09.92,yin,,0,0,0,, 来显示这里的标签 \N{\fs12}to display this guy right here –
Dialogue: 0,0:13:09.97,0:13:11.70,yin,,0,0,0,, 实际上 我还想让它居中 \N{\fs12}actually, I also want this centered.
Dialogue: 0,0:13:12.29,0:13:12.75,yin,,0,0,0,, 好吧 \N{\fs12}All right.
Dialogue: 0,0:13:12.75,0:13:14.42,yin,,0,0,0,, 确认一下它是居中的 \N{\fs12}So let’s make sure that’s centered.
Dialogue: 0,0:13:14.67,0:13:17.48,yin,,0,0,0,, 选择标题字体 \N{\fs12}And so the way you pick the headline font,
Dialogue: 0,0:13:17.49,0:13:19.22,yin,,0,0,0,, 标题样式推荐字体的方法是 \N{\fs12}the preferred font which is headline,
Dialogue: 0,0:13:19.53,0:13:23.07,yin,,0,0,0,, 检查标签 然后选择这里的字体 \N{\fs12}is you inspect the label and you go here to the fonts.
Dialogue: 0,0:13:23.11,0:13:25.35,yin,,0,0,0,, 可以看到目前设置为系统字体 \N{\fs12}And you can see that it’s currently set to be a system font.
Dialogue: 0,0:13:25.54,0:13:29.37,yin,,0,0,0,, 我要向下找到文本样式 选择标题 \N{\fs12}And I’m going to go down here to text styles and pick headline.
Dialogue: 0,0:13:29.85,0:13:31.20,yin,,0,0,0,, 这如果用代码来实现 \N{\fs12}And that’s basically in the code
Dialogue: 0,0:13:31.22,0:13:34.76,yin,,0,0,0,, 基本就是 preferredFontForTextStyle: Headline\N{\fs12}like saying preferred font for text style headline.
Dialogue: 0,0:13:35.09,0:13:36.55,yin,,0,0,0,, 可以看到这里变了 \N{\fs12}And you can see it change there.
Dialogue: 0,0:13:36.66,0:13:38.86,yin,,0,0,0,, 加粗了一点 \N{\fs12}Kind of got a little bold to it.
Dialogue: 0,0:13:39.85,0:13:41.25,yin,,0,0,0,, 现在它是标题字体了 \N{\fs12}It’s now the headline font.
Dialogue: 0,0:13:41.57,0:13:43.20,yin,,0,0,0,, 文本视图也是一样 \N{\fs12}And the same thing here, the text view,
Dialogue: 0,0:13:43.20,0:13:46.13,yin,,0,0,0,, 我也要将它设置为推荐字体 \N{\fs12}I’m also going to set it to use a preferred font.
Dialogue: 0,0:13:46.13,0:13:48.17,yin,,0,0,0,, 但是这里我要选择正文字体 \N{\fs12}But in this case I’m going to use the body font
Dialogue: 0,0:13:48.18,0:13:49.11,yin,,0,0,0,, 因为很明显 \N{\fs12}because this is clearly, like,
Dialogue: 0,0:13:49.11,0:13:52.92,yin,,0,0,0,, 它是这个窗口中内容的正文 \N{\fs12}the body of this content in this window.
Dialogue: 0,0:13:52.92,0:13:55.06,yin,,0,0,0,, 现在我已经将它们设置为了推荐字体 \N{\fs12}So now I’ve set these things to have the preferred fonts
Dialogue: 0,0:13:55.07,0:13:56.67,yin,,0,0,0,, 不再是系统字体了 \N{\fs12}rather than the system fonts.
Dialogue: 0,0:13:56.67,0:13:59.71,yin,,0,0,0,, 这基本上就是需要设置的全部内容了 \N{\fs12}And that’s pretty much all that’s required to set that up.
Dialogue: 0,0:13:59.71,0:14:01.41,yin,,0,0,0,, 这就是我的 UI\N{\fs12}So that’s my UI.
Dialogue: 0,0:14:01.50,0:14:02.03,yin,,0,0,0,, 明白吗 \N{\fs12}All right?
Dialogue: 0,0:14:02.26,0:14:03.50,yin,,0,0,0,, 有问题吗 \N{\fs12}So yeah, question?
Dialogue: 0,0:14:04.63,0:14:08.47,yin,,0,0,0,,iOS 中是否有制作圆角按钮的简便方法 \N{\fs12}In iOS is there an easy way to round out the corners of those buttons,
Dialogue: 0,0:14:08.49,0:14:11.73,yin,,0,0,0,, 还是说必须做很多蒙版 \N{\fs12}or do you have to go through, like, a lot of masking?
Dialogue: 0,0:14:11.88,0:14:14.18,yin,,0,0,0,, 问题是 如果我想将这些按钮 \N{\fs12}Yeah, so the question is: If I wanted these to be, like,
Dialogue: 0,0:14:14.18,0:14:15.67,yin,,0,0,0,, 变为圆角矩形 \N{\fs12}rounded rect buttons –
Dialogue: 0,0:14:15.84,0:14:18.74,yin,,0,0,0,, 在 iOS7 中 \N{\fs12}which it’s not really a thing in iOS 7
Dialogue: 0,0:14:18.74,0:14:20.36,yin,,0,0,0,, 圆角矩形按钮很容易实现 \N{\fs12}to have rounded rect buttons, by the way;
Dialogue: 0,0:14:20.37,0:14:23.44,yin,,0,0,0,, 在 iOS6 中是个问题 但在 iOS7 中就不是很麻烦了 \N{\fs12}it was a thing in iOS 6, but not so much a thing in iOS 7 –
Dialogue: 0,0:14:23.94,0:14:25.13,yin,,0,0,0,, 实现圆角矩形有多难呢 \N{\fs12}how difficult would this be?
Dialogue: 0,0:14:25.13,0:14:26.44,yin,,0,0,0,, 答案是不会那么麻烦 \N{\fs12}And the answer is it wouldn’t be that bad.
Dialogue: 0,0:14:26.55,0:14:27.41,yin,,0,0,0,, 并不是很难 \N{\fs12}It wouldn’t be that hard.
Dialogue: 0,0:14:27.41,0:14:28.16,yin,,0,0,0,, 有一个机制 \N{\fs12}There’s a mechanism.
Dialogue: 0,0:14:28.16,0:14:30.98,yin,,0,0,0,, 圆角矩形用一行代码就可以实现 \N{\fs12}Rounded rect is a one-liner to create a rounded rect.
Dialogue: 0,0:14:32.34,0:14:34.42,yin,,0,0,0,, 我们也许并不会改变这些 UI 按钮 \N{\fs12}And probably we wouldn’t make these UI buttons;
Dialogue: 0,0:14:34.42,0:14:35.60,yin,,0,0,0,, 只是改变它们的视图 \N{\fs12}we’d just make them views.
Dialogue: 0,0:14:35.82,0:14:38.68,yin,,0,0,0,, 只用一行代码就可以编写一个点击手势 \N{\fs12}And it’s really a one-liner to have a tap gesture,
Dialogue: 0,0:14:38.69,0:14:40.55,yin,,0,0,0,, 点击它 让它执行某些操作 \N{\fs12}to tap on it and cause it to do something.
Dialogue: 0,0:14:40.82,0:14:43.90,yin,,0,0,0,, 所以只用几行代码 并不是很难 \N{\fs12}So, you know, a few lines of code is really not that difficult.
Dialogue: 0,0:14:44.22,0:14:46.10,yin,,0,0,0,, 实际上 不只是圆角矩形 \N{\fs12}In fact, you can make it not just rounded rect
Dialogue: 0,0:14:46.11,0:14:48.27,yin,,0,0,0,, 你可以将它变为任意形状 \N{\fs12}but any shape that you wanted there, whatever.
Dialogue: 0,0:14:48.49,0:14:48.80,yin,,0,0,0,, 有问题吗 \N{\fs12}Question?
Dialogue: 0,0:14:48.86,0:14:51.74,yin,,0,0,0,, 有没有什么方法能够添加 CSS 文件呢 \N{\fs12}Is there any way to include, like, CSS in it though or no?
Dialogue: 0,0:14:51.93,0:14:54.28,yin,,0,0,0,, 问题是 有没有什么方法能加入 CSS 文件 \N{\fs12}So the question is: Is there any way to include CSS?
Dialogue: 0,0:14:55.87,0:14:57.68,yin,,0,0,0,, 没有什么直接的方法 \N{\fs12}Not really directly.
Dialogue: 0,0:14:57.68,0:15:00.17,yin,,0,0,0,, 但是 比如说这些推荐字体 \N{\fs12}However, these preferred fonts, for example,
Dialogue: 0,0:15:00.18,0:15:01.91,yin,,0,0,0,, 就用到了 CSS 系统 \N{\fs12}are plugged into the CSS system.
Dialogue: 0,0:15:01.93,0:15:06.26,yin,,0,0,0,, 如果你的应用中某些内容来源于 CSS\N{\fs12}So if you have content in your app that is coming from CSS source,
Dialogue: 0,0:15:06.27,0:15:07.38,yin,,0,0,0,, 比如网页视图之类的 \N{\fs12}you know, on a web view or something –
Dialogue: 0,0:15:07.40,0:15:08.61,yin,,0,0,0,, 我们还没讲过这部分内容 \N{\fs12}we haven’t talked about any of that yet,
Dialogue: 0,0:15:08.63,0:15:09.70,yin,,0,0,0,, 但是你可以这样做 \N{\fs12}but you could do that –
Dialogue: 0,0:15:09.71,0:15:12.73,yin,,0,0,0,, 字体会进行匹配 彼此同步 \N{\fs12}the fonts can match up and all synchronize with each other.
Dialogue: 0,0:15:12.80,0:15:14.23,yin,,0,0,0,, 所以有一些同步性的处理 \N{\fs12}So there’s some synchronicity there,
Dialogue: 0,0:15:14.23,0:15:15.78,yin,,0,0,0,, 但是你不能直接显示 \N{\fs12}but you can’t directly display.
Dialogue: 0,0:15:17.46,0:15:20.00,yin,,0,0,0,, 好的 接下来我们看看代码 \N{\fs12}Okay. So let’s look at the code
Dialogue: 0,0:15:20.15,0:15:22.55,yin,,0,0,0,, 让这个用户界面实现我们想要的功能 \N{\fs12}to make this user interface do what we want.
Dialogue: 0,0:15:22.55,0:15:24.78,yin,,0,0,0,, 打开系统编辑器 \N{\fs12}So I’m going to get my system editor up here.
Dialogue: 0,0:15:25.67,0:15:27.09,yin,,0,0,0,, 把这部分移到最左边 \N{\fs12}Let’s put that right on the edge.
Dialogue: 0,0:15:27.10,0:15:31.13,yin,,0,0,0,, 腾出更大地方 方便显示更多代码 \N{\fs12}Let’s make some more space so you can see more code.
Dialogue: 0,0:15:31.76,0:15:37.10,yin,,0,0,0,, 可以看到 默认的视图控制器中有一个这样的方法 \N{\fs12}And you can see that my default view controller has this method here,
Dialogue: 0,0:15:37.12,0:15:39.93,yin,,0,0,0,,viewDidLoad 它是视图控制器生命周期的一部分 \N{\fs12}viewDidLoad, which is part of the view controller lifecycle
Dialogue: 0,0:15:40.13,0:15:41.55,yin,,0,0,0,, 我们等下就会讲到这部分 \N{\fs12}that we’re going to talk about in a second
Dialogue: 0,0:15:41.77,0:15:43.32,yin,,0,0,0,, 还有这个 didReceiveMemoryWarning 方法 \N{\fs12}and also didReceiveMemoryWarning,
Dialogue: 0,0:15:43.32,0:15:46.56,yin,,0,0,0,, 严格来说 它并不属于视图控制器生命周期 \N{\fs12}which is not strictly speaking part of the view controller lifecycle
Dialogue: 0,0:15:47.29,0:15:49.03,yin,,0,0,0,, 但是我还是会把它 \N{\fs12}but I’m going to talk about it
Dialogue: 0,0:15:49.03,0:15:50.66,yin,,0,0,0,, 放在视图控制器生命周期中讲 \N{\fs12}as part of the view controller lifecycle.
Dialogue: 0,0:15:51.13,0:15:52.72,yin,,0,0,0,, 今天我不会对它进行演示 \N{\fs12}I’m not going to demo that today,
Dialogue: 0,0:15:52.72,0:15:55.37,yin,,0,0,0,, 但是稍后我会演示 viewDidLoad 的用法 \N{\fs12}but I am later going to demo viewDidLoad.
Dialogue: 0,0:15:55.55,0:15:56.91,yin,,0,0,0,, 所以我们把它留下 \N{\fs12}So we’ll leave that in there for now.
Dialogue: 0,0:15:56.91,0:16:00.02,yin,,0,0,0,, 现在它什么都做不了 只有 super 调用和一条注释 \N{\fs12}Right now it doesn’t do anything except for call super and have a comment.
Dialogue: 0,0:16:00.25,0:16:00.71,yin,,0,0,0,, 对吧 \N{\fs12}Okay?
Dialogue: 0,0:16:01.48,0:16:04.63,yin,,0,0,0,, 那么我需要在这里做什么呢 \N{\fs12}So what do I need to do here?
Dialogue: 0,0:16:04.81,0:16:05.95,yin,,0,0,0,, 两件事情 \N{\fs12}Couple of things.
Dialogue: 0,0:16:05.95,0:16:08.03,yin,,0,0,0,, 一是我想要设置 \N{\fs12}One, I’m going to want to be setting
Dialogue: 0,0:16:08.16,0:16:10.59,yin,,0,0,0,, 它的可变字符串属性 \N{\fs12}the mutable string attributes of this thing,
Dialogue: 0,0:16:10.75,0:16:12.01,yin,,0,0,0,, 所以我需要一个连接到它的输出口 \N{\fs12}so I need an outlet to this.
Dialogue: 0,0:16:12.02,0:16:15.55,yin,,0,0,0,, 我只要按住 control 键拖动到这里 创建一个输出口 \N{\fs12}So I’m just going to control drag here to create an outlet.
Dialogue: 0,0:16:15.56,0:16:17.62,yin,,0,0,0,, 我要叫它 body\N{\fs12}I’m going to call it “body,” okay,
Dialogue: 0,0:16:17.63,0:16:18.95,yin,,0,0,0,, 因为它就像是我的正文 \N{\fs12}because it’s kind of like my body.
Dialogue: 0,0:16:19.96,0:16:22.30,yin,,0,0,0,, 可以看到它是一个 UITextView\N{\fs12}Text view, you can see that it’s a UITextView.
Dialogue: 0,0:16:22.30,0:16:25.35,yin,,0,0,0,, 我可以向 body 发送消息 \N{\fs12}And I’m going to be able to send a message to this body
Dialogue: 0,0:16:25.35,0:16:27.43,yin,,0,0,0,, 得到它保存文本的可变字符串 \N{\fs12}to get its text storage mutable string.
Dialogue: 0,0:16:27.43,0:16:29.35,yin,,0,0,0,, 然后我可以设置属性了 \N{\fs12}And then I’m just going to start setting attributes.
Dialogue: 0,0:16:29.51,0:16:30.76,yin,,0,0,0,, 对吧 就是这么简单 \N{\fs12}Okay? It’s as simple as that.
Dialogue: 0,0:16:31.39,0:16:33.16,yin,,0,0,0,, 我还要再向这里添加一个输出口 \N{\fs12}You know, I’m also going to grab one to this,
Dialogue: 0,0:16:33.16,0:16:34.36,yin,,0,0,0,, 等下你们就会知道原因 \N{\fs12}and you’ll see why later.
Dialogue: 0,0:16:34.44,0:16:37.30,yin,,0,0,0,, 我要叫它 headline\N{\fs12}I’m going to call this my “headline,” Okay?
Dialogue: 0,0:16:37.58,0:16:41.51,yin,,0,0,0,, 我也可以叫它 header 或者 heading\N{\fs12}And so I could call that my “header,” or my “heading,”
Dialogue: 0,0:16:41.51,0:16:43.62,yin,,0,0,0,, 或者 title label 之类的 \N{\fs12}or “title label,” or something like that.
Dialogue: 0,0:16:43.63,0:16:45.37,yin,,0,0,0,, 这里我就要叫它 headline 了 \N{\fs12}I’m going to call it “headline” just here
Dialogue: 0,0:16:45.38,0:16:47.44,yin,,0,0,0,, 用来强调我们讨论的是推荐字体 \N{\fs12}to emphasize that we’re talking about preferred fonts
Dialogue: 0,0:16:47.44,0:16:49.32,yin,,0,0,0,, 我也会在示例中演示这一部分 \N{\fs12}because I’m going to be showing that in the demo as well.
Dialogue: 0,0:16:50.49,0:16:51.97,yin,,0,0,0,, 我们设置好了 body 和 headline 两个输出口 \N{\fs12}So we’ve got this body and the headline.
Dialogue: 0,0:16:51.97,0:16:55.43,yin,,0,0,0,, 我们可以设置标题 \N{\fs12}We could conceivably set things about the headline.
Dialogue: 0,0:16:55.43,0:16:56.49,yin,,0,0,0,, 我没有时间具体操作了 \N{\fs12}I don’t really have time for that,
Dialogue: 0,0:16:56.51,0:16:58.90,yin,,0,0,0,, 但是我们会对这里的正文进行设置 \N{\fs12}but we will be setting things in here.
Dialogue: 0,0:16:59.31,0:17:00.79,yin,,0,0,0,, 这里有这些用于改变颜色的按钮 \N{\fs12}We’ve got these colored buttons.
Dialogue: 0,0:17:00.85,0:17:02.40,yin,,0,0,0,, 我们先实现这部分 \N{\fs12}Let’s do those first.
Dialogue: 0,0:17:02.40,0:17:03.74,yin,,0,0,0,, 所以我要按住 control 键进行拖拽 \N{\fs12}So I’m going to control drag here
Dialogue: 0,0:17:03.76,0:17:07.06,yin,,0,0,0,, 这样当我们按下按钮时 会发送操作 \N{\fs12}to have an action sent when we press on that button.
Dialogue: 0,0:17:07.92,0:17:09.89,yin,,0,0,0,, 我要叫这个操作为 \N{\fs12}I’m going to call this action
Dialogue: 0,0:17:10.15,0:17:18.13,yin,,0,0,0,,changeBodySelectionColorToMatchBackgroundOfButton 将所选正文颜色变为按钮背景颜色 \N{\fs12}”changeBodySelectionColorToMatchBackgroundOfButton.”
Dialogue: 0,0:17:18.38,0:17:20.21,yin,,0,0,0,, 你们可能觉得很好笑 心里想着 \N{\fs12}Okay? Now, you might laugh and say,
Dialogue: 0,0:17:20.23,0:17:22.92,yin,,0,0,0,, 这个方法的名字真长 \N{\fs12}”Whoa, that’s a long name method.”
Dialogue: 0,0:17:23.12,0:17:25.54,yin,,0,0,0,, 但在 Objective-C 尤其是 iOS 中 \N{\fs12}But long name methods are kind of preferred
Dialogue: 0,0:17:26.11,0:17:31.34,yin,,0,0,0,, 倾向于使用较长的方法名称 \N{\fs12}generally in Objective-C and especially in iOS
Dialogue: 0,0:17:31.46,0:17:34.49,yin,,0,0,0,, 因为 Xcode 会帮助你补全名称 \N{\fs12}because Xcode’s going to help you escape complete these things.
Dialogue: 0,0:17:34.64,0:17:37.40,yin,,0,0,0,, 如果你可以为方法起一个这样的名称 \N{\fs12}And if you can have a method name like this
Dialogue: 0,0:17:37.40,0:17:40.41,yin,,0,0,0,, 准确表达出方法的作用 \N{\fs12}that really matches and says exactly what it does,
Dialogue: 0,0:17:40.41,0:17:41.50,yin,,0,0,0,, 是一件很好的事情 \N{\fs12}that can be a good thing.
Dialogue: 0,0:17:41.88,0:17:43.98,yin,,0,0,0,, 这属于编程的艺术 \N{\fs12}It’s an art of programming thing.
Dialogue: 0,0:17:44.43,0:17:46.62,yin,,0,0,0,, 我要将参数变为 UIButton\N{\fs12}I’m going to change the argument to be a UIButton,
Dialogue: 0,0:17:46.62,0:17:49.04,yin,,0,0,0,, 和我们之前在 Connect 中所做操作一样 \N{\fs12}just like we did before in Connect.
Dialogue: 0,0:17:49.28,0:17:50.72,yin,,0,0,0,, 这个方法是做什么的 \N{\fs12}So what does this method do?
Dialogue: 0,0:17:50.72,0:17:52.77,yin,,0,0,0,, 希望通过这个长名字 \N{\fs12}Well, hopefully with that long name
Dialogue: 0,0:17:52.78,0:17:54.16,yin,,0,0,0,, 可以清楚地说明它的作用 \N{\fs12}it’s clear what that does, right?
Dialogue: 0,0:17:54.37,0:17:58.52,yin,,0,0,0,, 不管选中了这里正文的哪些内容 \N{\fs12}It changes whatever the selection is in our body right here,
Dialogue: 0,0:17:58.61,0:18:00.08,yin,,0,0,0,, 这个方法都会将选中文本的颜色 \N{\fs12}it changes the color of that
Dialogue: 0,0:18:00.35,0:18:02.99,yin,,0,0,0,, 设置为这个按钮的视图背景颜色 \N{\fs12}to match the background view of this button.
Dialogue: 0,0:18:03.61,0:18:05.05,yin,,0,0,0,, 这就是这个方法的功能 \N{\fs12}Okay? That’s what this method is going to do.
Dialogue: 0,0:18:05.23,0:18:06.89,yin,,0,0,0,, 这个方法只需要一行代码 \N{\fs12}This method is one line of code.
Dialogue: 0,0:18:07.55,0:18:09.52,yin,,0,0,0,, 我们来看看这行代码 \N{\fs12}Okay? So let’s look at that one line of code.
Dialogue: 0,0:18:10.80,0:18:14.74,yin,,0,0,0,, 我们需要设置正文中可变字符串的属性 \N{\fs12}We need to set attributes of the mutable string of our body.
Dialogue: 0,0:18:14.74,0:18:17.82,yin,,0,0,0,, 所以这里我要写 self.body.textStorage\N{\fs12}So I’m going to say self.body.textStorage.
Dialogue: 0,0:18:18.09,0:18:21.51,yin,,0,0,0,, 我得到了 NSMutableAttributedString\N{\fs12}Now I have the NSMutableAttributedString –
Dialogue: 0,0:18:21.51,0:18:22.98,yin,,0,0,0,,textStorage 是它的一个子类 \N{\fs12}textStorage is a subclass of it –
Dialogue: 0,0:18:23.00,0:18:24.80,yin,,0,0,0,, 但它是一个 NSMutableString\N{\fs12}but it is an NSMutableString.
Dialogue: 0,0:18:25.35,0:18:29.08,yin,,0,0,0,, 我只想增加一个属性 \N{\fs12}And I just want to add an attribute,
Dialogue: 0,0:18:29.23,0:18:33.28,yin,,0,0,0,, 代表选中文本的前景颜色 \N{\fs12}which is the foreground color of whatever’s selected there.
Dialogue: 0,0:18:33.28,0:18:35.05,yin,,0,0,0,, 这个属性叫做 \N{\fs12}So the attribute is called
Dialogue: 0,0:18:35.07,0:18:37.64,yin,,0,0,0,,NSForegroundColorAttributeName\N{\fs12}”NSForegroundColorAttributeName.”
Dialogue: 0,0:18:38.10,0:18:41.87,yin,,0,0,0,, 它的值就是我们想要设置的颜色 \N{\fs12}Okay? The value — that’s the color we want to set it to –
Dialogue: 0,0:18:42.02,0:18:43.10,yin,,0,0,0,, 我说了 我们想让它 \N{\fs12}well, I said we’re going to have it
Dialogue: 0,0:18:43.11,0:18:45.08,yin,,0,0,0,, 与按钮的背景颜色相同 \N{\fs12}match the background of the button.
Dialogue: 0,0:18:45.08,0:18:46.84,yin,,0,0,0,, 所以我要用 sender\N{\fs12}So I’m going to say sender,
Dialogue: 0,0:18:46.86,0:18:48.59,yin,,0,0,0,, 也就是发送它的按钮 \N{\fs12}which is the button that’s sending this thing,
Dialogue: 0,0:18:48.90,0:18:51.12,yin,,0,0,0,, 然后是 backgroundColor 明白吗 \N{\fs12}backgroundColor, okay?
Dialogue: 0,0:18:52.11,0:18:57.88,yin,,0,0,0,, 范围指的是文本视图保存内容的哪部分 \N{\fs12}And then the range is what range of this text view’s storage
Dialogue: 0,0:18:58.06,0:19:00.06,yin,,0,0,0,, 是我想要设置为目标颜色的 \N{\fs12}do I want to set to be that color?
Dialogue: 0,0:19:00.18,0:19:04.18,yin,,0,0,0,, 我说了我想改变的是正文的选中部分 \N{\fs12}Well, I said I want it to be the selection, the body selection –
Dialogue: 0,0:19:04.35,0:19:09.03,yin,,0,0,0,, 文本视图中有一个方法叫做 selectedRange\N{\fs12}so there’s a method in text view called “selectedRange.”
Dialogue: 0,0:19:09.15,0:19:12.96,yin,,0,0,0,, 能够返回选中内容的 NSRange\N{\fs12}And it returns an NSRange of what’s selected, okay,
Dialogue: 0,0:19:12.96,0:19:14.29,yin,,0,0,0,, 用户选中的内容 \N{\fs12}what the user selection is.
Dialogue: 0,0:19:14.93,0:19:16.79,yin,,0,0,0,, 就是这样一行代码 \N{\fs12}Okay? So you can see one line of code,
Dialogue: 0,0:19:17.65,0:19:21.08,yin,,0,0,0,, 我们需要所有四种颜色都正常运行 \N{\fs12}and we’ve got our color — all four color buttons working
Dialogue: 0,0:19:21.18,0:19:22.52,yin,,0,0,0,, 只要它们都正确连接好 \N{\fs12}as long as they’re all wired up,
Dialogue: 0,0:19:22.53,0:19:24.96,yin,,0,0,0,, 现在它没问题了 \N{\fs12}which we know that this one is, right?
Dialogue: 0,0:19:25.25,0:19:26.40,yin,,0,0,0,, 因为我们把它连上了 \N{\fs12}Okay, because we wired that one up.
Dialogue: 0,0:19:26.41,0:19:27.28,yin,,0,0,0,, 这里显示连好了 \N{\fs12}There it is right there.
Dialogue: 0,0:19:27.59,0:19:29.68,yin,,0,0,0,, 我们还没有连接这个按钮 我们来做一下 \N{\fs12}We haven’t wired this one up, but let’s do that.
Dialogue: 0,0:19:30.02,0:19:30.83,yin,,0,0,0,, 还有这个 \N{\fs12}And this one.
Dialogue: 0,0:19:31.39,0:19:32.01,yin,,0,0,0,, 以及这个 \N{\fs12}And this one.
Dialogue: 0,0:19:33.05,0:19:35.33,yin,,0,0,0,, 我们运行一下试试 \N{\fs12}Okay? So let’s go ahead and run.
Dialogue: 0,0:19:35.33,0:19:38.92,yin,,0,0,0,, 我们试试看能不能在这个设备上运行 \N{\fs12}We’ll try and see if we can run it on the device over here
Dialogue: 0,0:19:39.89,0:19:41.09,yin,,0,0,0,, 如果今天没问题的话 \N{\fs12}if that works today.
Dialogue: 0,0:19:41.33,0:19:44.54,yin,,0,0,0,, 希望不会出现技术问题 \N{\fs12}Hopefully no technical issues will arise.
Dialogue: 0,0:19:46.42,0:19:50.13,yin,,0,0,0,, 我们运行的是一个 iPhone 应用 \N{\fs12}Now, this is an iPhone app that we’re running here,
Dialogue: 0,0:19:50.13,0:19:51.84,yin,,0,0,0,, 而我们要在 iPad 上运行 \N{\fs12}and we’re running it on an iPad.
Dialogue: 0,0:19:51.84,0:19:53.81,yin,,0,0,0,, 我的演示设备恰好是一台 iPad\N{\fs12}My demo machine happens to be an iPad.
Dialogue: 0,0:19:54.23,0:19:57.43,yin,,0,0,0,, 所以程序运行在 iPhone 模拟模式下 \N{\fs12}So this is running kind of in iPhone emulation mode, okay,
Dialogue: 0,0:19:57.43,0:19:59.42,yin,,0,0,0,,iOS7 的 iPhone 模拟模式 \N{\fs12}which is actually better in iOS 7
Dialogue: 0,0:19:59.43,0:20:01.96,yin,,0,0,0,, 比之前 iOS 版本中的更好 \N{\fs12}than it was in previous versions of iOS.
Dialogue: 0,0:20:02.61,0:20:04.35,yin,,0,0,0,, 并不完全相同 \N{\fs12}It’s not quite exactly the same.
Dialogue: 0,0:20:04.35,0:20:06.36,yin,,0,0,0,, 注意顶部的这个状态栏 \N{\fs12}You notice that this status bar at the top,
Dialogue: 0,0:20:06.37,0:20:10.78,yin,,0,0,0,, 并没有运营商 \N{\fs12}you don’t get the, you know, what your carrier is,
Dialogue: 0,0:20:10.78,0:20:12.20,yin,,0,0,0,, 电池寿命等信息 \N{\fs12}and the battery life, and all that stuff.
Dialogue: 0,0:20:12.20,0:20:13.18,yin,,0,0,0,, 这些内容被去掉了 \N{\fs12}That’s kind of cut off.
Dialogue: 0,0:20:13.83,0:20:15.99,yin,,0,0,0,, 但是除此之外还是非常相似的 \N{\fs12}But otherwise it’s pretty similar.
Dialogue: 0,0:20:15.99,0:20:20.62,yin,,0,0,0,, 可以看到这段伪拉丁文本显示在了这里 \N{\fs12}So you can see that we got that kind of pseudo-Latin text in there,
Dialogue: 0,0:20:20.63,0:20:21.79,yin,,0,0,0,, 它是可以滚动的 \N{\fs12}and it’s scrollable.
Dialogue: 0,0:20:22.32,0:20:25.16,yin,,0,0,0,, 也可以选中 \N{\fs12}And it’s also selectable.
Dialogue: 0,0:20:25.16,0:20:27.53,yin,,0,0,0,, 我只要在单词上双击 \N{\fs12}So I just double tapped on that word.
Dialogue: 0,0:20:27.86,0:20:29.99,yin,,0,0,0,, 就选中了它 \N{\fs12}And we got it now.
Dialogue: 0,0:20:30.75,0:20:34.33,yin,,0,0,0,, 这些内容是系统自动实现的 比如定义单词 \N{\fs12}You get things for free on this, like defining words –
Dialogue: 0,0:20:34.33,0:20:35.50,yin,,0,0,0,, 在词典中进行查找 \N{\fs12}looking them up in the dictionary.
Dialogue: 0,0:20:35.50,0:20:38.55,yin,,0,0,0,, 如果点击这里的定义 会转到词典进行查找 \N{\fs12}So if we hit define right here, it goes and looks it up –
Dialogue: 0,0:20:38.99,0:20:42.42,yin,,0,0,0,, 没有找到 不奇怪 \N{\fs12}not found, not understand, no surprise there.
Dialogue: 0,0:20:43.43,0:20:44.84,yin,,0,0,0,, 但是可以查单词 \N{\fs12}But you can look that up.
Dialogue: 0,0:20:45.02,0:20:46.56,yin,,0,0,0,, 当然了 希望所有按钮都运行正常 \N{\fs12}And of course, hopefully all our buttons work.
Dialogue: 0,0:20:46.57,0:20:48.57,yin,,0,0,0,, 我们试试红色 \N{\fs12}So let’s try red.
Dialogue: 0,0:20:48.93,0:20:49.53,yin,,0,0,0,, 起作用了 \N{\fs12}That worked.
Dialogue: 0,0:20:49.53,0:20:51.18,yin,,0,0,0,, 还有橙色和紫色 \N{\fs12}And orange and purple.
Dialogue: 0,0:20:51.48,0:20:52.31,yin,,0,0,0,, 没问题 绿色呢 \N{\fs12}Okay? Green.
Dialogue: 0,0:20:52.91,0:20:54.27,yin,,0,0,0,, 也运行正常 \N{\fs12}So that’s working.
Dialogue: 0,0:20:54.27,0:20:55.05,yin,,0,0,0,, 设置都没问题 \N{\fs12}That’s setting things right.
Dialogue: 0,0:20:55.05,0:20:58.22,yin,,0,0,0,, 我还可以扩大选中范围 点击橙色按钮 \N{\fs12}I could actually extend my selection, go orange.
Dialogue: 0,0:20:58.22,0:20:59.16,yin,,0,0,0,, 将它们全部设置为橙色 \N{\fs12}Sets it all orange.
Dialogue: 0,0:20:59.32,0:21:00.44,yin,,0,0,0,, 选择另一个单词 设为红色 \N{\fs12}Pick another word, red.
Dialogue: 0,0:21:00.92,0:21:02.35,yin,,0,0,0,, 没问题 \N{\fs12}So that’s working.
Dialogue: 0,0:21:02.59,0:21:03.42,yin,,0,0,0,, 非常简单 \N{\fs12}Super easy.
Dialogue: 0,0:21:03.78,0:21:06.63,yin,,0,0,0,, 以上内容 大家都明白吗 \N{\fs12}Okay? Everyone understand what we’ve done so far?
Dialogue: 0,0:21:07.45,0:21:08.46,yin,,0,0,0,, 我们继续 \N{\fs12}So now let’s go on
Dialogue: 0,0:21:08.61,0:21:14.81,yin,,0,0,0,, 实现添加和去除轮廓按钮的功能 \N{\fs12}and do the outline button and the unoutline button.
Dialogue: 0,0:21:15.35,0:21:18.05,yin,,0,0,0,, 所以我只要从这里按住 control 键进行拖拽 \N{\fs12}So I’m just going to control drag from there.
Dialogue: 0,0:21:18.22,0:21:20.50,yin,,0,0,0,, 我要叫它 outline\N{\fs12}I’m going to call this “outline.”
Dialogue: 0,0:21:21.37,0:21:22.96,yin,,0,0,0,, 这里不需要任何参数 \N{\fs12}I don’t need any argument here
Dialogue: 0,0:21:22.97,0:21:27.17,yin,,0,0,0,, 因为我们不需要根据按钮来决定操作 \N{\fs12}because I’m not looking at the button to determine how to do it.
Dialogue: 0,0:21:27.17,0:21:29.95,yin,,0,0,0,, 实际上 为了不使用长消息名称 \N{\fs12}And in fact, in spirit of not long message names,
Dialogue: 0,0:21:29.95,0:21:32.35,yin,,0,0,0,, 我们叫它 outlineBodySelection\N{\fs12}let’s call it “outlineBodySelection.”
Dialogue: 0,0:21:33.01,0:21:35.10,yin,,0,0,0,, 这样可以更清楚地表现出 \N{\fs12}Okay, because that’s kind of even clearer exactly
Dialogue: 0,0:21:35.12,0:21:37.35,yin,,0,0,0,, 要给什么元素加轮廓 \N{\fs12}what the outline is going to outline.
Dialogue: 0,0:21:37.81,0:21:38.46,yin,,0,0,0,, 我们实现一下 \N{\fs12}So let’s do that.
Dialogue: 0,0:21:38.47,0:21:40.22,yin,,0,0,0,, 我们创建好了 outlineBodySelection\N{\fs12}Here we have outlineBodySelection.
Dialogue: 0,0:21:40.62,0:21:45.78,yin,,0,0,0,, 这个也和刚才一样 body.textStorage\N{\fs12}Again, this one’s same thing as before — body.textStorage –
Dialogue: 0,0:21:46.07,0:21:47.41,yin,,0,0,0,, 我们要添加属性 \N{\fs12}and we’re going to add attribute.
Dialogue: 0,0:21:47.41,0:21:51.22,yin,,0,0,0,, 实际上 想要添加轮廓 我们需要做两件事 \N{\fs12}But actually, to do an outline we need to do two things.
Dialogue: 0,0:21:51.52,0:21:54.46,yin,,0,0,0,, 一是我们需要设置描边宽度 \N{\fs12}One thing is we need to set the stroke width, okay?
Dialogue: 0,0:21:54.46,0:21:57.20,yin,,0,0,0,, 也就是字符被描边的宽度 \N{\fs12}That’s the width that the character gets stroked –
Dialogue: 0,0:21:57.20,0:21:59.43,yin,,0,0,0,, 不是填充 而是描边 它的外边缘 \N{\fs12}not filled but stroked, its outer edge.
Dialogue: 0,0:21:59.82,0:22:01.93,yin,,0,0,0,, 我们还想设置描边的颜色 \N{\fs12}And we also want to set the color of that stroke.
Dialogue: 0,0:22:01.94,0:22:03.03,yin,,0,0,0,, 我想设成黑色 \N{\fs12}I want it to be black.
Dialogue: 0,0:22:03.51,0:22:06.47,yin,,0,0,0,, 所以如果我们有一个单词 颜色已选定 \N{\fs12}Okay? So if we have a word and its color is selected,
Dialogue: 0,0:22:06.47,0:22:08.74,yin,,0,0,0,, 这个单词还是会填充选定的颜色 \N{\fs12}it will still fill with that color, okay,
Dialogue: 0,0:22:08.76,0:22:11.53,yin,,0,0,0,, 我要指定描边 进行填充和描边 \N{\fs12}because I’m going to specify a stroke that does a fill and a stroke.
Dialogue: 0,0:22:11.75,0:22:13.44,yin,,0,0,0,, 但是轮廓会是黑色 \N{\fs12}But the outline’s going to be in black.
Dialogue: 0,0:22:13.77,0:22:18.01,yin,,0,0,0,, 所以当我们添加属性时 需要使用 addAttributes\N{\fs12}So when we do add attribute, we need to do add attributes –plural
Dialogue: 0,0:22:18.27,0:22:19.63,yin,,0,0,0,, 添加两个属性 \N{\fs12}because we’re going to add two attributes.
Dialogue: 0,0:22:19.93,0:22:21.35,yin,,0,0,0,, 这是一个词典 \N{\fs12}Now, this is a dictionary,
Dialogue: 0,0:22:21.59,0:22:24.29,yin,,0,0,0,, 我可以在这里用 @和大括号 \N{\fs12}and I can just create this dictionary right on the fly here
Dialogue: 0,0:22:24.37,0:22:26.20,yin,,0,0,0,, 创建词典 \N{\fs12}with our at sign curly brace.
Dialogue: 0,0:22:26.73,0:22:30.18,yin,,0,0,0,, 我们需要一个描边宽度属性 \N{\fs12}And one of the things we want is the stroke width.
Dialogue: 0,0:22:30.37,0:22:32.31,yin,,0,0,0,, 这是 StrokeWidthAttributeName\N{\fs12}So here’s the StrokeWidthAttributeName.
Dialogue: 0,0:22:32.50,0:22:35.62,yin,,0,0,0,, 我要将它设置为 -3\N{\fs12}And I’m going to set the stroke width to minus three.
Dialogue: 0,0:22:35.90,0:22:37.99,yin,,0,0,0,, 如果你还记得的话 \N{\fs12}Okay? Minus three, if you’ll recall,
Dialogue: 0,0:22:38.00,0:22:41.59,yin,,0,0,0,,-3 表示描边宽度为 3 并进行填充 \N{\fs12}means stroke width of three and also fill.
Dialogue: 0,0:22:42.33,0:22:45.87,yin,,0,0,0,, 如果将其设置为 3 就不会进行填充 \N{\fs12}If I said stroke width of at sign three, it would not fill.
Dialogue: 0,0:22:45.87,0:22:46.65,yin,,0,0,0,, 描边会是空心的 \N{\fs12}It would be clear.
Dialogue: 0,0:22:46.72,0:22:48.83,yin,,0,0,0,, 对吧 中间是没有颜色的 \N{\fs12}Right? In the middle of it would be clear.
Dialogue: 0,0:22:49.20,0:22:49.83,yin,,0,0,0,, 我们不想要这种效果 \N{\fs12}So we don’t want that.
Dialogue: 0,0:22:49.83,0:22:50.51,yin,,0,0,0,, 我们希望描边是实心的 \N{\fs12}We want to fill.
Dialogue: 0,0:22:50.51,0:22:52.39,yin,,0,0,0,, 无论我们选择了哪种颜色 \N{\fs12}Whichever color we pick, we want that to.
Dialogue: 0,0:22:52.70,0:22:53.43,yin,,0,0,0,, 就是这样 \N{\fs12}So that’s that.
Dialogue: 0,0:22:53.91,0:23:00.00,yin,,0,0,0,, 然后我们还要将描边颜色属性 \N{\fs12}And then let’s also set the stroke color attribute
Dialogue: 0,0:23:00.34,0:23:02.92,yin,,0,0,0,, 设置为 UIColor blackColor\N{\fs12}to be UIColor blackColor.
Dialogue: 0,0:23:03.16,0:23:06.37,yin,,0,0,0,, 我做这个操作主要是为了让大家明白 \N{\fs12}So I’m just doing this mostly so you can see how to put,
Dialogue: 0,0:23:06.56,0:23:09.67,yin,,0,0,0,, 如何在代码里直接使用颜色 \N{\fs12}you know, an actual color in there
Dialogue: 0,0:23:09.68,0:23:11.85,yin,,0,0,0,, 而这个颜色是我们从别处抓取的 \N{\fs12}instead of here where we grabbed a color from somewhere else.
Dialogue: 0,0:23:11.85,0:23:15.07,yin,,0,0,0,, 你可以用这些 UIColor 中的类方法来实现 \N{\fs12}You can use these class methods in UIColor to do that.
Dialogue: 0,0:23:15.53,0:23:16.76,yin,,0,0,0,, 我们需要范围 \N{\fs12}And we need the range.
Dialogue: 0,0:23:16.76,0:23:19.34,yin,,0,0,0,, 和之前一样 selectedRange\N{\fs12}Same thing as before: selectedRange.
Dialogue: 0,0:23:21.12,0:23:22.97,yin,,0,0,0,, 所以现在我添加了这两个属性 \N{\fs12}Okay? So now we’re gonna
Dialogue: 0,0:23:22.99,0:23:26.21,yin,,0,0,0,, 以实现添加轮廓功能 \N{\fs12}add both those attributes to outline it.
Dialogue: 0,0:23:26.30,0:23:27.23,yin,,0,0,0,, 这就是我们需要的全部内容 \N{\fs12}That’s all we need there.
Dialogue: 0,0:23:27.42,0:23:30.03,yin,,0,0,0,, 顺便在这里继续实现去除轮廓的功能 \N{\fs12}Let’s do unoutline while we’re here.
Dialogue: 0,0:23:30.33,0:23:31.37,yin,,0,0,0,, 节省一点时间 \N{\fs12}Save ourselves a little bit of time.
Dialogue: 0,0:23:31.37,0:23:34.57,yin,,0,0,0,, 我要叫它 unoutlineBodySelection\N{\fs12}I’m going to call this “unoutlineBodySelection.”
Dialogue: 0,0:23:36.58,0:23:41.28,yin,,0,0,0,, 好了 为了向大家示范一个不同的方法 \N{\fs12}Done. And just again to show you a different method,
Dialogue: 0,0:23:41.53,0:23:45.34,yin,,0,0,0,, 我们通过移除描边宽度属性来实现去除轮廓 \N{\fs12}let’s unoutline by removing any stroke width attribute.
Dialogue: 0,0:23:45.34,0:23:47.76,yin,,0,0,0,, 也可以将描边宽度设为 0\N{\fs12}I could probably set the stroke width to zero as well.
Dialogue: 0,0:23:48.06,0:23:50.96,yin,,0,0,0,, 但这里我要用移除属性的方法 这样大家就能明白 \N{\fs12}But I’m going to remove so that you can see
Dialogue: 0,0:23:51.12,0:23:54.91,yin,,0,0,0,, 如何在 NSMutableAttributedString 中移除属性了 \N{\fs12}how in NSMutableAttributedString we can remove attributes.
Dialogue: 0,0:23:54.92,0:23:55.32,yin,,0,0,0,, 我们只要写 \N{\fs12}We just say
Dialogue: 0,0:23:55.34,0:24:03.45,yin,,0,0,0,,removeAttribute: NSStrokeWidthAttributeName range: self.body.selectedRange\N{\fs12}removeAttribute: NSStrokeWidthAttributeName range: self.body.selectedRange.
Dialogue: 0,0:24:04.53,0:24:06.11,yin,,0,0,0,, 这样就可以移除那个属性 \N{\fs12}Okay? So that’s going to remove that attribute.
Dialogue: 0,0:24:06.31,0:24:08.78,yin,,0,0,0,, 我们并不需要移除描边颜色 \N{\fs12}We don’t really need to remove the stroke color
Dialogue: 0,0:24:09.14,0:24:11.34,yin,,0,0,0,, 因为如果根本就没有描边 \N{\fs12}because if it’s not being stroked,
Dialogue: 0,0:24:11.34,0:24:12.32,yin,,0,0,0,, 颜色也就无从谈起 \N{\fs12}then the color doesn’t matter.
Dialogue: 0,0:24:12.55,0:24:13.51,yin,,0,0,0,, 所以可以把它留下 \N{\fs12}So it’s kind of in there.
Dialogue: 0,0:24:13.52,0:24:14.44,yin,,0,0,0,, 有点多余 \N{\fs12}It’s a little extra.
Dialogue: 0,0:24:15.37,0:24:16.78,yin,,0,0,0,, 你可能认为这样会浪费存储空间 \N{\fs12}You could argue maybe wasted storage.
Dialogue: 0,0:24:16.78,0:24:18.64,yin,,0,0,0,, 属性化字符串的存储 \N{\fs12}Although the storage of attributed string
Dialogue: 0,0:24:18.66,0:24:21.55,yin,,0,0,0,, 得到了极好的优化 \N{\fs12}is really optimized to the nth degree.
Dialogue: 0,0:24:21.56,0:24:24.77,yin,,0,0,0,, 所以我不会过多担心 \N{\fs12}Okay? So I wouldn’t worry too terribly much about that.
Dialogue: 0,0:24:25.32,0:24:25.72,yin,,0,0,0,, 好吧 \N{\fs12}All right.
Dialogue: 0,0:24:25.73,0:24:27.06,yin,,0,0,0,, 我们看看是否能正常运行 \N{\fs12}So let’s go see if that works.
Dialogue: 0,0:24:34.25,0:24:38.01,yin,,0,0,0,, 再选择一个单词 比如它 添加轮廓 \N{\fs12}Okay. So let’s pick another word here like this one, outline it.
Dialogue: 0,0:24:38.08,0:24:39.08,yin,,0,0,0,, 添加上了 \N{\fs12}That is outlined.
Dialogue: 0,0:24:39.08,0:24:42.34,yin,,0,0,0,, 看起来只是加粗了 因为它本身填充颜色就是黑色的 \N{\fs12}It just looks bold because it’s filled with black still.
Dialogue: 0,0:24:43.18,0:24:44.67,yin,,0,0,0,, 本来就是黑色的 \N{\fs12}Okay? Because black was the color that’s there.
Dialogue: 0,0:24:44.67,0:24:45.84,yin,,0,0,0,, 但是如果我用橙色填充它 \N{\fs12}But if I fill it with orange,
Dialogue: 0,0:24:45.96,0:24:47.13,yin,,0,0,0,, 现在看起来就不太一样了 \N{\fs12}you can see it looks a little different.
Dialogue: 0,0:24:47.50,0:24:49.35,yin,,0,0,0,, 对吧 或者选这个单词 \N{\fs12}Right? Or go over here to this word.
Dialogue: 0,0:24:49.80,0:24:53.52,yin,,0,0,0,, 变为红色 然后添加轮廓 明白吗 \N{\fs12}Let’s make it red and then outline it, okay?
Dialogue: 0,0:24:54.82,0:24:55.87,yin,,0,0,0,, 大家都明白了吗 \N{\fs12}Everyone cool with that?
Dialogue: 0,0:24:56.01,0:24:57.59,yin,,0,0,0,, 我们也可以去除轮廓 \N{\fs12}Then we can unoutline as well.
Dialogue: 0,0:24:58.49,0:24:59.15,yin,,0,0,0,, 再变为红色 \N{\fs12}Go back to red.
Dialogue: 0,0:24:59.16,0:25:00.58,yin,,0,0,0,, 这就是添加和去除轮廓 \N{\fs12}So outline, unoutline.
Dialogue: 0,0:25:01.68,0:25:03.93,yin,,0,0,0,, 大家明白了吗 \N{\fs12}Okay? Everyone understand that?
Dialogue: 0,0:25:05.13,0:25:06.58,yin,,0,0,0,, 现在就先这样了 \N{\fs12}Okay. So that’s it for now.
Dialogue: 0,0:25:06.58,0:25:07.56,yin,,0,0,0,, 我们等会再回来 \N{\fs12}We’ll be back to this in a second.
Dialogue: 0,0:25:07.57,0:25:07.80,yin,,0,0,0,, 请讲 \N{\fs12}Yeah?
Dialogue: 0,0:25:08.15,0:25:10.86,yin,,0,0,0,, 我不是很清楚 \N{\fs12}Yeah, I’m not quite sure that I understand the difference
Dialogue: 0,0:25:10.87,0:25:13.09,yin,,0,0,0,,-3 和 +3 的区别 \N{\fs12}between the negative three and positive three.
Dialogue: 0,0:25:13.10,0:25:16.06,yin,,0,0,0,, 什么样子是被填充了 什么样子不是呢 \N{\fs12}Like, what’s getting filled or isn’t getting filled?
Dialogue: 0,0:25:16.07,0:25:16.92,yin,,0,0,0,, 好问题 \N{\fs12}Okay. Great question.
Dialogue: 0,0:25:16.93,0:25:18.87,yin,,0,0,0,, 确认一下 \N{\fs12}So let’s just be a hundred percent clear:
Dialogue: 0,0:25:18.87,0:25:21.53,yin,,0,0,0,, 我们这里用的 -3\N{\fs12}What’s the difference between the negative three
Dialogue: 0,0:25:21.69,0:25:25.84,yin,,0,0,0,, 和 +3 有什么区别 \N{\fs12}that we have right here, okay, and positive three?
Dialogue: 0,0:25:26.09,0:25:28.62,yin,,0,0,0,,-3 表示… 这样吧 \N{\fs12}Negative three means — in fact, you know what?
Dialogue: 0,0:25:28.63,0:25:30.45,yin,,0,0,0,, 稍后我会在演示里做一下 \N{\fs12}I’ll show you a demo of it a little later.
Dialogue: 0,0:25:31.72,0:25:33.27,yin,,0,0,0,, 看见这个 Outline 按钮了吗 \N{\fs12}See the button that says “Outline”?
Dialogue: 0,0:25:33.52,0:25:35.68,yin,,0,0,0,, 等会我们会为它添加轮廓 \N{\fs12}Later we’re going to change it to be Outlined.
Dialogue: 0,0:25:35.93,0:25:38.55,yin,,0,0,0,, 我们不会填充它 这样大家就能看到 \N{\fs12}Okay? And we won’t fill it, and you’ll see the difference,
Dialogue: 0,0:25:38.67,0:25:40.88,yin,,0,0,0,, 不用颜色填充的不同之处了 \N{\fs12}that it’s not going to be filled with a color, okay?
Dialogue: 0,0:25:41.58,0:25:43.54,yin,,0,0,0,, 我们回到幻灯片 \N{\fs12}So let’s get back to the slides, though.
Dialogue: 0,0:25:45.13,0:25:47.19,yin,,0,0,0,, 回到这里 \N{\fs12}And over here.
Dialogue: 0,0:25:49.47,0:25:50.28,yin,,0,0,0,, 看下一张幻灯片 \N{\fs12}Next. Okay?
Dialogue: 0,0:25:50.97,0:25:51.99,yin,,0,0,0,, 视图控制器生命周期 \N{\fs12}View controller lifecycle.
Dialogue: 0,0:25:52.01,0:25:54.99,yin,,0,0,0,, 理解它很重要 \N{\fs12}Okay. So this is important thing to understand,
Dialogue: 0,0:25:55.01,0:25:56.55,yin,,0,0,0,, 视图控制器生命周期 \N{\fs12}the view controller lifecycle,
Dialogue: 0,0:25:56.78,0:26:00.37,yin,,0,0,0,, 因为你需要控制的很多 \N{\fs12}because a lot of the things that you’re going to control
Dialogue: 0,0:26:00.39,0:26:04.40,yin,,0,0,0,, 关于视图控制器如何随时间变化的操作 \N{\fs12}about how your view controller moves through time
Dialogue: 0,0:26:04.74,0:26:06.56,yin,,0,0,0,, 都要用到视图控制器生命周期中的方法 \N{\fs12}are going to be controlled by the methods
Dialogue: 0,0:26:06.57,0:26:08.48,yin,,0,0,0,, 来实现控制 \N{\fs12}that are part of the view controller lifecycle.
Dialogue: 0,0:26:08.68,0:26:10.28,yin,,0,0,0,, 视图控制器生命周期 \N{\fs12}Now, all the view controller lifecycle is,
Dialogue: 0,0:26:10.29,0:26:12.04,yin,,0,0,0,, 就是一系列的方法 \N{\fs12}is a series of methods, okay,
Dialogue: 0,0:26:12.26,0:26:15.59,yin,,0,0,0,, 当事件发生时 会被发送至 UIViewController\N{\fs12}that are sent to UIViewController when things happen.
Dialogue: 0,0:26:15.60,0:26:18.37,yin,,0,0,0,, 你的控制器是 UIViewController 的一个子类 \N{\fs12}Now, your controller is a subclass of UIViewController.
Dialogue: 0,0:26:18.38,0:26:19.23,yin,,0,0,0,, 你可能已经注意到了 \N{\fs12}You probably noticed that.
Dialogue: 0,0:26:19.25,0:26:20.12,yin,,0,0,0,, 如果你看看代码 \N{\fs12}If you look at your code,
Dialogue: 0,0:26:20.13,0:26:22.94,yin,,0,0,0,, 会发现你新建应用时 \N{\fs12}you’ll see that your controller that gets created for you
Dialogue: 0,0:26:22.95,0:26:25.05,yin,,0,0,0,, 由模板创建的控制器 \N{\fs12}by the template when you create a new app
Dialogue: 0,0:26:25.24,0:26:26.67,yin,,0,0,0,, 是 UIViewController 的一个子类 \N{\fs12}is a subclass of UIViewController.
Dialogue: 0,0:26:26.68,0:26:28.14,yin,,0,0,0,, 它会发送这些消息 \N{\fs12}So it’s going to be sent these messages,
Dialogue: 0,0:26:28.31,0:26:30.04,yin,,0,0,0,, 如果你想要知道这些事件何时发生 \N{\fs12}and you’re going to override them
Dialogue: 0,0:26:30.21,0:26:32.68,yin,,0,0,0,, 就要重写这些方法 \N{\fs12}if you want to find out when these things are happening.
Dialogue: 0,0:26:32.83,0:26:34.67,yin,,0,0,0,, 不要忘了调用超类 \N{\fs12}Don’t forget to call super. Okay?
Dialogue: 0,0:26:37.04,0:26:38.62,yin,,0,0,0,, 你为什么需要这些东西 \N{\fs12}Why do you need these things?
Dialogue: 0,0:26:38.63,0:26:41.56,yin,,0,0,0,, 你需要对控制器进行初始化 \N{\fs12}Well, you need to be able to initialize your controller;
Dialogue: 0,0:26:41.57,0:26:43.63,yin,,0,0,0,, 你需要知道自己何时在屏幕上出现和消失 \N{\fs12}you need to be able to find when you come on and off screen;
Dialogue: 0,0:26:43.64,0:26:46.72,yin,,0,0,0,, 你需要知道边界何时改变 \N{\fs12}you need to know when your bounds change, right,
Dialogue: 0,0:26:46.74,0:26:47.80,yin,,0,0,0,, 你的几何变化 \N{\fs12}your geometry changes.
Dialogue: 0,0:26:47.97,0:26:49.55,yin,,0,0,0,, 你需要知道这些消息 \N{\fs12}You got to know these things
Dialogue: 0,0:26:49.56,0:26:52.46,yin,,0,0,0,, 这样你的视图控制器的视图 \N{\fs12}for your view controller’s view
Dialogue: 0,0:26:52.47,0:26:54.97,yin,,0,0,0,, 才能在 iOS 环境中正常运行 \N{\fs12}to successfully live in the iOS world.
Dialogue: 0,0:26:55.73,0:26:59.79,yin,,0,0,0,, 这个生命周期开始于创建 对吗 \N{\fs12}So the start of this lifecycle is creation, okay?
Dialogue: 0,0:26:59.96,0:27:04.66,yin,,0,0,0,, 大部分视图控制器都是从 storyboard 中创建的 \N{\fs12}Most view controllers are created out of storyboards.
Dialogue: 0,0:27:04.73,0:27:07.35,yin,,0,0,0,, 我讲过了 storyboard 不会生成代码 \N{\fs12}And I told you that storyboards don’t generate code.
Dialogue: 0,0:27:07.52,0:27:10.27,yin,,0,0,0,, 你基本上是直接编辑这些对象 \N{\fs12}You’re basically editing those objects live –
Dialogue: 0,0:27:10.27,0:27:12.01,yin,,0,0,0,, 那个 UITextView 那些按钮 \N{\fs12}that UITextView, those buttons –
Dialogue: 0,0:27:12.02,0:27:13.94,yin,,0,0,0,, 你直接在 Xcode 中编辑它们 \N{\fs12}you’re editing them live in Xcode.
Dialogue: 0,0:27:14.15,0:27:16.95,yin,,0,0,0,, 然后当保存 storyboard 时 \N{\fs12}And when that storyboard gets saved,
Dialogue: 0,0:27:16.95,0:27:18.32,yin,,0,0,0,, 它们像是被冷冻干燥了 \N{\fs12}they kind of get freeze-dried.
Dialogue: 0,0:27:18.48,0:27:20.38,yin,,0,0,0,, 然后当你运行应用时 \N{\fs12}And then when your application runs,
Dialogue: 0,0:27:20.40,0:27:23.42,yin,,0,0,0,, 水又回来了 它们又活过来了 \N{\fs12}water gets added back to them and they come back to life, okay?
Dialogue: 0,0:27:23.59,0:27:26.61,yin,,0,0,0,, 这是生命周期的创建部分 \N{\fs12}So that’s the creation part of the lifecycle.
Dialogue: 0,0:27:26.75,0:27:29.72,yin,,0,0,0,, 在创建时 我们并不做很多事情 \N{\fs12}And we don’t really do much at creation.
Dialogue: 0,0:27:29.73,0:27:31.73,yin,,0,0,0,, 实际上 我要把创建这部分的内容 \N{\fs12}In fact, I’m not even going to talk about creation
Dialogue: 0,0:27:31.74,0:27:34.22,yin,,0,0,0,, 放在视图控制器生命周期的最后讲 \N{\fs12}until the very end of the view controller lifecycle.
Dialogue: 0,0:27:34.23,0:27:36.50,yin,,0,0,0,, 尽管按发生顺序来说 它是开始 \N{\fs12}Even though it is chronologically the beginning,
Dialogue: 0,0:27:36.51,0:27:38.03,yin,,0,0,0,, 但却是目前最不重要的 \N{\fs12}it’s by far the least important.
Dialogue: 0,0:27:38.04,0:27:40.26,yin,,0,0,0,, 所以我把它放在最后 \N{\fs12}So I’m emphasizing that by putting it at the end.
Dialogue: 0,0:27:41.58,0:27:45.76,yin,,0,0,0,, 创建之后 你会经历以下过程 \N{\fs12}But after it’s created, you go through the following process.
Dialogue: 0,0:27:45.78,0:27:48.29,yin,,0,0,0,, 设置好输出口 对吧 \N{\fs12}Your outlets get set, okay?
Dialogue: 0,0:27:48.30,0:27:49.58,yin,,0,0,0,, 这些输出口必须设置好 \N{\fs12}Got to have those outlets set.
Dialogue: 0,0:27:49.78,0:27:54.06,yin,,0,0,0,, 然后你的视图控制器出现在屏幕上 \N{\fs12}Then your view controller appears on screen
Dialogue: 0,0:27:54.29,0:27:56.04,yin,,0,0,0,, 它也许会从屏幕上消失 \N{\fs12}and it might disappear from screen.
Dialogue: 0,0:27:56.10,0:27:57.05,yin,,0,0,0,, 你还没有见过它消失 \N{\fs12}You haven’t seen that yet
Dialogue: 0,0:27:57.06,0:27:57.66,yin,,0,0,0,, 因为目前 \N{\fs12}because right now
Dialogue: 0,0:27:57.67,0:27:59.75,yin,,0,0,0,, 你的整个应用中就只有一个视图控制器 \N{\fs12}you’ve only had one view controller in your whole app.
Dialogue: 0,0:27:59.76,0:28:01.45,yin,,0,0,0,, 只有应用退出时 它才会消失 \N{\fs12}It only disappears when the app quits.
Dialogue: 0,0:28:01.63,0:28:03.31,yin,,0,0,0,, 但是如果你有多个视图控制器 \N{\fs12}But when you have multiple view controllers,
Dialogue: 0,0:28:03.42,0:28:05.50,yin,,0,0,0,, 它们会交替在屏幕上出现和消失 \N{\fs12}they’ll appear and disappear on screen.
Dialogue: 0,0:28:05.68,0:28:07.17,yin,,0,0,0,, 它们的几何变化 \N{\fs12}Their geometry changes –
Dialogue: 0,0:28:07.25,0:28:08.99,yin,,0,0,0,, 无论是因为旋转 \N{\fs12}either device rotation
Dialogue: 0,0:28:09.00,0:28:12.59,yin,,0,0,0,, 还是其他原因造成的 \N{\fs12}or something else can cause their bounds to change
Dialogue: 0,0:28:12.61,0:28:14.16,yin,,0,0,0,,MVC 的视图的边界变化 \N{\fs12}of your view of your MVC.
Dialogue: 0,0:28:14.50,0:28:15.88,yin,,0,0,0,, 内存不足的情况 \N{\fs12}Low memory situations –
Dialogue: 0,0:28:15.89,0:28:18.17,yin,,0,0,0,, 严格来说并不属于视图控制器生命周期 \N{\fs12}again, not strictly speaking part of the view controller lifecycle
Dialogue: 0,0:28:18.18,0:28:19.82,yin,,0,0,0,, 但这也可能在运行时出现 \N{\fs12}but that can happen while you’re running.
Dialogue: 0,0:28:20.09,0:28:22.90,yin,,0,0,0,, 每一步都会调用一个方法 \N{\fs12}And at each of these steps a method gets called.
Dialogue: 0,0:28:22.92,0:28:25.64,yin,,0,0,0,, 我们先看第一个方法 ViewDidLoad\N{\fs12}So let’s look at the first one: ViewDidLoad.
Dialogue: 0,0:28:25.95,0:28:28.17,yin,,0,0,0,, 我们在代码中见过它 我没有删掉它 \N{\fs12}So that’s the one we saw in the code that I didn’t delete.
Dialogue: 0,0:28:28.42,0:28:30.25,yin,,0,0,0,, 这里很适合于 \N{\fs12}This is a really great place
Dialogue: 0,0:28:30.26,0:28:32.24,yin,,0,0,0,, 放置控制器初始化代码 \N{\fs12}to put initialization code for your controller.
Dialogue: 0,0:28:32.25,0:28:33.64,yin,,0,0,0,, 你可以把它看做是 \N{\fs12}You can kind of think of it
Dialogue: 0,0:28:33.95,0:28:37.47,yin,,0,0,0,, 放置 init 全部内容的地方 \N{\fs12}as where you would put all the stuff from your init, okay,
Dialogue: 0,0:28:37.66,0:28:39.64,yin,,0,0,0,, 因为你的 init 并不会被调用 \N{\fs12}because your init is not going to get called –
Dialogue: 0,0:28:39.65,0:28:41.81,yin,,0,0,0,, 不会在视图控制器中调用 等下会看到 \N{\fs12}as you’re going to see — for your view controller.
Dialogue: 0,0:28:41.82,0:28:44.12,yin,,0,0,0,, 它为什么比 init 更好呢 \N{\fs12}So why is this better than init?
Dialogue: 0,0:28:44.15,0:28:46.25,yin,,0,0,0,, 因为你已经设置好了输出口 \N{\fs12}Because your outlets are set.
Dialogue: 0,0:28:47.14,0:28:50.52,yin,,0,0,0,, 通常情况下 如果你想要初始化视图 \N{\fs12}Okay? Very important for your outlets to be set usually
Dialogue: 0,0:28:50.61,0:28:52.27,yin,,0,0,0,, 设置好输出口是十分重要的 \N{\fs12}if you want to initialize your view.
Dialogue: 0,0:28:52.28,0:28:54.74,yin,,0,0,0,, 因为你想让你的标签 \N{\fs12}Because you want to set your labels
Dialogue: 0,0:28:54.75,0:28:56.50,yin,,0,0,0,, 显示些什么 \N{\fs12}to say something or whatever.
Dialogue: 0,0:28:57.46,0:29:01.91,yin,,0,0,0,, 在 Matchismo 中 开始时是牌面向下的 \N{\fs12}You know, in the Matchismo game we started with the cards facedown
Dialogue: 0,0:29:01.92,0:29:04.01,yin,,0,0,0,, 因为我们当时不知道如何在开始时让牌面向上 \N{\fs12}because we didn’t really know how to start faceup.
Dialogue: 0,0:29:04.10,0:29:06.38,yin,,0,0,0,, 这里就可以设置第一张牌 \N{\fs12}Okay? Well, this is where you would set the first card.
Dialogue: 0,0:29:06.55,0:29:06.84,yin,,0,0,0,, 明白吗 \N{\fs12}All right?
Dialogue: 0,0:29:06.85,0:29:08.98,yin,,0,0,0,, 你可以绘制第一张牌 让它…\N{\fs12}You’d draw the first card, have it –
Dialogue: 0,0:29:09.41,0:29:11.88,yin,,0,0,0,, 说的是 Matchismo 不是你们的作业 是我们在课上做的 \N{\fs12}this is the Matchismo, not your assignment but what we did in class –
Dialogue: 0,0:29:12.14,0:29:14.11,yin,,0,0,0,, 想让卡牌在开始时牌面向上 \N{\fs12}have it start with the card faceup.
Dialogue: 0,0:29:14.13,0:29:15.45,yin,,0,0,0,, 你要在 viewDidLoad 中实现 \N{\fs12}You would do this in viewDidLoad
Dialogue: 0,0:29:15.46,0:29:17.33,yin,,0,0,0,, 因为这里输出口都设置好了 \N{\fs12}because here your outlets are set.
Dialogue: 0,0:29:17.34,0:29:18.69,yin,,0,0,0,, 我可以向按钮发送消息 \N{\fs12}So I can talk to that button.
Dialogue: 0,0:29:18.75,0:29:20.76,yin,,0,0,0,, 当时 Matchismo 只有一个按钮 \N{\fs12}It was a single button in Matchismo at the time.
Dialogue: 0,0:29:21.86,0:29:23.54,yin,,0,0,0,, 但是我还没有出现在屏幕上 \N{\fs12}But I’m not on screen yet.
Dialogue: 0,0:29:23.81,0:29:26.27,yin,,0,0,0,, 你在屏幕上出现之前 viewDidLoad 会被调用 \N{\fs12}ViewDidLoad gets called before you come on screen.
Dialogue: 0,0:29:27.02,0:29:28.65,yin,,0,0,0,, 所以这里很适合执行这类操作 \N{\fs12}So it’s a great place to do stuff like that.
Dialogue: 0,0:29:28.88,0:29:31.93,yin,,0,0,0,, 在控制器生命周期中 \N{\fs12}ViewDidLoad will only ever be called once
Dialogue: 0,0:29:32.61,0:29:34.05,yin,,0,0,0,,viewDidLoad 只会被调用一次 \N{\fs12}in the lifetime of your controller.
Dialogue: 0,0:29:34.42,0:29:35.65,yin,,0,0,0,, 一个周期中只会被调用一次 \N{\fs12}Period. Once.
Dialogue: 0,0:29:35.66,0:29:36.98,yin,,0,0,0,, 绝不会多于一次 \N{\fs12}It never gets called more than once.
Dialogue: 0,0:29:37.75,0:29:40.27,yin,,0,0,0,, 这是一个绝好的地方 \N{\fs12}Okay? It is a spectacularly great place
Dialogue: 0,0:29:40.28,0:29:41.59,yin,,0,0,0,, 来放置初始化代码 \N{\fs12}to put initialization code.
Dialogue: 0,0:29:41.60,0:29:44.96,yin,,0,0,0,, 但是有一些操作是不可以在 viewDidLoad 中可执行的 \N{\fs12}However, there are limits to what can go in viewDidLoad,
Dialogue: 0,0:29:45.12,0:29:47.51,yin,,0,0,0,, 尤其是关于几何的代码 \N{\fs12}most especially geometry code.
Dialogue: 0,0:29:47.81,0:29:49.74,yin,,0,0,0,,viewDidLoad 被调用时 \N{\fs12}At the time viewDidLoad is called,
Dialogue: 0,0:29:50.05,0:29:54.22,yin,,0,0,0,, 视图的边界还没有定下来 \N{\fs12}the bounds of your view is not finalized.
Dialogue: 0,0:29:54.52,0:29:57.38,yin,,0,0,0,, 它也许只是待在 storyboard 里 \N{\fs12}It’s probably just sitting at whatever it was in the storyboard,
Dialogue: 0,0:29:57.46,0:30:00.53,yin,,0,0,0,, 当它出现在屏幕上时 也许不会出现在预定位置 \N{\fs12}which may or may not be what’s going to happen when it’s on screen
Dialogue: 0,0:30:00.54,0:30:01.89,yin,,0,0,0,, 因为它运行在一个不同的设备上 \N{\fs12}because it might be on a little different device,
Dialogue: 0,0:30:01.90,0:30:04.71,yin,,0,0,0,, 在不同的地点 或者被旋转了之类的 \N{\fs12}or different place, or it might be rotated, or something like that.
Dialogue: 0,0:30:05.04,0:30:08.40,yin,,0,0,0,, 所以不要在 viewDidLoad 中添加与几何相关的代码 \N{\fs12}So you do not want to put geometry-related code –
Dialogue: 0,0:30:08.42,0:30:10.88,yin,,0,0,0,, 换句话说 不要在 viewDidLoad 中 \N{\fs12}in other words, any initialization that has to do
Dialogue: 0,0:30:10.89,0:30:15.34,yin,,0,0,0,, 添加任何关于视图形状的初始化信息 \N{\fs12}with what the shape of your view is — in viewDidLoad.
Dialogue: 0,0:30:16.36,0:30:16.83,yin,,0,0,0,, 明白吗 \N{\fs12}Okay?
Dialogue: 0,0:30:17.78,0:30:19.69,yin,,0,0,0,, 这是 viewDidLoad 中的主要限制 \N{\fs12}That’s the major restriction in viewDidLoad.
Dialogue: 0,0:30:20.00,0:30:21.06,yin,,0,0,0,, 但除此之外 这是执行初始化的好地方 \N{\fs12}But otherwise, it’s a great place
Dialogue: 0,0:30:21.06,0:30:24.01,yin,,0,0,0,, 因为它在输出口设置好 你出现在屏幕上之前 \N{\fs12}because it only gets called once before you go on screen
Dialogue: 0,0:30:24.05,0:30:25.47,yin,,0,0,0,, 只会被调用一次 \N{\fs12}after your outlets get set.
Dialogue: 0,0:30:25.48,0:30:26.38,yin,,0,0,0,, 这是一个很棒的方法 \N{\fs12}It’s an awesome method.
Dialogue: 0,0:30:26.68,0:30:27.68,yin,,0,0,0,, 强烈推荐 \N{\fs12}Okay? Highly recommend it.
Dialogue: 0,0:30:29.63,0:30:35.62,yin,,0,0,0,, 在你的视图控制器的视图就要出现在屏幕上之前 \N{\fs12}Now, just before your view controller view appears on screen,
Dialogue: 0,0:30:36.02,0:30:37.29,yin,,0,0,0,, 系统会调用 viewWillAppear 方法 \N{\fs12}you get viewWillAppear.
Dialogue: 0,0:30:37.76,0:30:41.16,yin,,0,0,0,, 这是一个放置代码的好地方 \N{\fs12}Okay? This is a pretty good place to put things.
Dialogue: 0,0:30:41.28,0:30:45.46,yin,,0,0,0,, 在某些方面 它不如 viewDidLoad\N{\fs12}It’s not really as awesome as viewDidLoad in some ways.
Dialogue: 0,0:30:45.86,0:30:49.05,yin,,0,0,0,, 我甚至不确定是否在这里添加了几何相关内容 \N{\fs12}And I’m not even sure I’d put geometry-related stuff in here,
Dialogue: 0,0:30:49.05,0:30:50.68,yin,,0,0,0,, 下面的幻灯片中可以看到 \N{\fs12}as you’ll see in a couple of slides.
Dialogue: 0,0:30:51.05,0:30:53.37,yin,,0,0,0,, 但是 确实有一些内容要放在这里 \N{\fs12}However, there are some things you do want to put in here.
Dialogue: 0,0:30:53.37,0:30:55.91,yin,,0,0,0,, 需要注意的一点是 \N{\fs12}Now, one thing you want to be careful about
Dialogue: 0,0:30:55.92,0:30:59.52,yin,,0,0,0,, 不要在 viewWillAppear 中添加一次性初始化内容 \N{\fs12}not putting in viewWillAppear is one-time initialization
Dialogue: 0,0:30:59.52,0:31:01.12,yin,,0,0,0,, 这属于 viewDidLoad 的内容 \N{\fs12}that really belongs in ViewDidLoad
Dialogue: 0,0:31:01.42,0:31:04.41,yin,,0,0,0,, 因为当应用中有多个 MVC 时 \N{\fs12}because, again, when you have multiple MVCs in your app,
Dialogue: 0,0:31:04.52,0:31:06.23,yin,,0,0,0,, 它们会交替出现消失 \N{\fs12}they’re going to be appearing and disappearing.
Dialogue: 0,0:31:06.50,0:31:07.95,yin,,0,0,0,, 所以 viewWillAppear\N{\fs12}And so viewWillAppear is going to
Dialogue: 0,0:31:07.96,0:31:10.13,yin,,0,0,0,, 会被多次调用 \N{\fs12}get called multiple times, okay?
Dialogue: 0,0:31:10.13,0:31:12.04,yin,,0,0,0,, 每次视图重新在屏幕上显示时 \N{\fs12}Every time your view appears back on screen,
Dialogue: 0,0:31:12.09,0:31:13.56,yin,,0,0,0,,viewWillAppear 都会被再次调用 \N{\fs12}viewWillAppear gets called again.
Dialogue: 0,0:31:14.04,0:31:15.74,yin,,0,0,0,, 所以如果你把一次性初始化操作 \N{\fs12}So if it’s a one-time initialization,
Dialogue: 0,0:31:15.74,0:31:16.69,yin,,0,0,0,, 放在了 viewWillAppear 中 \N{\fs12}you put it in viewWillAppear,
Dialogue: 0,0:31:16.69,0:31:18.63,yin,,0,0,0,, 每次视图重新出现时 都会被执行 \N{\fs12}it’s going to happen every time your thing reappears.
Dialogue: 0,0:31:19.23,0:31:20.86,yin,,0,0,0,, 那么 viewWillAppear 中应该放些什么呢 \N{\fs12}So what does go in viewWillAppear?
Dialogue: 0,0:31:20.86,0:31:26.48,yin,,0,0,0,, 如果你需要执行的某些初始化 \N{\fs12}Well, one thing is if there’s some initialization you need to do,
Dialogue: 0,0:31:26.74,0:31:29.64,yin,,0,0,0,, 基于某些数据 而这些数据 \N{\fs12}based on some data that might have changed
Dialogue: 0,0:31:29.77,0:31:31.78,yin,,0,0,0,, 可能会在视图控制器的视图离开屏幕时发生变化 \N{\fs12}while your view controller’s view was off screen.
Dialogue: 0,0:31:32.40,0:31:33.69,yin,,0,0,0,, 懂吗 比如说你的模型 \N{\fs12}Okay? So like your model.
Dialogue: 0,0:31:33.69,0:31:35.15,yin,,0,0,0,, 模型中的某些内容变了 \N{\fs12}Something changed in your model.
Dialogue: 0,0:31:35.40,0:31:36.72,yin,,0,0,0,, 你的视图控制器不在屏幕上了 \N{\fs12}Your view controller was off screen,
Dialogue: 0,0:31:36.72,0:31:38.91,yin,,0,0,0,, 它并没有监听模型的变化 \N{\fs12}so it wasn’t really listening for changes in the model.
Dialogue: 0,0:31:39.16,0:31:40.90,yin,,0,0,0,, 然后它又回到了屏幕上 \N{\fs12}And then coming back on screen,
Dialogue: 0,0:31:41.06,0:31:42.49,yin,,0,0,0,, 这时你最好与模型进行同步 \N{\fs12}you better sync up with the model.
Dialogue: 0,0:31:43.22,0:31:44.09,yin,,0,0,0,, 这么说明白吗 \N{\fs12}Does that make sense?
Dialogue: 0,0:31:44.64,0:31:47.61,yin,,0,0,0,, 你之前不在屏幕上了 现在又重新出现在屏幕上 \N{\fs12}Because you were off screen and now you’re appearing.
Dialogue: 0,0:31:47.97,0:31:50.14,yin,,0,0,0,,viewWillAppear 方法适合于 \N{\fs12}And so this is a good thing to put in viewWillAppear:
Dialogue: 0,0:31:50.15,0:31:52.56,yin,,0,0,0,, 对不可见时可能改变的内容 \N{\fs12}Synchronization with things that might have changed
Dialogue: 0,0:31:52.57,0:31:53.66,yin,,0,0,0,, 进行同步 \N{\fs12}while you weren’t visible,
Dialogue: 0,0:31:53.66,0:31:55.71,yin,,0,0,0,, 包括 \N{\fs12}including things that, you know,
Dialogue: 0,0:31:55.71,0:31:58.53,yin,,0,0,0,, 准备第一次出现前发生的变化 \N{\fs12}were changing before you appeared for the first time.
Dialogue: 0,0:31:58.53,0:31:59.55,yin,,0,0,0,, 因为 viewWillAppear\N{\fs12}Because viewWillAppear, of course,
Dialogue: 0,0:31:59.55,0:32:01.47,yin,,0,0,0,, 也会在第一次出现时被调用 \N{\fs12}gets called the first time you appear as well.
Dialogue: 0,0:32:01.65,0:32:04.08,yin,,0,0,0,, 这个方法不叫视图将要再次出现 叫视图将要出现 \N{\fs12}Okay? This is not view will reappear; it’s viewWillAppear.
Dialogue: 0,0:32:04.84,0:32:07.63,yin,,0,0,0,, 所以放在这里很合适 \N{\fs12}Okay. So that’s a good thing to put in here.
Dialogue: 0,0:32:08.94,0:32:10.41,yin,,0,0,0,, 我们会在后面的课程中讲到 \N{\fs12}We’ll talk later in the course
Dialogue: 0,0:32:10.42,0:32:14.06,yin,,0,0,0,, 在这里添加代码以实现优化 \N{\fs12}about putting code in here for optimization purposes
Dialogue: 0,0:32:14.08,0:32:17.60,yin,,0,0,0,, 因为如果你添加的操作需要大量资源 \N{\fs12}because if you put something that’s going to take lot of resources,
Dialogue: 0,0:32:17.62,0:32:20.30,yin,,0,0,0,, 比如要在 viewDidLoad 中进行网络调用 \N{\fs12}like you’re going to make some network call in viewDidLoad,
Dialogue: 0,0:32:20.48,0:32:22.92,yin,,0,0,0,, 如果你的 MVC 始终没有出现在屏幕上呢 \N{\fs12}and what if your MVC never appears on screen?
Dialogue: 0,0:32:23.37,0:32:26.60,yin,,0,0,0,, 那 viewDidLoad 中的网络调用就浪费了时间 \N{\fs12}Well, you wasted that time doing that network call on viewDidLoad.
Dialogue: 0,0:32:27.02,0:32:28.95,yin,,0,0,0,, 而如果放在 viewWillAppear 中执行 \N{\fs12}Whereas if you do it in viewWillAppear,
Dialogue: 0,0:32:29.08,0:32:31.13,yin,,0,0,0,, 尽管你也要对它进行设计 \N{\fs12}even though you’re going to have to design it –
Dialogue: 0,0:32:31.14,0:32:32.44,yin,,0,0,0,, 因为如果你要在网络中执行什么操作 \N{\fs12}because if you do something in the network,
Dialogue: 0,0:32:32.45,0:32:33.56,yin,,0,0,0,, 会延迟一些才能返回结果 \N{\fs12}it’s going to come later;
Dialogue: 0,0:32:33.57,0:32:35.70,yin,,0,0,0,, 并不会立即得到 这也没问题 \N{\fs12}it’s not going to be instantaneously available, that’s okay,
Dialogue: 0,0:32:35.70,0:32:38.12,yin,,0,0,0,, 我们会讲到如何利用多线程解决这个问题 \N{\fs12}we’ll talk about how to do multithreaded, make that all work –
Dialogue: 0,0:32:38.88,0:32:40.30,yin,,0,0,0,, 在 viewWillAppear 中开始 \N{\fs12}kicking it off in viewWillAppear
Dialogue: 0,0:32:40.31,0:32:41.65,yin,,0,0,0,, 效果可能更好一些 \N{\fs12}might be a little better performance
Dialogue: 0,0:32:41.65,0:32:43.39,yin,,0,0,0,, 因为当你收到 viewWillAppear 时 \N{\fs12}because you know when you get viewWillAppear
Dialogue: 0,0:32:43.39,0:32:45.50,yin,,0,0,0,, 代表你的视图就要在屏幕上显示 \N{\fs12}that your view is going to appear on screen.
Dialogue: 0,0:32:45.96,0:32:48.05,yin,,0,0,0,, 这时做些花销大的操作是值得的 \N{\fs12}Okay? So it’s worth it to do something expensive.
Dialogue: 0,0:32:48.28,0:32:49.47,yin,,0,0,0,, 这是高级内容了 \N{\fs12}But that’s kind of advanced stuff.
Dialogue: 0,0:32:49.47,0:32:51.13,yin,,0,0,0,, 目前不用太过担心这部分内容 \N{\fs12}So I won’t worry about that too much for now.
Dialogue: 0,0:32:52.33,0:32:54.52,yin,,0,0,0,, 在这里视图的几何信息已经设置 \N{\fs12}The view’s geometry is set here.
Dialogue: 0,0:32:54.76,0:32:57.29,yin,,0,0,0,, 所以可以在这里执行一些基于几何的初始化 \N{\fs12}So you could do some initialization based on geometry here.
Dialogue: 0,0:32:57.29,0:32:59.39,yin,,0,0,0,, 很多人这样做 因为很简单 \N{\fs12}And a lot of people do it because it’s kind of simple.
Dialogue: 0,0:32:59.70,0:33:00.83,yin,,0,0,0,, 但是还有一个地方 \N{\fs12}But there’s actually a better place
Dialogue: 0,0:33:00.83,0:33:03.81,yin,,0,0,0,, 更适合于基于几何的初始化 \N{\fs12}to do geometry-based initialization.
Dialogue: 0,0:33:04.06,0:33:05.47,yin,,0,0,0,, 但是没关系 \N{\fs12}But it’s okay.
Dialogue: 0,0:33:05.48,0:33:07.71,yin,,0,0,0,, 可以在 viewWillAppear 中执行 \N{\fs12}It’s quote “Okay to do it in viewWillAppear”
Dialogue: 0,0:33:08.20,0:33:10.47,yin,,0,0,0,, 只要你明白 \N{\fs12}as long as you understand
Dialogue: 0,0:33:10.48,0:33:13.38,yin,,0,0,0,, 几何内容是可以在 viewWillAppear 之后改变的 \N{\fs12}that your geometry could change after viewWillAppear.
Dialogue: 0,0:33:13.38,0:33:15.16,yin,,0,0,0,, 换句话说 你在屏幕上时 \N{\fs12}In other words, you can be on screen
Dialogue: 0,0:33:15.29,0:33:16.79,yin,,0,0,0,, 有人旋转了手机 \N{\fs12}and someone could rotate the phone,
Dialogue: 0,0:33:16.80,0:33:18.45,yin,,0,0,0,, 这样几何内容就被改变了 \N{\fs12}and now your geometry just changed.
Dialogue: 0,0:33:18.45,0:33:20.67,yin,,0,0,0,, 你最好对这种情况进行处理 \N{\fs12}Okay? So you better deal with that, okay,
Dialogue: 0,0:33:20.67,0:33:23.63,yin,,0,0,0,, 旋转时并不会得到 viewWillAppear\N{\fs12}that you’re not going to get viewWillAppear when you rotate,
Dialogue: 0,0:33:23.63,0:33:24.67,yin,,0,0,0,, 而是别的方法 \N{\fs12}you’re going to get other things.
Dialogue: 0,0:33:26.01,0:33:29.81,yin,,0,0,0,, 当视图从屏幕上离开时 你也会得到通知 \N{\fs12}Okay. You also get notified when your view goes off screen.
Dialogue: 0,0:33:29.85,0:33:31.86,yin,,0,0,0,, 也就是这个 viewWillDisappear\N{\fs12}So that viewWillDisappear, okay?
Dialogue: 0,0:33:32.14,0:33:33.96,yin,,0,0,0,, 要在这个方法里做些什么呢 \N{\fs12}And what do you want to do in here?
Dialogue: 0,0:33:34.21,0:33:36.39,yin,,0,0,0,, 通常不会在这个方法中执行太多内容 \N{\fs12}You don’t usually do a lot of stuff in here.
Dialogue: 0,0:33:36.39,0:33:40.52,yin,,0,0,0,, 如果你要做些动画之类的 \N{\fs12}If you’re doing something like animation or something,
Dialogue: 0,0:33:40.52,0:33:42.76,yin,,0,0,0,, 显然可以在这里停止动画 \N{\fs12}obviously this would be a good place to stop doing that
Dialogue: 0,0:33:42.77,0:33:44.19,yin,,0,0,0,, 因为出现 viewWillDisappear 时 \N{\fs12}because when viewWillDisappear happen,
Dialogue: 0,0:33:44.20,0:33:47.37,yin,,0,0,0,, 你希望你的控制器能做一个好人 \N{\fs12}really you want your controller to become a good citizen:
Dialogue: 0,0:33:47.40,0:33:48.84,yin,,0,0,0,, 不再占用资源 \N{\fs12}Stop using resources.
Dialogue: 0,0:33:48.84,0:33:50.96,yin,,0,0,0,, 你不在屏幕上了 停止吧 好吗 \N{\fs12}You’re not on screen, stop it. Okay?
Dialogue: 0,0:33:50.97,0:33:52.88,yin,,0,0,0,, 当你再回到屏幕上的时候 会再次调用 viewWillAppear\N{\fs12}You’ll get viewWillAppear when you go back
Dialogue: 0,0:33:52.88,0:33:55.04,yin,,0,0,0,, 可以再同步回去 \N{\fs12}and you can sync back up to the world.
Dialogue: 0,0:33:55.47,0:33:59.04,yin,,0,0,0,, 但是当你从屏幕上消失后 就要保持低调 \N{\fs12}But after you disappear, you kind of want to lay low, right,
Dialogue: 0,0:33:59.04,0:34:01.74,yin,,0,0,0,, 少占用内存空间和 CPU 性能 \N{\fs12}in terms of memory usage and certainly CPU –
Dialogue: 0,0:34:01.75,0:34:03.46,yin,,0,0,0,, 你并不想再继续使用 CPU\N{\fs12}you don’t want to be using CPU.
Dialogue: 0,0:34:03.69,0:34:05.90,yin,,0,0,0,, 这里很适合停止某项操作 \N{\fs12}So this is a good place to do stuff like that
Dialogue: 0,0:34:05.90,0:34:07.22,yin,,0,0,0,, 也许还要记住当前状态 \N{\fs12}and to maybe remember state
Dialogue: 0,0:34:07.23,0:34:09.90,yin,,0,0,0,, 以便之后在 viewWillAppear 中恢复等等 \N{\fs12}that you’re going to restore in viewWillAppear again, whatever.
Dialogue: 0,0:34:10.01,0:34:11.09,yin,,0,0,0,, 都是你们可能想要做的事情 \N{\fs12}Kind of what you might think.
Dialogue: 0,0:34:11.52,0:34:13.19,yin,,0,0,0,, 这些方法都有 did 已完成的版本 \N{\fs12}There’s also did versions of these.
Dialogue: 0,0:34:13.37,0:34:16.12,yin,,0,0,0,,viewDidAppear 和 viewDidDisappear\N{\fs12}viewDidAppear and viewDidDisappear.
Dialogue: 0,0:34:16.12,0:34:18.18,yin,,0,0,0,, 和大家可能想到的作用一样 \N{\fs12}And that happens exactly what you might think, right?
Dialogue: 0,0:34:18.18,0:34:21.00,yin,,0,0,0,,viewDidAppear 会在你出现在屏幕上后被调用 \N{\fs12}ViewDidAppear gets called after you’re now on screen.
Dialogue: 0,0:34:21.35,0:34:24.38,yin,,0,0,0,, 你一出现在屏幕上 然后这个方法就被调用了 \N{\fs12}Okay? You just appeared and you just got called, okay?
Dialogue: 0,0:34:24.68,0:34:26.83,yin,,0,0,0,, 而 viewDidDisappear 是在你从屏幕上消失后被调用 \N{\fs12}Same thing, viewDidDisappear — you just disappeared.
Dialogue: 0,0:34:28.35,0:34:30.96,yin,,0,0,0,, 现在 我们来讲讲几何方面的内容 \N{\fs12}Okay. Now, let’s talk about geometry.
Dialogue: 0,0:34:31.10,0:34:33.38,yin,,0,0,0,, 我把这部分单独放在了一张幻灯片上 \N{\fs12}Okay. I put this off to this slide.
Dialogue: 0,0:34:33.89,0:34:38.26,yin,,0,0,0,, 关于几何部分 在 iOS6 中引入了两个很棒的方法 \N{\fs12}Your geometry, in iOS 6 they introduced these really cool two methods
Dialogue: 0,0:34:38.40,0:34:42.04,yin,,0,0,0,,viewWillLayoutSubviews 和 viewDidLayoutSubviews\N{\fs12}viewWillLayoutSubviews and viewDidLayoutSubviews.
Dialogue: 0,0:34:42.72,0:34:45.89,yin,,0,0,0,, 就是在这里面添加几何相关的代码 \N{\fs12}This is where to put geometry-related code.
Dialogue: 0,0:34:46.22,0:34:50.32,yin,,0,0,0,, 在 iOS7 想要布局你的子视图 布局视图之前 \N{\fs12}So viewWillLayoutSubviews is called just before
Dialogue: 0,0:34:50.72,0:34:55.30,yin,,0,0,0,,viewWillLayoutSubviews 被调用 \N{\fs12}iOS 7 tries to layout your subviews, tries to layout your view.
Dialogue: 0,0:34:55.30,0:34:57.49,yin,,0,0,0,, 你可能刚刚从竖屏 \N{\fs12}Okay? So your geometry just changed
Dialogue: 0,0:34:57.50,0:34:59.16,yin,,0,0,0,, 换到了横屏 \N{\fs12}maybe from portrait to landscape.
Dialogue: 0,0:34:59.37,0:35:02.88,yin,,0,0,0,, 而在 iOS7 中 有很多自动操作内容 叫做自动布局 \N{\fs12}And there’s a lot of automated stuff in iOS 7 called autolayout
Dialogue: 0,0:35:03.04,0:35:05.91,yin,,0,0,0,, 会尝试将所有元素移动至合适位置 \N{\fs12}that will try and move everything around to fit.
Dialogue: 0,0:35:06.05,0:35:08.73,yin,,0,0,0,, 并不总能实现 但它会尝试 \N{\fs12}Now, it can’t always do it but it tries.
Dialogue: 0,0:35:08.73,0:35:11.65,yin,,0,0,0,, 在此之前 系统会调用 viewWillLayoutSubviews\N{\fs12}Okay? So viewWillLayoutSubviews is called before that.
Dialogue: 0,0:35:12.16,0:35:15.79,yin,,0,0,0,, 而 viewDidLayoutSubviews 会在完成之后被调用 \N{\fs12}And viewDidLayoutSubviews is called after it’s done that,
Dialogue: 0,0:35:15.81,0:35:17.80,yin,,0,0,0,, 完成尝试之后 \N{\fs12}after it’s made that attempt. Okay?
Dialogue: 0,0:35:18.14,0:35:21.52,yin,,0,0,0,, 如果某些东西被手动移动了 \N{\fs12}Now, if there’s some things that have been moved manually,
Dialogue: 0,0:35:21.53,0:35:23.16,yin,,0,0,0,, 你需要手动移动它们 \N{\fs12}you have to move them by hand,
Dialogue: 0,0:35:23.63,0:35:26.44,yin,,0,0,0,, 在自动布局规则中 \N{\fs12}okay, that there’s just no way to express
Dialogue: 0,0:35:26.44,0:35:29.18,yin,,0,0,0,, 不能清楚表达要移动到哪里 \N{\fs12}in the automatic layout rules where things go,
Dialogue: 0,0:35:29.40,0:35:31.52,yin,,0,0,0,, 那么最适合执行它的地方 \N{\fs12}then best place to do it
Dialogue: 0,0:35:31.53,0:35:34.21,yin,,0,0,0,, 也许就是 viewDidLayoutSubviews 中了 \N{\fs12}is probably in viewDidLayoutSubviews, okay,
Dialogue: 0,0:35:34.21,0:35:35.73,yin,,0,0,0,, 因为系统已经将各元素摆出来 \N{\fs12}because the system’s already laid things out.
Dialogue: 0,0:35:35.95,0:35:38.47,yin,,0,0,0,, 现在你可以移动调整 \N{\fs12}Now you can move around the last few pieces
Dialogue: 0,0:35:39.33,0:35:40.26,yin,,0,0,0,, 最后几个需要布局的元素 \N{\fs12}that need to be laid out.
Dialogue: 0,0:35:40.40,0:35:41.72,yin,,0,0,0,, 但是按钮这类对象 \N{\fs12}But things like buttons, you know,
Dialogue: 0,0:35:41.73,0:35:43.74,yin,,0,0,0,, 比如添加和去除轮廓按钮 \N{\fs12}like that outline and unoutline button,
Dialogue: 0,0:35:43.95,0:35:44.96,yin,,0,0,0,, 很容易实现布局 \N{\fs12}it’s really easy to make it
Dialogue: 0,0:35:44.97,0:35:48.27,yin,,0,0,0,, 当你旋转至横屏时 它们就会移动到下角 \N{\fs12}so that when you rotate to landscape they move down to the corners.
Dialogue: 0,0:35:49.04,0:35:50.97,yin,,0,0,0,, 这应该是我们想要的效果 \N{\fs12}Okay? That’s what you probably want there.
Dialogue: 0,0:35:51.07,0:35:52.29,yin,,0,0,0,, 文本视图也是一样的 \N{\fs12}Same thing, the text view,
Dialogue: 0,0:35:52.43,0:35:55.22,yin,,0,0,0,, 当转为横屏时 \N{\fs12}pretty easy to make it widen out and get shorter
Dialogue: 0,0:35:55.22,0:35:56.22,yin,,0,0,0,, 可以轻松地加宽变短 \N{\fs12}when it goes to landscape.
Dialogue: 0,0:35:56.55,0:36:00.40,yin,,0,0,0,, 但是像 Matchismo 那样 你有很多卡牌 \N{\fs12}Okay? But like in Matchismo, you got all those cards.
Dialogue: 0,0:36:00.60,0:36:05.64,yin,,0,0,0,, 当旋转屏幕时 你希望使用某种逻辑来判断出 \N{\fs12}When you turn it, you might want to use some logic to figure out:
Dialogue: 0,0:36:05.64,0:36:07.25,yin,,0,0,0,, 竖屏转为横屏时 \N{\fs12}Where are you going to lay the cards out
Dialogue: 0,0:36:07.39,0:36:09.70,yin,,0,0,0,, 这些卡牌要放在哪里 \N{\fs12}in a landscape orientation versus portrait?
Dialogue: 0,0:36:10.12,0:36:12.39,yin,,0,0,0,, 大家下周要实现这个功能 \N{\fs12}Okay? And you’re going to have to do that next week.
Dialogue: 0,0:36:12.67,0:36:13.82,yin,,0,0,0,, 不是这周的内容 \N{\fs12}Okay? Not this week.
Dialogue: 0,0:36:15.97,0:36:19.45,yin,,0,0,0,, 我想再讲一些关于自动旋转的内容 \N{\fs12}So I want to talk a little more about autorotation.
Dialogue: 0,0:36:19.57,0:36:21.63,yin,,0,0,0,, 也就是 当你旋转手机时 \N{\fs12}So this is the thing where you turn the phone
Dialogue: 0,0:36:21.77,0:36:23.89,yin,,0,0,0,, 几何布局会自动变化 \N{\fs12}and your geometry automatically gets changed.
Dialogue: 0,0:36:24.12,0:36:28.07,yin,,0,0,0,, 这种自动调整至新的几何布局的功能 \N{\fs12}That automatic change to the new geometry only happens
Dialogue: 0,0:36:28.09,0:36:29.65,yin,,0,0,0,, 只会在这些条件为真时会发生 \N{\fs12}if these conditions are true.
Dialogue: 0,0:36:29.88,0:36:32.90,yin,,0,0,0,, 视图控制器的 shouldAutorotate 方法是否返回 YES\N{\fs12}Your view controller has to return yes from shouldAutorotate,
Dialogue: 0,0:36:32.91,0:36:33.80,yin,,0,0,0,, 这是默认值 \N{\fs12}which is the default.
Dialogue: 0,0:36:34.33,0:36:37.61,yin,,0,0,0,, 你的视图控制器需要从 supportedInterfaceOrientations\N{\fs12}Your view controller has to return that new orientation
Dialogue: 0,0:36:37.61,0:36:40.08,yin,,0,0,0,, 返回那个新方向 \N{\fs12}from supportedInterfaceOrientations.
Dialogue: 0,0:36:40.08,0:36:42.63,yin,,0,0,0,, 这是一个方法 它返回一个数字 \N{\fs12}That is a method that returns an e num
Dialogue: 0,0:36:43.42,0:36:47.23,yin,,0,0,0,, 代表横屏 竖屏和倒立竖屏方向 \N{\fs12}with landscape and portrait, portrait upside down in there.
Dialogue: 0,0:36:47.23,0:36:50.76,yin,,0,0,0,, 你需要声明支持多个旋转方向 \N{\fs12}So you have to say that you support the various rotations.
Dialogue: 0,0:36:50.76,0:36:53.20,yin,,0,0,0,, 我相信默认是支持全部旋转方向的 \N{\fs12}I believe by default it supports all rotations.
Dialogue: 0,0:36:53.76,0:36:56.25,yin,,0,0,0,, 你的整个应用 \N{\fs12}And your application as a whole
Dialogue: 0,0:36:56.35,0:36:59.22,yin,,0,0,0,, 需要支持那个新方向 \N{\fs12}has to say that it supports that new orientation.
Dialogue: 0,0:36:59.50,0:37:00.85,yin,,0,0,0,, 这个设置…\N{\fs12}Okay? And that is set –
Dialogue: 0,0:37:00.85,0:37:03.17,yin,,0,0,0,, 还记得我们第一次创建应用 运行它的时候吗 \N{\fs12}remember when we first built our application and it ran?
Dialogue: 0,0:37:03.37,0:37:06.71,yin,,0,0,0,, 当时出现了应用的各种设置 \N{\fs12}There was, like, all these kind the settings for our app
Dialogue: 0,0:37:06.71,0:37:08.24,yin,,0,0,0,, 我挥了挥手说 \N{\fs12}that I just waved my hand and said,
Dialogue: 0,0:37:08.24,0:37:09.15,yin,,0,0,0,, 我们后面再讲 \N{\fs12}”We’ll look at this later”?
Dialogue: 0,0:37:09.37,0:37:10.81,yin,,0,0,0,, 里面有一个设置 \N{\fs12}Well, one of the settings in there
Dialogue: 0,0:37:10.82,0:37:13.09,yin,,0,0,0,, 是应用支持设备的哪个方向 \N{\fs12}is which orientations of a device –
Dialogue: 0,0:37:13.10,0:37:16.71,yin,,0,0,0,, 竖屏 横屏 倒立竖屏 \N{\fs12}portrait, landscape, portrait upside down — do you support?
Dialogue: 0,0:37:17.08,0:37:20.08,yin,,0,0,0,, 你需要在那里选中应用支持的方向 \N{\fs12}Okay? So you have to click on the ones that you support.
Dialogue: 0,0:37:20.48,0:37:23.93,yin,,0,0,0,, 如果这些都做了 那么当设备旋转时 \N{\fs12}And if you do all these things, then when the device rotates,
Dialogue: 0,0:37:23.93,0:37:26.38,yin,,0,0,0,, 你的视图的边界就会自动变化 \N{\fs12}your bounds of your view will automatically be changed
Dialogue: 0,0:37:26.43,0:37:28.55,yin,,0,0,0,, 你会得到 viewWillLayoutSubviews\N{\fs12}and you’ll get the whole viewWillLayoutSubviews,
Dialogue: 0,0:37:28.55,0:37:30.52,yin,,0,0,0,,viewDidLayoutSubviews 自动旋转 \N{\fs12}viewDidLayoutSubviews, autorotate,
Dialogue: 0,0:37:30.52,0:37:31.92,yin,,0,0,0,, 自动布局 都会实现 \N{\fs12}autolayout, all that happening.
Dialogue: 0,0:37:32.71,0:37:36.26,yin,,0,0,0,, 也会调用其他方法 \N{\fs12}Okay? There are also methods that get called.
Dialogue: 0,0:37:36.26,0:37:37.67,yin,,0,0,0,, 我把它们设成了灰色 \N{\fs12}I put them in gray here
Dialogue: 0,0:37:37.68,0:37:39.10,yin,,0,0,0,, 因为我们不会讲解这些方法 \N{\fs12}because we’re not really going to look at them.
Dialogue: 0,0:37:39.31,0:37:40.43,yin,,0,0,0,, 很少会用到它们 \N{\fs12}They’re rarely needed.
Dialogue: 0,0:37:40.64,0:37:43.56,yin,,0,0,0,, 自动布局和 viewDidLayoutSubviews\N{\fs12}Autolayout and viewDidLayoutSubviews
Dialogue: 0,0:37:43.58,0:37:45.29,yin,,0,0,0,, 通常包含了所有需要的内容 \N{\fs12}are usually going to cover everything you need.
Dialogue: 0,0:37:45.29,0:37:47.30,yin,,0,0,0,, 但是如果你想要改变旋转动画等内容 \N{\fs12}But if you wanted to get involved in the animation
Dialogue: 0,0:37:47.30,0:37:49.29,yin,,0,0,0,, 也都是可以的 \N{\fs12}of the rotation and all that, it’s all possible.
Dialogue: 0,0:37:49.29,0:37:51.69,yin,,0,0,0,, 但我们就不详细讲了 \N{\fs12}But we’re not really looking at that.
Dialogue: 0,0:37:52.53,0:37:54.48,yin,,0,0,0,, 在内存不足情况下 \N{\fs12}Okay. In low-memory situations,
Dialogue: 0,0:37:54.49,0:37:57.14,yin,,0,0,0,, 你的视图控制器会收到这条消息 \N{\fs12}you’re going to get this message to your view controller
Dialogue: 0,0:37:57.15,0:37:58.80,yin,,0,0,0,, 叫做 didReceiveMemoryWarning\N{\fs12}called “didReceiveMemoryWarning.”
Dialogue: 0,0:37:59.37,0:38:02.62,yin,,0,0,0,, 内存不足并不代表 \N{\fs12}Okay? And low memory doesn’t necessarily mean
Dialogue: 0,0:38:02.76,0:38:04.46,yin,,0,0,0,, 你的应用占用了很大的内存空间 \N{\fs12}your app is using a lot of memory;
Dialogue: 0,0:38:04.47,0:38:06.90,yin,,0,0,0,, 也许只是手机上运行的所有应用 \N{\fs12}it just might be all apps on the phone combined
Dialogue: 0,0:38:06.92,0:38:08.31,yin,,0,0,0,, 一块占用了很大的内存 \N{\fs12}are using a lot of the memory
Dialogue: 0,0:38:08.31,0:38:09.76,yin,,0,0,0,, 需要释放一些空间 \N{\fs12}and it needs some of it back.
Dialogue: 0,0:38:09.77,0:38:12.65,yin,,0,0,0,, 它也许向很多应用都发送了这个消息 \N{\fs12}So it might be sending this to lots of applications.
Dialogue: 0,0:38:13.23,0:38:14.90,yin,,0,0,0,, 是否生成这个警告 \N{\fs12}It’s completely up to the system
Dialogue: 0,0:38:14.92,0:38:17.12,yin,,0,0,0,, 完全由系统决定 \N{\fs12}to decide whether it wants to generate this warning.
Dialogue: 0,0:38:17.41,0:38:20.14,yin,,0,0,0,, 当你收到警告后 唯一的责任就是 \N{\fs12}And your only responsibility when you get this thing
Dialogue: 0,0:38:20.24,0:38:21.71,yin,,0,0,0,, 试着释放内存 \N{\fs12}is to try and free up memory.
Dialogue: 0,0:38:22.17,0:38:24.61,yin,,0,0,0,, 也就是堆中的内容 \N{\fs12}Okay? That means in the heap.
Dialogue: 0,0:38:25.28,0:38:28.36,yin,,0,0,0,, 也就是将强指针设为 nil\N{\fs12}And that means setting strong pointers you have to nil.
Dialogue: 0,0:38:28.98,0:38:32.81,yin,,0,0,0,, 如果你展示一幅图像 \N{\fs12}Okay? Now, if you display an image, okay,
Dialogue: 0,0:38:32.82,0:38:35.70,yin,,0,0,0,, 如果你的 MVC 展示一幅图像 会占据很大内存 \N{\fs12}if your MVC displays an image, that’s big memory.
Dialogue: 0,0:38:35.83,0:38:37.26,yin,,0,0,0,, 图像需要很多内存空间 \N{\fs12}Images are a lot of memory.
Dialogue: 0,0:38:37.56,0:38:40.83,yin,,0,0,0,, 或者播放一段声音 也需要很多内存 \N{\fs12}Okay? Or it plays a sound — that’s a lot of memory.
Dialogue: 0,0:38:41.37,0:38:43.04,yin,,0,0,0,, 但是如果你的视图控制器 \N{\fs12}But if your thing is on screen,
Dialogue: 0,0:38:43.05,0:38:44.44,yin,,0,0,0,, 正在屏幕上显示 \N{\fs12}if your view controller is on screen,
Dialogue: 0,0:38:44.60,0:38:46.53,yin,,0,0,0,, 就不能释放那张图像 \N{\fs12}you can’t throw that image out.
Dialogue: 0,0:38:46.54,0:38:47.79,yin,,0,0,0,, 它需要显示在屏幕上 \N{\fs12}It needs to be on screen.
Dialogue: 0,0:38:47.79,0:38:49.35,yin,,0,0,0,, 所以如果你在屏幕上 \N{\fs12}So there’s really not much you can do
Dialogue: 0,0:38:49.56,0:38:51.94,yin,,0,0,0,, 收到了 didReceiveMemoryWarning 你其实没有太多可做的 \N{\fs12}when you get didReceiveMemoryWarning if you’re on screen.
Dialogue: 0,0:38:52.21,0:38:54.60,yin,,0,0,0,, 但是如果你有一张可选图像之类的 \N{\fs12}Now, however, if you have an alternate image
Dialogue: 0,0:38:54.60,0:38:56.74,yin,,0,0,0,, 现在不在屏幕上 \N{\fs12}or something that’s not on screen right now,
Dialogue: 0,0:38:56.88,0:39:00.41,yin,,0,0,0,, 只要你可以重新创建它 就可以先将它设为 nil\N{\fs12}you could set that to nil as long as you can recreate it, okay –
Dialogue: 0,0:39:00.62,0:39:03.13,yin,,0,0,0,, 不管你是从文件系统中重新创建 \N{\fs12}either recreate it by getting it from the file system,
Dialogue: 0,0:39:03.42,0:39:06.26,yin,,0,0,0,, 还是网络调用 重新下载一幅 \N{\fs12}even making a network call to download an image
Dialogue: 0,0:39:06.28,0:39:09.08,yin,,0,0,0,, 只要图像不是立刻需要就可以 \N{\fs12}as long as the image doesn’t need to be instantly available.
Dialogue: 0,0:39:10.38,0:39:13.23,yin,,0,0,0,, 这是处理内存警告的一个例子 \N{\fs12}But that’s an example of how you could respond to this.
Dialogue: 0,0:39:13.25,0:39:15.77,yin,,0,0,0,, 尤其是当你不在屏幕上时 你可以响应这个警告 \N{\fs12}Especially if you’re off screen you could respond to this,
Dialogue: 0,0:39:15.77,0:39:18.21,yin,,0,0,0,, 尽管我认为 当你离开屏幕时 \N{\fs12}although my argument is when you go off screen
Dialogue: 0,0:39:18.21,0:39:20.95,yin,,0,0,0,, 会调用 viewDidDisappear 和 viewWillDisappear\N{\fs12}and you get viewDidDisappear or viewWillDisappear,
Dialogue: 0,0:39:21.34,0:39:22.88,yin,,0,0,0,, 不管怎样 你都应该释放它 \N{\fs12}you should free up that stuff anyway.
Dialogue: 0,0:39:23.22,0:39:25.77,yin,,0,0,0,, 调用 viewWillAppear 时再重新获取 \N{\fs12}Okay? And get it back when you do viewWillAppear.
Dialogue: 0,0:39:26.13,0:39:27.93,yin,,0,0,0,, 因为你不希望自己成为内存占用大户 \N{\fs12}Because you don’t want to be a memory pig.
Dialogue: 0,0:39:28.02,0:39:31.68,yin,,0,0,0,, 成为内存占用大户会怎么样呢 \N{\fs12}Okay? Now what does it matter to be a memory pig?
Dialogue: 0,0:39:31.68,0:39:32.47,yin,,0,0,0,, 我们为什么要在意 \N{\fs12}Why do we care?
Dialogue: 0,0:39:32.74,0:39:33.77,yin,,0,0,0,, 有两点原因 \N{\fs12}Well, couple of things.
Dialogue: 0,0:39:34.33,0:39:37.24,yin,,0,0,0,, 首先 只针对内存大户 \N{\fs12}Okay. First of all, by the way, only things that use a lot of memory
Dialogue: 0,0:39:37.26,0:39:40.75,yin,,0,0,0,, 比如图像 视频 声音 \N{\fs12}are things like images, video, sound –
Dialogue: 0,0:39:41.02,0:39:42.12,yin,,0,0,0,, 这些内容需要很大内存 \N{\fs12}those can use a lot of memory.
Dialogue: 0,0:39:42.41,0:39:45.94,yin,,0,0,0,, 像内含五项内容的词典这类小东西 \N{\fs12}Small things like little dictionaries with five things in them,
Dialogue: 0,0:39:46.19,0:39:47.92,yin,,0,0,0,, 几乎不占什么内存 \N{\fs12}that’s using virtually no memory.
Dialogue: 0,0:39:47.92,0:39:50.69,yin,,0,0,0,, 不用浪费时间释放它们 \N{\fs12}I wouldn’t even waste your time freeing those up.
Dialogue: 0,0:39:50.91,0:39:52.96,yin,,0,0,0,, 那样只会让你的代码变得复杂 \N{\fs12}Okay? That’s just going to make your code complex for nothing.
Dialogue: 0,0:39:53.24,0:39:55.96,yin,,0,0,0,, 所以在说释放内存问题时 \N{\fs12}So we’re talking about good-sized things, okay,
Dialogue: 0,0:39:55.96,0:39:57.30,yin,,0,0,0,, 我们说的是大型内容 \N{\fs12}when we say “Free things up.”
Dialogue: 0,0:39:57.45,0:39:59.36,yin,,0,0,0,, 但是这里我们为什么要乖乖释放内存呢 \N{\fs12}But anyway, why do we want to be a good citizen here?
Dialogue: 0,0:39:59.50,0:40:02.54,yin,,0,0,0,, 如果 iOS 认为你大量侵占了内存 \N{\fs12}Well, iOS has the right to kill your app
Dialogue: 0,0:40:02.61,0:40:04.14,yin,,0,0,0,, 它是可以终止你的应用的 \N{\fs12}if it thinks you’re being a memory hog.
Dialogue: 0,0:40:04.57,0:40:07.23,yin,,0,0,0,, 如果系统内存不足 \N{\fs12}Okay? If there’s not enough memory on the system
Dialogue: 0,0:40:07.28,0:40:09.69,yin,,0,0,0,, 而你的应用恰好占用了很多内存 \N{\fs12}and your app happens to be using a lot of memory,
Dialogue: 0,0:40:09.87,0:40:12.83,yin,,0,0,0,, 它就可以过来说 杀掉它 \N{\fs12}it can just come along and say, “Bam-o, killing that baby.”
Dialogue: 0,0:40:13.52,0:40:15.22,yin,,0,0,0,, 它完全可以这样做 \N{\fs12}It’s perfectly within its rights.
Dialogue: 0,0:40:15.90,0:40:18.69,yin,,0,0,0,, 如果你合理使用内存 它绝不会这样做 \N{\fs12}If you’re a good memory citizen, it’s never going to do that.
Dialogue: 0,0:40:19.02,0:40:21.08,yin,,0,0,0,, 但是想要做一个好的内存使用者 \N{\fs12}Okay? But being a good memory citizen
Dialogue: 0,0:40:21.09,0:40:24.12,yin,,0,0,0,, 你所用的内存不应该超过 \N{\fs12}means you shouldn’t be using a lot more memory than, you know,
Dialogue: 0,0:40:24.14,0:40:26.26,yin,,0,0,0,, 一个 MVC 出现在屏幕上所占的内存 \N{\fs12}a single MVC that’s on screen right now.
Dialogue: 0,0:40:26.26,0:40:28.64,yin,,0,0,0,, 如果应用是运行在 iPad 上的 也许是三到四个 MVC\N{\fs12}Or if you’re on the iPad, maybe it’s three or four MVCs,
Dialogue: 0,0:40:28.65,0:40:30.29,yin,,0,0,0,, 取决于你的布局 \N{\fs12}depending on what your layout is.
Dialogue: 0,0:40:30.80,0:40:33.61,yin,,0,0,0,, 不管用多少内存 都应该合理使用 \N{\fs12}You know, however much memory, that would be reasonable to use.
Dialogue: 0,0:40:33.62,0:40:36.92,yin,,0,0,0,, 放个视频 没问题 可以的 \N{\fs12}A video in there, no problem, etc. That’s fine.
Dialogue: 0,0:40:36.92,0:40:39.27,yin,,0,0,0,, 但是如果你要在堆中保存 20 个视频 \N{\fs12}But if you have, like, twenty videos sitting in the heap,
Dialogue: 0,0:40:39.60,0:40:42.16,yin,,0,0,0,, 你就是下一个被杀掉的应用 \N{\fs12}okay, you’re going to be a candidate to get blasted.
Dialogue: 0,0:40:42.43,0:40:47.04,yin,,0,0,0,, 另外一点是 你显然希望用户切换应用时 \N{\fs12}Okay? So the other thing is you obviously want other applications
Dialogue: 0,0:40:47.05,0:40:48.52,yin,,0,0,0,, 其他应用 \N{\fs12}to have as much memory available to them
Dialogue: 0,0:40:48.52,0:40:49.78,yin,,0,0,0,, 得到同样多的可用内存 \N{\fs12}when the user switches back and forth.
Dialogue: 0,0:40:49.78,0:40:52.37,yin,,0,0,0,, 如果用户对你的应用所占的内存有一个不好的印象 \N{\fs12}If you’ve got a reputation as a memory pig like,
Dialogue: 0,0:40:52.38,0:40:56.31,yin,,0,0,0,, 每次运行这个应用 其他应用就卡到不行 \N{\fs12}”Oh, when I run this app, all my other apps slow way down.
Dialogue: 0,0:40:56.31,0:40:57.04,yin,,0,0,0,, 真讨厌 \N{\fs12}Oh, it’s terrible.”
Dialogue: 0,0:40:57.23,0:40:59.49,yin,,0,0,0,, 然后他们会到应用商店进行评论 \N{\fs12}Then on the App Store people are going to say that,
Dialogue: 0,0:40:59.49,0:41:00.70,yin,,0,0,0,, 你会得到一个不太好的名声 \N{\fs12}and you’re going to get a bad reputation,
Dialogue: 0,0:41:00.70,0:41:02.15,yin,,0,0,0,, 大家就不想用你的应用了 \N{\fs12}and people aren’t going to want your application.
Dialogue: 0,0:41:02.15,0:41:03.97,yin,,0,0,0,, 这是不要侵占内存的另外一个原因 \N{\fs12}So that’s another reason not to be a memory pig.
Dialogue: 0,0:41:04.47,0:41:06.54,yin,,0,0,0,, 苹果能不能在审核应用时 \N{\fs12}Can Apple check this kind of stuff
Dialogue: 0,0:41:06.54,0:41:08.97,yin,,0,0,0,, 检查你的应用使用了多少内存呢 \N{\fs12}to see how much memory you use before they approve an app?
Dialogue: 0,0:41:08.98,0:41:09.87,yin,,0,0,0,, 是检查的内容吗 \N{\fs12}Is that a thing?
Dialogue: 0,0:41:10.19,0:41:12.16,yin,,0,0,0,, 问题是 苹果公司会不会 \N{\fs12}So the question is: Does Apple go and check
Dialogue: 0,0:41:12.24,0:41:14.21,yin,,0,0,0,, 在批准应用前检查确认 \N{\fs12}to make sure you’re being a good memory citizen
Dialogue: 0,0:41:14.22,0:41:15.16,yin,,0,0,0,, 应用是否合理使用内存 \N{\fs12}before they approve you?
Dialogue: 0,0:41:15.51,0:41:18.05,yin,,0,0,0,, 我不知道 \N{\fs12}I would say I don’t know.
Dialogue: 0,0:41:18.05,0:41:18.68,yin,,0,0,0,, 我不在苹果公司工作 \N{\fs12}I don’t work for Apple.
Dialogue: 0,0:41:18.68,0:41:20.52,yin,,0,0,0,, 我并不知道他们的审核流程 \N{\fs12}I don’t know what’s going on behind the scenes there
Dialogue: 0,0:41:20.53,0:41:22.04,yin,,0,0,0,, 具体是怎样的 \N{\fs12}in terms of their approval process.
Dialogue: 0,0:41:22.25,0:41:23.83,yin,,0,0,0,, 我猜 如果他们运行你的应用后 \N{\fs12}My guess is if they ran your app
Dialogue: 0,0:41:23.83,0:41:26.15,yin,,0,0,0,, 应用立刻占用了大量内存 \N{\fs12}and it just immediately ballooned up a huge amount of memory,
Dialogue: 0,0:41:26.16,0:41:27.16,yin,,0,0,0,, 他们是不会通过审核的 \N{\fs12}they would not approve it.
Dialogue: 0,0:41:27.16,0:41:28.15,yin,,0,0,0,, 这只是我的猜测 \N{\fs12}That’s just my guess.
Dialogue: 0,0:41:28.15,0:41:29.90,yin,,0,0,0,, 如果我是他们 我不会通过的 \N{\fs12}I mean, I wouldn’t if I were them.
Dialogue: 0,0:41:30.79,0:41:33.42,yin,,0,0,0,, 当然了 现在市面上有一些应用 \N{\fs12}And you know, certainly apps that are out there
Dialogue: 0,0:41:33.42,0:41:35.20,yin,,0,0,0,, 以占用大量内存著称 \N{\fs12}that have a reputation of being big memory pigs,
Dialogue: 0,0:41:35.20,0:41:37.63,yin,,0,0,0,, 当这些应用提交新版本等内容时 \N{\fs12}maybe when you submit your next version or something,
Dialogue: 0,0:41:37.64,0:41:39.85,yin,,0,0,0,, 审核人员会说 等等 你们修复内存问题了吗 \N{\fs12}they’re like, “Wait a second, did you fix that memory thing?”
Dialogue: 0,0:41:39.85,0:41:40.77,yin,,0,0,0,, 明白我的意思吗 \N{\fs12}You know what I’m saying?
Dialogue: 0,0:41:40.96,0:41:42.37,yin,,0,0,0,, 这是常识 \N{\fs12}It’s common sense, common sense.
Dialogue: 0,0:41:43.57,0:41:44.73,yin,,0,0,0,, 好的 就是这样 \N{\fs12}Okay. So that’s that.
Dialogue: 0,0:41:45.15,0:41:47.04,yin,,0,0,0,, 我刚才说过 我会讲讲 \N{\fs12}Okay. Now I told I would talk about
Dialogue: 0,0:41:47.05,0:41:49.38,yin,,0,0,0,, 视图控制器的创建 \N{\fs12}creation of the view controller.
Dialogue: 0,0:41:49.70,0:41:51.61,yin,,0,0,0,, 我回来 讲一下这部分内容 \N{\fs12}And so I’m going back and talking about it here.
Dialogue: 0,0:41:51.61,0:41:52.87,yin,,0,0,0,, 我只会简单介绍一下 \N{\fs12}I’m only going to talk about it briefly
Dialogue: 0,0:41:52.87,0:41:55.03,yin,,0,0,0,, 因为它真的不太重要 \N{\fs12}because it’s really not super important
Dialogue: 0,0:41:55.04,0:41:57.69,yin,,0,0,0,, 大多数情况下都会在 viewDidLoad 中进行初始化 \N{\fs12}because viewDidLoad is where you want most of your initialization.
Dialogue: 0,0:41:58.00,0:42:00.87,yin,,0,0,0,, 但是当你的视图控制器创建时 \N{\fs12}But when your view controller is created,
Dialogue: 0,0:42:00.88,0:42:04.14,yin,,0,0,0,, 当它从 storyboard 中取出并加水解冻 \N{\fs12}when it’s pulled out of that storyboard and unfreeze-dried,
Dialogue: 0,0:42:04.53,0:42:08.08,yin,,0,0,0,, 你的 init 方法并没有被调用 \N{\fs12}your init method is not called.
Dialogue: 0,0:42:08.58,0:42:10.76,yin,,0,0,0,, 另外一个初始化方法被调用了 \N{\fs12}Okay? A different init method is called.
Dialogue: 0,0:42:10.84,0:42:12.31,yin,,0,0,0,, 化冻的初始化方法 \N{\fs12}The unfreeze-drying init method,
Dialogue: 0,0:42:12.31,0:42:16.25,yin,,0,0,0,, 它是一个通用的初始化方法机制 \N{\fs12}which is a generic init method mechanism
Dialogue: 0,0:42:16.26,0:42:18.39,yin,,0,0,0,, 我们不会… 也许会讲讲 \N{\fs12}that we’re not going to — well, we might talk about it
Dialogue: 0,0:42:18.53,0:42:19.76,yin,,0,0,0,, 在课程第八周或者第九周的时候 \N{\fs12}in week eight or nine of this course.
Dialogue: 0,0:42:20.07,0:42:20.97,yin,,0,0,0,, 不太重要 \N{\fs12}Not that important.
Dialogue: 0,0:42:21.26,0:42:24.25,yin,,0,0,0,, 但 Xcode 就是用这个方法冻干你的应用的 \N{\fs12}But that’s what Xcode uses to freeze-dry your apps.
Dialogue: 0,0:42:24.26,0:42:29.25,yin,,0,0,0,, 那个初始化方法 你并不会生成它的子类 对吧 \N{\fs12}So that init — you don’t subclass that init, okay?
Dialogue: 0,0:42:29.77,0:42:30.62,yin,,0,0,0,, 它是个初始化方法 \N{\fs12}Okay, it’s an init;
Dialogue: 0,0:42:30.63,0:42:31.81,yin,,0,0,0,, 我甚至不会告诉大家它的名字 \N{\fs12}I’m not even going to tell you the name of it.
Dialogue: 0,0:42:31.81,0:42:33.12,yin,,0,0,0,, 不要生成它的子类 \N{\fs12}You don’t subclass it.
Dialogue: 0,0:42:35.54,0:42:39.57,yin,,0,0,0,, 而当某个元素从 storyboard 中解冻时 \N{\fs12}Instead, when something gets unfreeze-dried from a storyboard –
Dialogue: 0,0:42:39.92,0:42:41.78,yin,,0,0,0,, 任何东西 不只是你的控制器 \N{\fs12}anything, not just your controller
Dialogue: 0,0:42:41.87,0:42:44.13,yin,,0,0,0,, 甚至是按钮之类的东西解冻时 \N{\fs12}but even, like, a button or anything else comes out of there –
Dialogue: 0,0:42:44.30,0:42:46.44,yin,,0,0,0,, 这个方法 awakeFromNib\N{\fs12}this method, awakeFromNib –
Dialogue: 0,0:42:47.10,0:42:50.52,yin,,0,0,0,,Nib 是延续以前的名称 \N{\fs12}Nib is an old historical name;
Dialogue: 0,0:42:50.76,0:42:52.93,yin,,0,0,0,, 你可以理解为 awakeFromStoryboard\N{\fs12}you could think of it as awake from storyboard –
Dialogue: 0,0:42:53.73,0:42:54.73,yin,,0,0,0,, 这个方法会被调用 \N{\fs12}this gets called.
Dialogue: 0,0:42:54.93,0:42:56.59,yin,,0,0,0,, 你可以在这里执行 \N{\fs12}And you can put in here things
Dialogue: 0,0:42:56.59,0:42:58.51,yin,,0,0,0,, 通常会放在初始化方法中的内容 \N{\fs12}that you might normally put in your init.
Dialogue: 0,0:42:59.04,0:43:01.65,yin,,0,0,0,, 虽然这个时候你的输出口还没有设好 \N{\fs12}Although, again, your outlets are not set at this point.
Dialogue: 0,0:43:01.91,0:43:04.65,yin,,0,0,0,, 所以最好放在 viewDidLoad 中 \N{\fs12}So you’re better off putting stuff in viewDidLoad. Okay?
Dialogue: 0,0:43:04.95,0:43:06.47,yin,,0,0,0,, 但是如果因为某些原因 \N{\fs12}But if there’s some reason
Dialogue: 0,0:43:06.59,0:43:07.73,yin,,0,0,0,, 无法将某些操作放到 viewDidLoad 中执行 \N{\fs12}you can’t put something in viewDidLoad –
Dialogue: 0,0:43:07.75,0:43:09.83,yin,,0,0,0,, 我想不出一个好的例子 \N{\fs12}I can’t even think of a good example why that would be –
Dialogue: 0,0:43:09.97,0:43:11.63,yin,,0,0,0,, 这种情况下 你可以放到 awakeFromNib 中 \N{\fs12}you can put things in awakeFromNib.
Dialogue: 0,0:43:12.38,0:43:15.83,yin,,0,0,0,, 如果想要把它变得复杂一点 \N{\fs12}Now, to make this a little more complicated
Dialogue: 0,0:43:16.00,0:43:17.90,yin,,0,0,0,, 也更加正确 \N{\fs12}but also a little more correct,
Dialogue: 0,0:43:18.36,0:43:20.37,yin,,0,0,0,, 可以在代码中 \N{\fs12}it is possible that your view controller
Dialogue: 0,0:43:20.38,0:43:23.41,yin,,0,0,0,, 用 alloc/init 来创建你的视图控制器 \N{\fs12}could be created in code using alloc init.
Dialogue: 0,0:43:24.00,0:43:27.50,yin,,0,0,0,, 允许使用 alloc/init\N{\fs12}It is legal for someone to alloc init –
Dialogue: 0,0:43:27.80,0:43:30.90,yin,,0,0,0,,init 并不是视图控制器的指定初始化方法 \N{\fs12}init is not the designated initializer for view controller
Dialogue: 0,0:43:30.90,0:43:33.99,yin,,0,0,0,, 但是 init 可以调用指定初始化方法 \N{\fs12}but init calls the designated initializer –
Dialogue: 0,0:43:34.23,0:43:36.08,yin,,0,0,0,, 所以这样做是可以的 \N{\fs12}so it is legal for people to do that.
Dialogue: 0,0:43:37.27,0:43:38.83,yin,,0,0,0,, 但是这门课上我们不会这样做 \N{\fs12}Not going to happen in this class.
Dialogue: 0,0:43:38.99,0:43:43.07,yin,,0,0,0,, 我们在课上会全部使用 storyboard 来创建 \N{\fs12}Okay? We’re going to make things out of storyboards for 100% of this class,
Dialogue: 0,0:43:43.08,0:43:43.93,yin,,0,0,0,, 所以不用担心 \N{\fs12}so don’t worry about it.
Dialogue: 0,0:43:44.35,0:43:47.53,yin,,0,0,0,, 但是 UIViewController 的指定初始化方法是 \N{\fs12}But the designated initializer for UIViewController
Dialogue: 0,0:43:47.54,0:43:50.32,yin,,0,0,0,,initWithNibName: bundle:\N{\fs12}is initWithNibName colon bundle colon.
Dialogue: 0,0:43:50.81,0:43:54.41,yin,,0,0,0,, 同样出于历史原因 这里使用 nib\N{\fs12}Okay? Again, historical reasons here with old nib files.
Dialogue: 0,0:43:54.92,0:43:58.81,yin,,0,0,0,, 为了保证正确 通常情况下 \N{\fs12}And so to be correct, we usually like to call
Dialogue: 0,0:43:58.82,0:44:02.14,yin,,0,0,0,, 也会在初始化方法中调用 awakeFromNib 中调用的内容 \N{\fs12}whatever we’re going to call from awakeFromNib also in that init method.
Dialogue: 0,0:44:02.37,0:44:03.63,yin,,0,0,0,, 所以你使用这个模板 \N{\fs12}And so you use this little template
Dialogue: 0,0:44:03.63,0:44:05.60,yin,,0,0,0,, 自己创建了一个方法叫 setup 之类的 \N{\fs12}where you have some method called setup or something,
Dialogue: 0,0:44:05.83,0:44:07.23,yin,,0,0,0,,awakeFromNib 调用它 \N{\fs12}awakeFromNib calls that,
Dialogue: 0,0:44:07.39,0:44:11.18,yin,,0,0,0,, 然后 initWithNibName 中写 self=[super initWithNibName: bundle:]\N{\fs12}and then initWithNibName says self super initWithNibName bundle –
Dialogue: 0,0:44:11.18,0:44:12.83,yin,,0,0,0,, 因为它是指定初始化方法 \N{\fs12}because that’s the designated initializer –
Dialogue: 0,0:44:13.14,0:44:14.74,yin,,0,0,0,, 然后是 [self setup] return self\N{\fs12}self setup return self.
Dialogue: 0,0:44:15.05,0:44:17.96,yin,,0,0,0,, 所以如果你要把 awakeFromNib 放在那 \N{\fs12}Okay? So if you’re going to put awakeFromNib in there,
Dialogue: 0,0:44:17.97,0:44:21.43,yin,,0,0,0,, 也要把这三行 initWithNibName 代码一块放进去 \N{\fs12}go ahead and put this little three-line initWithNibName also in there,
Dialogue: 0,0:44:21.62,0:44:23.59,yin,,0,0,0,, 这样才对 \N{\fs12}just to be correct.
Dialogue: 0,0:44:24.33,0:44:26.60,yin,,0,0,0,, 也许在这门课上不用这样做 \N{\fs12}Okay? Probably not necessary in this class.
Dialogue: 0,0:44:26.60,0:44:29.25,yin,,0,0,0,, 你们在课上不需要用到 awakeFromNib\N{\fs12}I don’t think you’re going to need awakeFromNib in this class;
Dialogue: 0,0:44:29.58,0:44:31.36,yin,,0,0,0,,viewDidLoad 就足够了 \N{\fs12}viewDidLoad is what you want.
Dialogue: 0,0:44:32.81,0:44:35.82,yin,,0,0,0,, 好了 这是视图控制器生命周期的总结 \N{\fs12}Okay. So here’s a summary of the view controller lifecycle:
Dialogue: 0,0:44:36.34,0:44:38.83,yin,,0,0,0,, 从 storyboard 中进行实例化 \N{\fs12}It’s instantiated from the storyboard
Dialogue: 0,0:44:38.83,0:44:40.93,yin,,0,0,0,, 或者通过调用 alloc/init\N{\fs12}or someone could say alloc init, okay;
Dialogue: 0,0:44:41.39,0:44:44.74,yin,,0,0,0,, 如果是从 storyboard 中出来的 就会调用 awakeFromNib\N{\fs12}awakeFromNib gets called if it came out of a storyboard,
Dialogue: 0,0:44:44.75,0:44:47.62,yin,,0,0,0,, 不然就是调用 initWithNibName bundle\N{\fs12}otherwise init with nib name with bundle gets called;
Dialogue: 0,0:44:47.99,0:44:51.04,yin,,0,0,0,, 如果是从 storyboard 中出来的 设置好输出口 \N{\fs12}the outlets get set if it comes from a storyboard;
Dialogue: 0,0:44:51.62,0:44:53.01,yin,,0,0,0,, 然后 viewDidload 被调用 \N{\fs12}then viewDidLoad is called;
Dialogue: 0,0:44:54.00,0:44:56.31,yin,,0,0,0,, 然后当几何内容都确定之后 \N{\fs12}then when the geometry is determined,
Dialogue: 0,0:44:56.54,0:44:58.89,yin,,0,0,0,,viewWillLayoutSubviews 和 viewDidLayoutSubviews 被调用 \N{\fs12}viewWillLayoutSubviews and viewDidLayoutSubviews –
Dialogue: 0,0:44:58.89,0:45:00.07,yin,,0,0,0,, 这里没有冒号 \N{\fs12}there should be no colons there;
Dialogue: 0,0:45:00.08,0:45:04.06,yin,,0,0,0,, 不知道为什么打错了 \N{\fs12}I don’t know what, that’s a mistake — get called;
Dialogue: 0,0:45:04.75,0:45:06.77,yin,,0,0,0,, 然后 viewWillAppear 被调用 \N{\fs12}then viewWillAppear gets called;
Dialogue: 0,0:45:07.64,0:45:10.77,yin,,0,0,0,, 如果在可见时 几何内容有变化 \N{\fs12}then if the geometry changes again while it’s visible,
Dialogue: 0,0:45:10.77,0:45:13.40,yin,,0,0,0,,viewWillLayoutSubviews 和 viewDidLayoutSubviews\N{\fs12}viewWillLayoutSubviews and viewDidLayoutSubviews
Dialogue: 0,0:45:13.63,0:45:14.60,yin,,0,0,0,, 会被再次调用 \N{\fs12}will get called again.
Dialogue: 0,0:45:15.23,0:45:18.14,yin,,0,0,0,, 如果有自动旋转功能 \N{\fs12}Okay? If there’s autorotation,
Dialogue: 0,0:45:18.14,0:45:20.00,yin,,0,0,0,, 就还要加上自动旋转的内容 \N{\fs12}you also get those autorotation things.
Dialogue: 0,0:45:20.00,0:45:21.01,yin,,0,0,0,, 但是不用担心这部分内容 \N{\fs12}But don’t worry about those
Dialogue: 0,0:45:21.01,0:45:22.43,yin,,0,0,0,, 因为通常情况下 你想做的操作 \N{\fs12}because you’re usually doing what you want to do
Dialogue: 0,0:45:22.43,0:45:23.59,yin,,0,0,0,, 都在 viewDidLayoutSubviews 中实现 \N{\fs12}in viewDidLayoutSubviews.
Dialogue: 0,0:45:24.17,0:45:26.02,yin,,0,0,0,, 然后当你的视图控制器从屏幕上离开时 \N{\fs12}Then when your view controller goes off screen,
Dialogue: 0,0:45:26.02,0:45:27.47,yin,,0,0,0,, 会收到 viewWillDisappear 消息 \N{\fs12}it will get viewWillDisappear.
Dialogue: 0,0:45:28.17,0:45:33.15,yin,,0,0,0,, 在此过程中 如果出现内存不足的情况 \N{\fs12}Okay? If you have a low memory thing at any time going on there,
Dialogue: 0,0:45:33.16,0:45:33.79,yin,,0,0,0,, 你会得到这个通知 \N{\fs12}you’ll get that.
Dialogue: 0,0:45:33.95,0:45:35.57,yin,,0,0,0,, 不管是否在屏幕上 \N{\fs12}That could be while you’re visible or not.
Dialogue: 0,0:45:36.17,0:45:37.47,yin,,0,0,0,, 就是这样 \N{\fs12}And that’s it.
Dialogue: 0,0:45:37.92,0:45:40.19,yin,,0,0,0,, 视图控制器生命周期从头到尾的过程就是这样 \N{\fs12}That’s the view controller lifecycle from start to finish.
Dialogue: 0,0:45:41.30,0:45:44.38,yin,,0,0,0,, 好的 \N{\fs12}Okay? All right.
Dialogue: 0,0:45:44.71,0:45:45.86,yin,,0,0,0,, 我们来演示一下 \N{\fs12}So let’s see a little demo
Dialogue: 0,0:45:45.86,0:45:47.62,yin,,0,0,0,, 如何使用视图控制器生命周期 \N{\fs12}of using the view controller lifecycle.
Dialogue: 0,0:45:48.61,0:45:49.94,yin,,0,0,0,, 我要做的是 \N{\fs12}So what I’m going to do is
Dialogue: 0,0:45:49.94,0:45:51.79,yin,,0,0,0,, 记得之前讲过的添加轮廓按钮吧 \N{\fs12}that outline button we talked about before.
Dialogue: 0,0:45:52.03,0:45:54.94,yin,,0,0,0,, 我们让这个按钮上的文字也加上轮廓 \N{\fs12}Let’s make it so the outline button is itself outlined.
Dialogue: 0,0:45:54.94,0:45:56.29,yin,,0,0,0,, 这样是一个很好的 UI\N{\fs12}That would be kind of a good UI.
Dialogue: 0,0:45:56.59,0:45:58.90,yin,,0,0,0,, 可以更好地表现出这个按钮是做什么的 \N{\fs12}Okay? So it’s kind of a little more indication of what it does.
Dialogue: 0,0:45:59.17,0:46:02.98,yin,,0,0,0,, 问题是 如果我得到这里的这个添加轮廓按钮 \N{\fs12}Well, the question is: If I have this outline button right here,
Dialogue: 0,0:46:06.12,0:46:08.76,yin,,0,0,0,, 我应该何时以怎样的方法为它添加轮廓呢 \N{\fs12}how and when am I going to outline it?
Dialogue: 0,0:46:08.77,0:46:10.84,yin,,0,0,0,, 很遗憾 我不能在 Xcode 里实现 \N{\fs12}I can’t do it in Xcode unfortunately.
Dialogue: 0,0:46:11.12,0:46:12.46,yin,,0,0,0,, 所以我需要用代码来实现 \N{\fs12}So I need to do it in code.
Dialogue: 0,0:46:12.82,0:46:15.54,yin,,0,0,0,, 我想让它一出来就加上轮廓 \N{\fs12}But I want it to be outlined when the thing first comes up,
Dialogue: 0,0:46:15.89,0:46:18.26,yin,,0,0,0,, 而且始终保持这种状态 \N{\fs12}but — and I want it to always be outlined.
Dialogue: 0,0:46:18.47,0:46:20.51,yin,,0,0,0,, 这属于一次性初始化操作 \N{\fs12}So that’s a one-time initialization thing,
Dialogue: 0,0:46:20.73,0:46:23.25,yin,,0,0,0,, 但是这显然要在输出口设置好之后才能发生 \N{\fs12}but it obviously has to happen after my outlets are set
Dialogue: 0,0:46:23.32,0:46:25.53,yin,,0,0,0,, 因为我需要向这个按钮发送消息 \N{\fs12}because I need to be able to talk to this button.
Dialogue: 0,0:46:25.53,0:46:27.29,yin,,0,0,0,, 那么我们先来创建一个对应的输出口 \N{\fs12}So let’s make an outlet for this.
Dialogue: 0,0:46:27.30,0:46:29.46,yin,,0,0,0,, 按住 control 键拖拽到这里 \N{\fs12}I’m just going to control drag here.
Dialogue: 0,0:46:29.66,0:46:33.10,yin,,0,0,0,, 我要叫它 outlineButton\N{\fs12}I’m going to call this the “outlineButton,” okay?
Dialogue: 0,0:46:33.58,0:46:35.96,yin,,0,0,0,, 我要用到 viewDidLoad\N{\fs12}And I’m going to take viewDidLoad.
Dialogue: 0,0:46:35.96,0:46:38.84,yin,,0,0,0,, 我要把它移到上面这里 \N{\fs12}I’m actually going to move it up to the top here.
Dialogue: 0,0:46:39.90,0:46:41.08,yin,,0,0,0,, 好了 这是 viewDidLoad\N{\fs12}Okay. So there’s viewDidLoad.
Dialogue: 0,0:46:41.50,0:46:43.87,yin,,0,0,0,, 我要完全按照注释说的做 \N{\fs12}And I’m going to do exactly what it says here,
Dialogue: 0,0:46:44.11,0:46:46.94,yin,,0,0,0,, 在加载视图后 进行追加设置 \N{\fs12}do any additional setup after loading the view.
Dialogue: 0,0:46:46.97,0:46:49.20,yin,,0,0,0,, 这里应该写 storyboard\N{\fs12}This should say typically from a storyboard.
Dialogue: 0,0:46:49.61,0:46:51.20,yin,,0,0,0,, 到现在还没有改过来 很好笑 \N{\fs12}It’s funny that that has not changed.
Dialogue: 0,0:46:51.27,0:46:53.42,yin,,0,0,0,,storyboard 出现在各个 iOS 版本中 \N{\fs12}I mean, storyboards have been around for — I don’t know –
Dialogue: 0,0:46:53.43,0:46:55.37,yin,,0,0,0,,iOS4 5 6 7 都有 \N{\fs12}iOS four, five, six, seven, something like that.
Dialogue: 0,0:46:55.39,0:46:56.54,yin,,0,0,0,, 到现在还在用 nib\N{\fs12}They’re still saying from nib.
Dialogue: 0,0:46:56.55,0:47:00.41,yin,,0,0,0,, 但不管怎样 viewDidLoad 就是用来做这个的 \N{\fs12}But anyway, viewDidLoad is the place to do this.
Dialogue: 0,0:47:00.65,0:47:04.86,yin,,0,0,0,, 我们只要设置这个按钮的属性化标题 \N{\fs12}And all we need to do is set the attributed title of this button
Dialogue: 0,0:47:05.19,0:47:06.89,yin,,0,0,0,, 添加轮廓属性 \N{\fs12}to have the attributes of outline.
Dialogue: 0,0:47:06.89,0:47:08.02,yin,,0,0,0,, 我们要怎么做呢 \N{\fs12}So how are we going to do that?
Dialogue: 0,0:47:08.03,0:47:10.31,yin,,0,0,0,, 这里需要大家特别注意 \N{\fs12}Okay? And this is important for you to pay attention here.
Dialogue: 0,0:47:10.31,0:47:11.58,yin,,0,0,0,, 大家都醒着呢 不错 \N{\fs12}You all look awake, that’s good
Dialogue: 0,0:47:11.90,0:47:16.30,yin,,0,0,0,, 周三将要布置的那个作业 \N{\fs12}because your homework that’s going to be assigned on Wednesday
Dialogue: 0,0:47:16.74,0:47:19.02,yin,,0,0,0,, 要用到这部分内容 \N{\fs12}is going to require this.
Dialogue: 0,0:47:19.02,0:47:22.15,yin,,0,0,0,, 你需要设置一个按钮的属性化标题 \N{\fs12}You’re going to have to set an attributed title of a button.
Dialogue: 0,0:47:22.89,0:47:25.80,yin,,0,0,0,, 因为很不巧 作业中的卡牌都是按钮 \N{\fs12}Okay? Because your cards are buttons unfortunately.
Dialogue: 0,0:47:25.90,0:47:27.30,yin,,0,0,0,, 下周之后 它们就不再是按钮了 \N{\fs12}They won’t be buttons the week after that.
Dialogue: 0,0:47:27.61,0:47:28.81,yin,,0,0,0,, 但它们现在是按钮 \N{\fs12}But they’re buttons right now.
Dialogue: 0,0:47:28.81,0:47:31.04,yin,,0,0,0,, 所以你需要用属性化字符串 \N{\fs12}And so you’re going to need attributed strings
Dialogue: 0,0:47:31.04,0:47:33.05,yin,,0,0,0,, 显示我们下周要做的内容 \N{\fs12}to display what we want to do next week.
Dialogue: 0,0:47:33.06,0:47:34.79,yin,,0,0,0,, 所以你们需要设置按钮的属性化标题 \N{\fs12}And so you’re going to have to set attributed titles to button.
Dialogue: 0,0:47:34.79,0:47:37.04,yin,,0,0,0,, 我们来讲一下怎么做 \N{\fs12}So let’s talk about how we do that.
Dialogue: 0,0:47:37.50,0:47:39.59,yin,,0,0,0,, 首先我要写 \N{\fs12}First thing I’m going to do is
Dialogue: 0,0:47:39.85,0:47:47.38,yin,,0,0,0,,NSMutableAttributedString *title =\N{\fs12}I’m going to say NSMutableAttributedString *title equals.
Dialogue: 0,0:47:47.38,0:47:51.70,yin,,0,0,0,, 我想得到这个按钮标题的可变属性化字符串形式 \N{\fs12}So I want to get the title of this button as a mutable attributed string
Dialogue: 0,0:47:51.71,0:47:54.96,yin,,0,0,0,, 这样我就能将属性设为轮廓属性 \N{\fs12}so that I can set the attributes to be the outline attributes
Dialogue: 0,0:47:54.97,0:47:56.03,yin,,0,0,0,, 也就是描边宽度等等 \N{\fs12}that stroke width thing.
Dialogue: 0,0:47:56.56,0:47:59.69,yin,,0,0,0,, 所以这里我要写 \N{\fs12}So the way to do that is I’m going to say
Dialogue: 0,0:48:00.48,0:48:03.93,yin,,0,0,0,,[NSMutableAttributedString alloc]\N{\fs12}[NSMutableAttributedString alloc]
Dialogue: 0,0:48:04.58,0:48:12.58,yin,,0,0,0,,initWithString: self.outlineButton.currentTitle\N{\fs12}initWithString: self dot outline button dot current title.
Dialogue: 0,0:48:12.67,0:48:14.33,yin,,0,0,0,, 不管目前标题是什么 \N{\fs12}So whatever’s on there currently,
Dialogue: 0,0:48:14.34,0:48:15.88,yin,,0,0,0,, 现在是 Outline 这个词 \N{\fs12}which is the word “Outline” right now,
Dialogue: 0,0:48:15.89,0:48:16.83,yin,,0,0,0,, 都要使用它 \N{\fs12}going to use that.
Dialogue: 0,0:48:17.70,0:48:21.79,yin,,0,0,0,, 就是这样 \N{\fs12}And then that’s it.
Dialogue: 0,0:48:21.80,0:48:22.66,yin,,0,0,0,, 这里我要示范的操作就是这些了 \N{\fs12}That’s all I’m going to do there,
Dialogue: 0,0:48:22.77,0:48:24.84,yin,,0,0,0,, 为了告诉大家如何实现 \N{\fs12}just show you how to do this, this way.
Dialogue: 0,0:48:24.84,0:48:26.73,yin,,0,0,0,, 其实还可以在这里设置属性 但是…\N{\fs12}I could set the attributes there, actually, but –
Dialogue: 0,0:48:26.86,0:48:29.00,yin,,0,0,0,, 糟糕 我做对了吗 \N{\fs12}oops, did I get that right?
Dialogue: 0,0:48:30.13,0:48:35.95,yin,,0,0,0,, 现在我得到了标题的可变属性化字符串 \N{\fs12}Okay. So now I have the title as a mutable attributed string.
Dialogue: 0,0:48:35.95,0:48:39.22,yin,,0,0,0,, 我就可以设置这个标题的属性了 \N{\fs12}So now I can set the attributes in this title.
Dialogue: 0,0:48:39.44,0:48:42.33,yin,,0,0,0,, 这个标题现在是一个 NSMutableAttributedString\N{\fs12}Okay? Now this title is an NSMutableAttributedString
Dialogue: 0,0:48:42.33,0:48:43.18,yin,,0,0,0,, 是我刚刚创建的 \N{\fs12}that I just created.
Dialogue: 0,0:48:43.18,0:48:44.32,yin,,0,0,0,, 它是一个局部变量 \N{\fs12}It’s a local variable.
Dialogue: 0,0:48:44.71,0:48:46.93,yin,,0,0,0,, 它是通过按钮的标题创建的 \N{\fs12}It’s created with the button’s title,
Dialogue: 0,0:48:47.17,0:48:48.36,yin,,0,0,0,, 但它是一个局部变量 \N{\fs12}but it’s a local variable.
Dialogue: 0,0:48:49.03,0:48:51.13,yin,,0,0,0,, 我们继续 设置我们想要的属性 \N{\fs12}So let’s go ahead and set the attributes we want.
Dialogue: 0,0:48:51.65,0:48:54.38,yin,,0,0,0,, 和下面的代码很类似 \N{\fs12}Okay? Again, it’s very similar to this down here.
Dialogue: 0,0:48:54.39,0:48:56.86,yin,,0,0,0,, 那我就直接复制粘贴这段代码 \N{\fs12}In fact, I’m going to just copy and paste this
Dialogue: 0,0:48:56.87,0:48:58.76,yin,,0,0,0,, 稍微改一下 \N{\fs12}and make one small change.
Dialogue: 0,0:49:00.06,0:49:03.55,yin,,0,0,0,, 这里不用 -3 了 \N{\fs12}Okay. So here, instead of the minus three, okay,
Dialogue: 0,0:49:03.76,0:49:04.82,yin,,0,0,0,, 我把它改成 3\N{\fs12}I’m going to make it three.
Dialogue: 0,0:49:04.82,0:49:08.10,yin,,0,0,0,, 这样就只加轮廓 \N{\fs12}And that’s going to make this outline thing be outlined
Dialogue: 0,0:49:08.24,0:49:09.77,yin,,0,0,0,, 不填充蓝色 \N{\fs12}with no blue in the middle.
Dialogue: 0,0:49:10.30,0:49:13.23,yin,,0,0,0,, 这个按钮的前景色是蓝色 \N{\fs12}Okay? So the foreground color of this button is blue
Dialogue: 0,0:49:13.24,0:49:14.51,yin,,0,0,0,, 或者是默认的黑色 \N{\fs12}or whatever the default is, black.
Dialogue: 0,0:49:14.89,0:49:16.33,yin,,0,0,0,, 但是我这样设置之后 \N{\fs12}But I’m going to make it
Dialogue: 0,0:49:16.34,0:49:18.00,yin,,0,0,0,, 就成为了空心轮廓的样式 \N{\fs12}so it’s outlined with nothing in the middle.
Dialogue: 0,0:49:18.40,0:49:19.06,yin,,0,0,0,, 另外一件事是 \N{\fs12}The other thing is
Dialogue: 0,0:49:19.06,0:49:22.51,yin,,0,0,0,, 我不想让这个按钮是黑色的 \N{\fs12}I don’t really want this button to be black, okay?
Dialogue: 0,0:49:22.73,0:49:24.09,yin,,0,0,0,, 因为按钮都不是黑色的 \N{\fs12}Because buttons are not black.
Dialogue: 0,0:49:24.51,0:49:26.11,yin,,0,0,0,, 按钮是什么颜色的 \N{\fs12}Now, what color are buttons?
Dialogue: 0,0:49:26.47,0:49:29.96,yin,,0,0,0,, 这就引出了另一个有趣的问题 \N{\fs12}Okay? And this brings up another interesting thing
Dialogue: 0,0:49:29.97,0:49:31.26,yin,,0,0,0,, 我们一直还没机会讲 \N{\fs12}we really haven’t had a chance to talk about,
Dialogue: 0,0:49:31.27,0:49:32.37,yin,,0,0,0,, 也就是颜色和色调 \N{\fs12}which is the tint color.
Dialogue: 0,0:49:32.97,0:49:35.07,yin,,0,0,0,, 有些同学已经发现了这个问题 \N{\fs12}Okay? And some of you have discovered this on your own
Dialogue: 0,0:49:35.07,0:49:36.88,yin,,0,0,0,, 因为你们不喜欢 Matchismo 中 \N{\fs12}because you didn’t like the blue tint
Dialogue: 0,0:49:36.88,0:49:38.57,yin,,0,0,0,, 绿色背景配蓝色元素 \N{\fs12}on the green background in Matchismo.
Dialogue: 0,0:49:38.57,0:49:40.89,yin,,0,0,0,, 我对大家对 UI 的直觉 \N{\fs12}And I applaud you and your UI instincts
Dialogue: 0,0:49:40.90,0:49:43.02,yin,,0,0,0,, 和寻找改变方法表示赞赏 \N{\fs12}to go searching for a way to change that.
Dialogue: 0,0:49:43.34,0:49:45.01,yin,,0,0,0,, 正确的更改方法是 \N{\fs12}And the right way to change it is
Dialogue: 0,0:49:45.19,0:49:47.21,yin,,0,0,0,, 有一个全局色调颜色设置 \N{\fs12}there’s actually a global tint color,
Dialogue: 0,0:49:47.32,0:49:49.47,yin,,0,0,0,, 你的整个应用的色调颜色 \N{\fs12}a tint color for your entire application.
Dialogue: 0,0:49:49.69,0:49:51.85,yin,,0,0,0,, 设置方法是打开 storyboard\N{\fs12}And you set that by going to your storyboard.
Dialogue: 0,0:49:51.85,0:49:54.13,yin,,0,0,0,, 看到这里我的 storyboard 是选中的了吗 \N{\fs12}See how my storyboard is selected over here?
Dialogue: 0,0:49:54.46,0:49:58.91,yin,,0,0,0,, 如果我转到这里 \N{\fs12}And if I go to the little area here
Dialogue: 0,0:49:59.18,0:50:00.80,yin,,0,0,0,, 这是全部属性检查器 \N{\fs12}that has all my attributes inspector,
Dialogue: 0,0:50:00.82,0:50:02.94,yin,,0,0,0,, 如果我点击最左边这项 \N{\fs12}if I click the left to most one,
Dialogue: 0,0:50:03.13,0:50:04.91,yin,,0,0,0,, 也就是文件检查器 \N{\fs12}which is the file inspector –
Dialogue: 0,0:50:04.91,0:50:06.43,yin,,0,0,0,, 它会检查这个 storyboard 文件 \N{\fs12}it’s inspecting this storyboard file –
Dialogue: 0,0:50:06.77,0:50:08.71,yin,,0,0,0,, 可以看到 这里有一个全局色调 \N{\fs12}you’ll see there’s global tint.
Dialogue: 0,0:50:09.55,0:50:09.85,yin,,0,0,0,, 看到了吗 \N{\fs12}Okay?
Dialogue: 0,0:50:10.18,0:50:13.10,yin,,0,0,0,, 全局色调控制你的应用中 \N{\fs12}So global tint affects all clickable things
Dialogue: 0,0:50:13.10,0:50:14.12,yin,,0,0,0,, 全部可点击元素的颜色 \N{\fs12}in your app everywhere.
Dialogue: 0,0:50:15.06,0:50:17.88,yin,,0,0,0,, 所以你可以选择蓝色以外的颜色 \N{\fs12}Okay? So you could pick a different color than blue.
Dialogue: 0,0:50:18.29,0:50:19.14,yin,,0,0,0,, 我们就这样了 \N{\fs12}And we do that.
Dialogue: 0,0:50:19.44,0:50:22.64,yin,,0,0,0,, 另外 像 UIButton 这样的单个元素 \N{\fs12}The other thing is individual elements like UIButtons,
Dialogue: 0,0:50:22.83,0:50:24.26,yin,,0,0,0,, 也有自己的色调颜色 \N{\fs12}they also have a tint color.
Dialogue: 0,0:50:24.93,0:50:27.07,yin,,0,0,0,, 通常情况下 不会单独设置它们 \N{\fs12}Now, usually you don’t want to set them separately,
Dialogue: 0,0:50:27.16,0:50:31.33,yin,,0,0,0,, 尽管很多人发现在模拟器中似乎有一个错误 \N{\fs12}although a couple people noticed what seems to be a bug in the simulator
Dialogue: 0,0:50:31.48,0:50:33.62,yin,,0,0,0,, 如果你设置了全局色调 \N{\fs12}where if you set the global tint,
Dialogue: 0,0:50:33.71,0:50:38.23,yin,,0,0,0,, 在模拟器中会绘制出错误的分段控件 \N{\fs12}it draws improperly segmented control in the simulator.
Dialogue: 0,0:50:38.23,0:50:40.05,yin,,0,0,0,, 我不知道在设备上是否会这样 \N{\fs12}I haven’t heard back whether it does it on a device.
Dialogue: 0,0:50:40.06,0:50:44.16,yin,,0,0,0,, 替代方法就是单独设置色调颜色 \N{\fs12}But so the workaround was to set the individual tint color.
Dialogue: 0,0:50:45.06,0:50:46.94,yin,,0,0,0,, 你可以设置各元素的色调颜色 \N{\fs12}So you can set tint color individual items
Dialogue: 0,0:50:46.94,0:50:49.04,yin,,0,0,0,, 或者设置整个 storyboard 的色调颜色 \N{\fs12}or you can set it at the storyboard level.
Dialogue: 0,0:50:49.65,0:50:51.63,yin,,0,0,0,, 这里我不会设置它 \N{\fs12}Here what I’m going to do, I’m not going to set it
Dialogue: 0,0:50:51.73,0:50:52.96,yin,,0,0,0,, 但我要得到它 \N{\fs12}but I am going to get it.
Dialogue: 0,0:50:53.06,0:50:54.42,yin,,0,0,0,, 我要得到这个色调颜色 \N{\fs12}I’m going to get the tint color
Dialogue: 0,0:50:54.64,0:50:56.52,yin,,0,0,0,, 因为不管这个色调颜色是什么 \N{\fs12}because whatever this tint color is,
Dialogue: 0,0:50:56.65,0:50:59.53,yin,,0,0,0,, 我都要用它进行描边 \N{\fs12}I want that to be the color that I’m stroking it with,
Dialogue: 0,0:50:59.54,0:51:00.34,yin,,0,0,0,, 也就是轮廓颜色 \N{\fs12}the outline color.
Dialogue: 0,0:51:00.34,0:51:03.60,yin,,0,0,0,, 也就是 self.outlineButton.tintColor\N{\fs12}So that is going to be self dot outlineButton dot tintColor –
Dialogue: 0,0:51:04.48,0:51:05.39,yin,,0,0,0,,tintColor\N{\fs12}tintColor.
Dialogue: 0,0:51:06.28,0:51:10.00,yin,,0,0,0,, 明白我在做什么吗 \N{\fs12}Okay? Understand what I’m doing there?
Dialogue: 0,0:51:10.01,0:51:12.81,yin,,0,0,0,, 所以我想让它保持蓝色或其他默认颜色 \N{\fs12}So I want it stay blue or whatever this color is,
Dialogue: 0,0:51:13.55,0:51:15.81,yin,,0,0,0,, 但我只想要描边 \N{\fs12}but I want it to be outlined only.
Dialogue: 0,0:51:16.54,0:51:20.14,yin,,0,0,0,, 范围呢 我需要整个文本范围 \N{\fs12}And then the range, I need the entire range of text.
Dialogue: 0,0:51:20.14,0:51:23.16,yin,,0,0,0,, 也就是说 这里的整个可变字符串标题 \N{\fs12}In other words, I have this mutable string title here;
Dialogue: 0,0:51:23.36,0:51:24.94,yin,,0,0,0,, 我希望全部添加轮廓 \N{\fs12}I want the entire thing done.
Dialogue: 0,0:51:24.94,0:51:27.30,yin,,0,0,0,, 所以我要用到 NSMakeRange\N{\fs12}So I’m going to use NSMakeRange,
Dialogue: 0,0:51:27.42,0:51:29.63,yin,,0,0,0,, 这是一个 C 结构体 \N{\fs12}and you’re going to find that for C structs
Dialogue: 0,0:51:29.92,0:51:34.20,yin,,0,0,0,,iOS 中通常会用 NSMakeXX\N{\fs12}in iOS there’s usually an NSMake whatever you want
Dialogue: 0,0:51:34.46,0:51:35.63,yin,,0,0,0,, 创建 C 结构体 \N{\fs12}that will make the C struct
Dialogue: 0,0:51:35.92,0:51:38.30,yin,,0,0,0,, 让你来指定结构体的成员 \N{\fs12}by letting you specify the members of the struct.
Dialogue: 0,0:51:38.30,0:51:41.72,yin,,0,0,0,, 所以在这个例子中 范围包含一个位置 \N{\fs12}So in this case a range has a location –
Dialogue: 0,0:51:41.72,0:51:42.47,yin,,0,0,0,, 一个起始位置 \N{\fs12}a starting location –
Dialogue: 0,0:51:42.47,0:51:45.28,yin,,0,0,0,, 也就是 0 还有一个长度 \N{\fs12}which will be zero and it has a length.
Dialogue: 0,0:51:45.71,0:51:47.53,yin,,0,0,0,, 长度是这个标题的长度 \N{\fs12}Okay? Which is going to be title length.
Dialogue: 0,0:51:49.45,0:51:51.22,yin,,0,0,0,, 这样就得到了范围 \N{\fs12}Okay? So that makes a little range.
Dialogue: 0,0:51:51.22,0:51:54.07,yin,,0,0,0,, 会将整个范围都设有这些属性 \N{\fs12}That’s going to set the entire range to have these attributes.
Dialogue: 0,0:51:54.95,0:51:59.22,yin,,0,0,0,, 现在我得到了标题的可变字符串形式 \N{\fs12}Okay? Now I have the title I want as a mutable string,
Dialogue: 0,0:51:59.39,0:52:01.29,yin,,0,0,0,, 但我需要再将其设置为按钮标题 \N{\fs12}but I need to set this back on the button.
Dialogue: 0,0:52:01.85,0:52:02.93,yin,,0,0,0,, 因为这里 只有在它是局部变量的情况下 \N{\fs12}Okay? Because I’ve only can done this
Dialogue: 0,0:52:02.93,0:52:04.27,yin,,0,0,0,, 我才能这样做 \N{\fs12}as a local variable right here.
Dialogue: 0,0:52:04.77,0:52:08.45,yin,,0,0,0,, 因为按钮中没有像文本视图中那样的可变属性化字符串 \N{\fs12}Because there’s no mutable attributed string in button
Dialogue: 0,0:52:08.45,0:52:10.46,yin,,0,0,0,, 可以让你随意修改 \N{\fs12}like there is in text view that you can just modify;
Dialogue: 0,0:52:10.46,0:52:14.06,yin,,0,0,0,, 你必须得到它 做一个可变版本 \N{\fs12}you have to get it, make a mutable version, you know,
Dialogue: 0,0:52:14.06,0:52:15.65,yin,,0,0,0,, 编辑后再设置回去 \N{\fs12}edit it, and then set it back.
Dialogue: 0,0:52:15.65,0:52:18.63,yin,,0,0,0,, 我们这样实现 self.outlineButton\N{\fs12}And the way we do that is self dot outlineButton
Dialogue: 0,0:52:18.83,0:52:25.15,yin,,0,0,0,,setAttributedTitle: title forState: UIControlStateNormal\N{\fs12}setAttributedTitle: title forState: UIControlStateNormal.
Dialogue: 0,0:52:26.65,0:52:29.65,yin,,0,0,0,, 就像是在设置标题 但是设置的是属性化标题 \N{\fs12}Okay? So it’s just like set title but set attributed title.
Dialogue: 0,0:52:30.81,0:52:33.39,yin,,0,0,0,, 我们看看是否管用 \N{\fs12}Okay? So let’s see if that works.
Dialogue: 0,0:52:42.42,0:52:43.13,yin,,0,0,0,, 好的 成功了 \N{\fs12}Okay. And it did.
Dialogue: 0,0:52:43.36,0:52:46.11,yin,,0,0,0,, 可以看到 Outline 现在是有轮廓的 \N{\fs12}So you can see the outline right there is outlined.
Dialogue: 0,0:52:46.59,0:52:48.86,yin,,0,0,0,, 轮廓效果不是很明显 \N{\fs12}It’s not awesomely outlined,
Dialogue: 0,0:52:48.87,0:52:51.03,yin,,0,0,0,, 很难看出来 \N{\fs12}or it’s kind of hard to see that it’s outlined.
Dialogue: 0,0:52:51.40,0:52:55.29,yin,,0,0,0,, 我也许可以回到这里再设置一下 比如说 \N{\fs12}I might want to go back to here and set this, for example –
Dialogue: 0,0:52:55.29,0:52:58.71,yin,,0,0,0,, 这个添加轮廓按钮 不再是系统字体了 \N{\fs12}this outline button — instead of being just the system font,
Dialogue: 0,0:52:58.96,0:53:01.88,yin,,0,0,0,, 也许我想让它变成加粗的系统字体 \N{\fs12}maybe I want this to be bold system font, which — oops –
Dialogue: 0,0:53:01.98,0:53:03.93,yin,,0,0,0,, 这样看起来轮廓效果更好 \N{\fs12}which will make it outline a little better.
Dialogue: 0,0:53:03.93,0:53:06.71,yin,,0,0,0,, 所以我们转到这里 检查它 \N{\fs12}So let’s go to here, inspect it,
Dialogue: 0,0:53:07.19,0:53:09.54,yin,,0,0,0,, 字体这一栏不再选择系统字体了 \N{\fs12}and in the font here instead of using the system font,
Dialogue: 0,0:53:09.80,0:53:12.64,yin,,0,0,0,, 我要选择加粗系统字体 \N{\fs12}I’m going to use the bold system font.
Dialogue: 0,0:53:13.89,0:53:15.07,yin,,0,0,0,, 现在再运行 \N{\fs12}And now when I ran,
Dialogue: 0,0:53:18.75,0:53:20.82,yin,,0,0,0,, 它会看起来更粗一点 \N{\fs12}it will look a little bolder.
Dialogue: 0,0:53:20.83,0:53:21.69,yin,,0,0,0,, 这样好点了 \N{\fs12}So it’s a little better,
Dialogue: 0,0:53:21.69,0:53:23.29,yin,,0,0,0,, 更容易看清轮廓 \N{\fs12}a little easier to see the outline.
Dialogue: 0,0:53:23.69,0:53:24.86,yin,,0,0,0,, 它依旧是一个按钮 \N{\fs12}Okay? And it’s still a button.
Dialogue: 0,0:53:25.09,0:53:27.19,yin,,0,0,0,, 如果我点击它 它还是会为文本添加轮廓 \N{\fs12}If I click it, it still outlines the text.
Dialogue: 0,0:53:28.05,0:53:30.42,yin,,0,0,0,, 好的 \N{\fs12}Okay? All right.
Dialogue: 0,0:53:30.42,0:53:31.94,yin,,0,0,0,, 这里我想展示的内容就是这些 \N{\fs12}That’s all I wanted to show you there.
Dialogue: 0,0:53:32.23,0:53:35.76,yin,,0,0,0,, 我要再演示一个视图控制器生命周期的内容 \N{\fs12}I’m going to show you another view controller lifecycle thing.
Dialogue: 0,0:53:36.13,0:53:38.21,yin,,0,0,0,, 但我们先来再讲几张幻灯片 \N{\fs12}But first, let’s do a couple of slides.
Dialogue: 0,0:53:38.21,0:53:40.00,yin,,0,0,0,, 我想给大家介绍另外一个东西 \N{\fs12}I want to show you one other thing,
Dialogue: 0,0:53:40.00,0:53:41.35,yin,,0,0,0,, 我说过我会讲到的 \N{\fs12}which I promised I would show,
Dialogue: 0,0:53:41.58,0:53:44.67,yin,,0,0,0,, 也就是广播站机制 \N{\fs12}which is this radio station thing.
Dialogue: 0,0:53:45.07,0:53:48.41,yin,,0,0,0,, 对象间的通信 \N{\fs12}So the way of communicating between objects
Dialogue: 0,0:53:48.55,0:53:50.38,yin,,0,0,0,, 以一种盲目结构进行 \N{\fs12}in a blind structured way,
Dialogue: 0,0:53:50.62,0:53:54.44,yin,,0,0,0,, 也就是 MVC 的广播站机制 \N{\fs12}which we refer to as this radio station thing from MVC
Dialogue: 0,0:53:54.62,0:53:57.22,yin,,0,0,0,, 在 iOS7 中叫做通知 \N{\fs12}is called “Notifications” in iOS 7.
Dialogue: 0,0:53:57.74,0:54:00.49,yin,,0,0,0,, 今天我们只会介绍 \N{\fs12}And we’re only going to talk today
Dialogue: 0,0:54:00.50,0:54:02.50,yin,,0,0,0,, 如何收听广播 \N{\fs12}about how to tune into the radio station;
Dialogue: 0,0:54:02.52,0:54:05.21,yin,,0,0,0,, 不会介绍如何进行广播 \N{\fs12}we’re not going to talk about how to broadcast on the radio station.
Dialogue: 0,0:54:05.59,0:54:06.90,yin,,0,0,0,, 而且今天 \N{\fs12}And in specific today,
Dialogue: 0,0:54:06.92,0:54:09.44,yin,,0,0,0,, 我们只会介绍收听系统广播 \N{\fs12}we’re only going to tune into a system radio station,
Dialogue: 0,0:54:09.48,0:54:10.97,yin,,0,0,0,, 一种 iOS7 的广播 \N{\fs12}an iOS 7 radio station.
Dialogue: 0,0:54:11.90,0:54:14.04,yin,,0,0,0,, 在后面的课程中 当我们讲到 \N{\fs12}Later in the course when we start talking about
Dialogue: 0,0:54:14.21,0:54:16.94,yin,,0,0,0,, 使用数据库构建更复杂模型的时候 \N{\fs12}building more sophisticated models using databases,
Dialogue: 0,0:54:17.09,0:54:19.10,yin,,0,0,0,, 我们才会介绍如何使用广播站机制 \N{\fs12}then we’ll really start using the radio stations
Dialogue: 0,0:54:19.10,0:54:20.68,yin,,0,0,0,, 来监听模型的变化 \N{\fs12}to hear about changes in the model. Okay?
Dialogue: 0,0:54:21.25,0:54:23.47,yin,,0,0,0,, 但是今天我们只要监听系统的变化 \N{\fs12}But today we’re just going to hear about change in the system
Dialogue: 0,0:54:23.48,0:54:24.64,yin,,0,0,0,, 因为我只是希望大家能有一个印象 \N{\fs12}because I just want you to get an idea
Dialogue: 0,0:54:24.65,0:54:26.72,yin,,0,0,0,, 知道接收端的广播站机制是怎样的 \N{\fs12}of what that radio station looks like on the receiving end.
Dialogue: 0,0:54:26.89,0:54:28.15,yin,,0,0,0,, 真的非常简单 \N{\fs12}And it’s really, really easy.
Dialogue: 0,0:54:28.43,0:54:30.83,yin,,0,0,0,, 有一个类叫做 NSNotificationCenter\N{\fs12}There is a class called NSNotificationCenter.
Dialogue: 0,0:54:31.16,0:54:33.46,yin,,0,0,0,, 这个类有一个方法叫做 defaultCenter\N{\fs12}It has a class method called defaultCenter.
Dialogue: 0,0:54:33.67,0:54:37.01,yin,,0,0,0,, 返回一个类似于 NSUserDefault 的共享实例 \N{\fs12}That returns a shared instance kind of like NSUserDefault,
Dialogue: 0,0:54:37.01,0:54:39.57,yin,,0,0,0,, 类似于标准的 UserDefault\N{\fs12}standard UserDefault did — a shared instance
Dialogue: 0,0:54:39.88,0:54:42.93,yin,,0,0,0,, 你就用这个对象来收听广播 \N{\fs12}That’s the object you use to tune into radio stations.
Dialogue: 0,0:54:43.36,0:54:45.93,yin,,0,0,0,, 方法是向它发送这个消息 \N{\fs12}And you do it by sending it this message:
Dialogue: 0,0:54:45.93,0:54:47.97,yin,,0,0,0,,addObserver selector name object\N{\fs12}addObserver selector name object.
Dialogue: 0,0:54:48.96,0:54:51.64,yin,,0,0,0,, 第一个参数 observer 代表 \N{\fs12}The first argument observer, that is,
Dialogue: 0,0:54:51.74,0:54:53.93,yin,,0,0,0,, 想要收听广播的对象 \N{\fs12}the object that wants to listen to the radio station.
Dialogue: 0,0:54:54.32,0:54:56.12,yin,,0,0,0,, 所以在你的控制器中 \N{\fs12}So in your controller –
Dialogue: 0,0:54:56.13,0:54:58.51,yin,,0,0,0,, 因为控制器是最常见的广播收听者 \N{\fs12}because controllers are the most common radio station listeners –
Dialogue: 0,0:54:58.56,0:54:59.78,yin,,0,0,0,, 这个参数可能就是 self\N{\fs12}this would probably just be self.
Dialogue: 0,0:55:00.18,0:55:01.39,yin,,0,0,0,,addObserver: self\N{\fs12}addObserver: self
Dialogue: 0,0:55:01.78,0:55:03.21,yin,,0,0,0,, 这是你的控制器代码中的内容 \N{\fs12}This is somewhere in your controller code.
Dialogue: 0,0:55:03.71,0:55:08.83,yin,,0,0,0,,selector 是 observer 中的方法 \N{\fs12}Selector is the method inside of the observer
Dialogue: 0,0:55:08.99,0:55:12.96,yin,,0,0,0,, 当广播上出现内容时会调用它 \N{\fs12}that you want to be called when something appears on the radio station.
Dialogue: 0,0:55:13.38,0:55:14.52,yin,,0,0,0,, 当进行广播时 \N{\fs12}Some broadcast happens.
Dialogue: 0,0:55:15.13,0:55:18.09,yin,,0,0,0,,name 是广播站的名称 \N{\fs12}Okay? Name is the name of the radio station.
Dialogue: 0,0:55:18.89,0:55:20.69,yin,,0,0,0,, 你想要收听哪个广播站 \N{\fs12}Okay? Which radio station you want to listen to.
Dialogue: 0,0:55:21.07,0:55:23.33,yin,,0,0,0,, 而这里的 sender object: sender\N{\fs12}And sender there — object sender –
Dialogue: 0,0:55:23.52,0:55:26.42,yin,,0,0,0,, 代表你是否只想收听某个特定对象 \N{\fs12}that’s if you only want to listen to radio station broadcasts
Dialogue: 0,0:55:26.43,0:55:28.45,yin,,0,0,0,, 发出的广播 \N{\fs12}that come from a certain other object.
Dialogue: 0,0:55:28.98,0:55:30.22,yin,,0,0,0,, 通常这里都会写 nil\N{\fs12}Often you pass nil here,
Dialogue: 0,0:55:30.24,0:55:33.68,yin,,0,0,0,, 表示频率上任何广播 \N{\fs12}which means if anyone broadcasts on that frequency,
Dialogue: 0,0:55:33.70,0:55:34.40,yin,,0,0,0,, 我都想收听 \N{\fs12}I want to hear it.
Dialogue: 0,0:55:35.08,0:55:37.41,yin,,0,0,0,, 但可能会在某种特定情况下 \N{\fs12}Okay? But it is possible in certain cases to say,
Dialogue: 0,0:55:37.41,0:55:38.88,yin,,0,0,0,, 我只对某个对象 \N{\fs12}”I’m only interested in changes
Dialogue: 0,0:55:38.89,0:55:40.93,yin,,0,0,0,, 发出的广播内容变化感兴趣 \N{\fs12}in the radio station generated by this object.”
Dialogue: 0,0:55:40.93,0:55:43.46,yin,,0,0,0,, 这种情况下 这里就要加上 sender\N{\fs12}So that’s the sender there that you would put.
Dialogue: 0,0:55:44.05,0:55:46.63,yin,,0,0,0,, 这里将要被调用的方法 \N{\fs12}Okay? The method that’s going to get invoked here –
Dialogue: 0,0:55:46.63,0:55:48.15,yin,,0,0,0,, 如果出现广播时将要调用的方法 \N{\fs12}method to invoke if something happens –
Dialogue: 0,0:55:48.73,0:55:52.67,yin,,0,0,0,, 总有一个参数 是一个 NSNotification\N{\fs12}always has one argument, which is an NSNotification.
Dialogue: 0,0:55:53.15,0:55:55.80,yin,,0,0,0,,NSNotification 有三个属性 \N{\fs12}Inside an NSNotification there are three properties:
Dialogue: 0,0:55:56.07,0:55:59.03,yin,,0,0,0,, 一是 name 广播站的名称 \N{\fs12}One is name, that’s the name of the radio station –
Dialogue: 0,0:55:59.03,0:56:00.44,yin,,0,0,0,, 和上面传递的参数是一样的 \N{\fs12}same thing that was passed above;
Dialogue: 0,0:56:00.86,0:56:06.21,yin,,0,0,0,,object 就是向你发送这个通知的对象 \N{\fs12}object, okay, that’s the object sending you this notification,
Dialogue: 0,0:56:06.21,0:56:08.32,yin,,0,0,0,, 就是上面的 sender\N{\fs12}so that would be the sender anything above;
Dialogue: 0,0:56:08.69,0:56:11.20,yin,,0,0,0,, 然后是 userInfo 是一个 ID\N{\fs12}and then userInfo, which is an ID.
Dialogue: 0,0:56:11.55,0:56:15.18,yin,,0,0,0,, 想要知道它是什么 你需要知道 \N{\fs12}And to know what that is, you have to know
Dialogue: 0,0:56:15.26,0:56:17.76,yin,,0,0,0,, 进行广播的那个人 \N{\fs12}what the person who broadcasts on the radio station
Dialogue: 0,0:56:17.98,0:56:19.37,yin,,0,0,0,, 会提供什么 \N{\fs12}says they will provide there.
Dialogue: 0,0:56:20.15,0:56:20.80,yin,,0,0,0,, 明白了吗 \N{\fs12}Does that make sense?
Dialogue: 0,0:56:21.18,0:56:24.10,yin,,0,0,0,, 所以这个 userInfo 是取决于广播站的 \N{\fs12}So that userInfo is radio station-dependent.
Dialogue: 0,0:56:24.73,0:56:26.97,yin,,0,0,0,, 但是如果你知道广播站的名称 \N{\fs12}But if you know the name of the radio station,
Dialogue: 0,0:56:26.97,0:56:29.64,yin,,0,0,0,, 你也许就可以去文档中查找 \N{\fs12}you probably are looking in the documentation to find it,
Dialogue: 0,0:56:29.64,0:56:30.52,yin,,0,0,0,, 文档也许会告诉你 \N{\fs12}it probably says there,
Dialogue: 0,0:56:30.53,0:56:33.23,yin,,0,0,0,, 你要得到的用户信息是 X Y 或者 Z\N{\fs12}”Oh, and the user info you’ll get is X, Y, or Z.”
Dialogue: 0,0:56:33.62,0:56:34.45,yin,,0,0,0,, 但它是一个 ID\N{\fs12}But it’s an ID.
Dialogue: 0,0:56:34.45,0:56:35.46,yin,,0,0,0,, 所以你要知道它是什么 \N{\fs12}So you have to know what it is.
Dialogue: 0,0:56:35.46,0:56:37.52,yin,,0,0,0,, 你也许需要对它执行 isKindOfClass\N{\fs12}You’re probably going to do is kind of class on it,
Dialogue: 0,0:56:37.52,0:56:42.65,yin,,0,0,0,, 或者 respondsToSelector 等来使用它 \N{\fs12}or response to selector, or something like that to use it.
Dialogue: 0,0:56:42.78,0:56:43.97,yin,,0,0,0,, 很多情况下它都是 nil\N{\fs12}A lot of times that’s nil
Dialogue: 0,0:56:43.97,0:56:45.49,yin,,0,0,0,, 因为我们真正关注的是 \N{\fs12}because all we’re really interested in
Dialogue: 0,0:56:45.49,0:56:47.28,yin,,0,0,0,, 是否有广播 \N{\fs12}is whether there was a broadcast,
Dialogue: 0,0:56:47.52,0:56:50.10,yin,,0,0,0,, 而不是是否广播了某个特定信息 \N{\fs12}not any particular information that was broadcast.
Dialogue: 0,0:56:50.41,0:56:50.71,yin,,0,0,0,, 有问题吗 \N{\fs12}Question?
Dialogue: 0,0:56:51.55,0:56:54.36,yin,,0,0,0,,sender 是应用中全局变量 \N{\fs12}About sender is that global over just your app,
Dialogue: 0,0:56:54.37,0:56:55.75,yin,,0,0,0,, 还是整个系统中的全局变量 \N{\fs12}or global over the whole system?
Dialogue: 0,0:56:55.95,0:56:56.79,yin,,0,0,0,, 这些东西 \N{\fs12}All this stuff –
Dialogue: 0,0:56:56.81,0:57:00.68,yin,,0,0,0,, 问题是 sender 是整个系统的全局变量 \N{\fs12}the question is: Is the sender there global to the whole system
Dialogue: 0,0:57:00.68,0:57:01.75,yin,,0,0,0,, 还是只是应用中的呢 \N{\fs12}or just inside your app?
Dialogue: 0,0:57:02.20,0:57:04.14,yin,,0,0,0,, 通常情况下 所有关于通知的内容 \N{\fs12}Always everything about notifications
Dialogue: 0,0:57:04.16,0:57:05.61,yin,,0,0,0,, 都是应用内的 \N{\fs12}inside your app, okay?
Dialogue: 0,0:57:05.88,0:57:08.93,yin,,0,0,0,, 因为堆中对象的空间 \N{\fs12}Because the space of objects in the heap
Dialogue: 0,0:57:08.95,0:57:10.22,yin,,0,0,0,, 是在应用内的 \N{\fs12}is only inside your app.
Dialogue: 0,0:57:10.41,0:57:11.91,yin,,0,0,0,, 你不能查看其他应用的数据 \N{\fs12}You can’t see in other apps.
Dialogue: 0,0:57:12.01,0:57:14.47,yin,,0,0,0,, 出于安全考虑 \N{\fs12}You know, they have their own segregated
Dialogue: 0,0:57:14.47,0:57:16.37,yin,,0,0,0,, 各个应用都被分隔在单独的空间 \N{\fs12}for security reasons space.
Dialogue: 0,0:57:16.45,0:57:19.48,yin,,0,0,0,, 所以如果你在这里得到一条系统消息 \N{\fs12}So if you’re getting a message here from the system,
Dialogue: 0,0:57:19.54,0:57:21.21,yin,,0,0,0,, 这里就要是 nil 对吧 \N{\fs12}this is going to be nil, okay?
Dialogue: 0,0:57:21.21,0:57:21.96,yin,,0,0,0,,sender 会是 nil\N{\fs12}The sender’s going to be nil.
Dialogue: 0,0:57:22.46,0:57:23.79,yin,,0,0,0,, 什么问题 一样的问题吗 \N{\fs12}Question? That was your question?
Dialogue: 0,0:57:24.53,0:57:24.91,yin,,0,0,0,, 好的 \N{\fs12}All right.
Dialogue: 0,0:57:25.67,0:57:28.10,yin,,0,0,0,, 另外一点需要理解的是 \N{\fs12}So another thing to understand is
Dialogue: 0,0:57:28.15,0:57:30.77,yin,,0,0,0,, 当你结束收听 关掉广播 \N{\fs12}when you’re done listening, tune out.
Dialogue: 0,0:57:30.87,0:57:32.13,yin,,0,0,0,, 将广播关掉 \N{\fs12}Turn your radio off. Okay?
Dialogue: 0,0:57:32.41,0:57:34.56,yin,,0,0,0,, 方法是 向通知中心发送一条消息 \N{\fs12}And you do that by sending a message
Dialogue: 0,0:57:34.56,0:57:37.21,yin,,0,0,0,, 告诉它 removeObserver\N{\fs12}to the notification center saying “removeObserver.”
Dialogue: 0,0:57:37.21,0:57:39.10,yin,,0,0,0,, 你可以将自己作为观察者 \N{\fs12}And you can remove yourself as an observer
Dialogue: 0,0:57:39.10,0:57:40.92,yin,,0,0,0,, 从全部广播站中移除 就是上面这行代码 \N{\fs12}of all radio stations with the first one
Dialogue: 0,0:57:41.08,0:57:44.12,yin,,0,0,0,, 或者将自己从某个广播站的收听列表中移除 \N{\fs12}or you can just remove yourself from listening to certain radio stations,
Dialogue: 0,0:57:44.42,0:57:46.55,yin,,0,0,0,, 通过指定广播站的名称 \N{\fs12}okay, by specifying the name of the radio station
Dialogue: 0,0:57:46.56,0:57:48.74,yin,,0,0,0,, 和你不想再收听的 sender 来实现 \N{\fs12}and who the sender is you don’t want to listen to anymore.
Dialogue: 0,0:57:49.74,0:57:53.73,yin,,0,0,0,, 做这步很重要 \N{\fs12}Okay? It’s important to do this because,
Dialogue: 0,0:57:54.16,0:57:58.80,yin,,0,0,0,, 因为不幸的是 通知中心始终用一个指针指向你 \N{\fs12}unfortunately, the notification center keeps a pointer to you
Dialogue: 0,0:57:59.11,0:58:01.20,yin,,0,0,0,, 叫做 Unsafe retained 不安全保留 \N{\fs12}that is called “Unsafe retained.”
Dialogue: 0,0:58:01.54,0:58:04.51,yin,,0,0,0,, 指针类型不是强或弱 而是不安全保留类型 \N{\fs12}So it’s not strong or weak; it’s unsafe retained.
Dialogue: 0,0:58:04.94,0:58:07.44,yin,,0,0,0,, 不安全保留类型指的是 \N{\fs12}And what unsafe retained means is that
Dialogue: 0,0:58:07.45,0:58:10.28,yin,,0,0,0,, 如果没有调用它就离开了堆 \N{\fs12}if you go out of the heap without calling this first,
Dialogue: 0,0:58:10.42,0:58:13.18,yin,,0,0,0,, 通知中心可能会试着给你发送一个通知 \N{\fs12}the notification center might try and send you a notification
Dialogue: 0,0:58:13.19,0:58:13.95,yin,,0,0,0,, 然后应用就崩溃了 \N{\fs12}and crash your app.
Dialogue: 0,0:58:14.60,0:58:15.82,yin,,0,0,0,, 这就是为什么它是不安全的 \N{\fs12}That’s why it’s unsafe.
Dialogue: 0,0:58:16.30,0:58:18.75,yin,,0,0,0,, 这里为什么要用这些不安全保留指针呢 \N{\fs12}Now, why are these unsafe retained here?
Dialogue: 0,0:58:18.98,0:58:21.19,yin,,0,0,0,, 显然是为了向后兼容 \N{\fs12}Clearly for backwards compatibility.
Dialogue: 0,0:58:21.20,0:58:22.56,yin,,0,0,0,, 这里实际上应该是弱类型 \N{\fs12}This really should be weak.
Dialogue: 0,0:58:23.03,0:58:25.83,yin,,0,0,0,, 如果这是一个指向你的弱指针就太好了 \N{\fs12}Okay? It would be awesome for this to be a weak pointer to you
Dialogue: 0,0:58:25.83,0:58:27.17,yin,,0,0,0,, 因为这时如果你离开堆 \N{\fs12}because then if you went out of the heap,
Dialogue: 0,0:58:27.39,0:58:29.45,yin,,0,0,0,, 通知中心中会设为 nil\N{\fs12}it would be set to nil inside the notification center;
Dialogue: 0,0:58:29.46,0:58:31.04,yin,,0,0,0,, 绝不会再向你发送任何消息了 \N{\fs12}it would never try and send you any messages.
Dialogue: 0,0:58:32.39,0:58:37.50,yin,,0,0,0,, 将指针自动设为 nil 的这种弱指针机制 \N{\fs12}But, you know, the whole weak mechanism of setting things to nil automatically,
Dialogue: 0,0:58:37.51,0:58:39.96,yin,,0,0,0,, 是 iOS6 和 iOS7 中特有的 \N{\fs12}that’s an iOS 6, iOS 7 only thing.
Dialogue: 0,0:58:40.15,0:58:41.94,yin,,0,0,0,, 如果你的应用是运行于 iOS5 的 \N{\fs12}So if you had an app that was running on iOS 5,
Dialogue: 0,0:58:41.95,0:58:42.81,yin,,0,0,0,, 就不会起作用了 \N{\fs12}that wouldn’t work.
Dialogue: 0,0:58:42.81,0:58:45.47,yin,,0,0,0,, 如果这个应用依赖于这个机制 就会变得很糟糕 \N{\fs12}And if this depended on that, it would be bad.
Dialogue: 0,0:58:46.15,0:58:48.67,yin,,0,0,0,, 我相信最终他们也许会将它们设为弱类型 \N{\fs12}I’m sure eventually they would probably move these things to weak
Dialogue: 0,0:58:48.68,0:58:52.53,yin,,0,0,0,, 直接告诉用户 如果你使用这个 API 性能会降低 \N{\fs12}and just say, “If you use this API, it’s depreciated;
Dialogue: 0,0:58:52.54,0:58:53.86,yin,,0,0,0,, 不能在 iOS5 上运行 \N{\fs12}you can’t run in iOS 5.”
Dialogue: 0,0:58:53.86,0:58:55.97,yin,,0,0,0,, 没准他们会在 iOS8 或者 iOS9 中这样做 \N{\fs12}I don’t know, maybe they’ll do that in iOS 8 or 9.
Dialogue: 0,0:58:55.99,0:58:56.44,yin,,0,0,0,, 我也不知道 \N{\fs12}I don’t know.
Dialogue: 0,0:58:56.85,0:58:57.81,yin,,0,0,0,, 但是这里要注意 \N{\fs12}But be careful there.
Dialogue: 0,0:58:57.82,0:58:58.58,yin,,0,0,0,, 它是不安全保留类型 \N{\fs12}It’s unsafe retained.
Dialogue: 0,0:58:58.58,0:59:00.42,yin,,0,0,0,, 这是你们在这门课程中 \N{\fs12}It’s the only unsafe retained really
Dialogue: 0,0:59:00.43,0:59:02.48,yin,,0,0,0,, 需要注意的唯一一不安全保留类型 \N{\fs12}you’re probably going to have to worry about in this course.
Dialogue: 0,0:59:02.48,0:59:04.24,yin,,0,0,0,, 总之 结束收听广播后 \N{\fs12}But the bottom line is: Remove yourself
Dialogue: 0,0:59:04.24,0:59:05.16,yin,,0,0,0,, 要移除自己 \N{\fs12}when you’re done listening.
Dialogue: 0,0:59:05.83,0:59:08.32,yin,,0,0,0,, 通常情况下 在你的 MVC 离开屏幕后 \N{\fs12}Now, normally you’re going to remove yourself
Dialogue: 0,0:59:08.50,0:59:11.37,yin,,0,0,0,, 就要移除自己 \N{\fs12}when your MVC goes off screen, okay?
Dialogue: 0,0:59:11.65,0:59:15.23,yin,,0,0,0,, 通常只有在 MVC 处于激活状态出现在屏幕上的时候 \N{\fs12}Because you’re usually only interested in radio station happenings
Dialogue: 0,0:59:15.48,0:59:17.77,yin,,0,0,0,, 你才会关注广播消息 \N{\fs12}when your MVC is active and on screen.
Dialogue: 0,0:59:18.30,0:59:20.87,yin,,0,0,0,, 如果出于某些原因 这个没法实现 \N{\fs12}But if for some reason that doesn’t make sense,
Dialogue: 0,0:59:21.06,0:59:23.92,yin,,0,0,0,, 有个方法叫做 dealloc\N{\fs12}there is a method called “dealloc.”
Dialogue: 0,0:59:24.79,0:59:27.07,yin,,0,0,0,, 所有对象都有这个方法 \N{\fs12}Every object has this.
Dialogue: 0,0:59:27.71,0:59:31.03,yin,,0,0,0,, 会在你的对象将要离开堆前被调用 \N{\fs12}It gets called just before your object leaves to the heap.
Dialogue: 0,0:59:31.87,0:59:34.30,yin,,0,0,0,, 所有属性都为 nil\N{\fs12}Okay? All your properties are nil.
Dialogue: 0,0:59:34.55,0:59:37.85,yin,,0,0,0,, 几乎已经不再是一个对象的时候 调用这个方法 \N{\fs12}You are barely existing as an object and this gets called.
Dialogue: 0,0:59:38.31,0:59:39.72,yin,,0,0,0,, 是最后的关联 \N{\fs12}Okay? It’s that last hook.
Dialogue: 0,0:59:40.18,0:59:43.57,yin,,0,0,0,, 所以也可以在这里解决不安全保留指针的问题 \N{\fs12}And so you can fix unsafe retained pointers to you there.
Dialogue: 0,0:59:44.22,0:59:46.56,yin,,0,0,0,, 我不建议使用 dealloc\N{\fs12}Okay? I don’t recommend using dealloc.
Dialogue: 0,0:59:46.76,0:59:50.39,yin,,0,0,0,, 可以肯定的是 在这门课中 不要为了其他原因使用它 \N{\fs12}Don’t use it for anything else, that’s for sure in this class.
Dialogue: 0,0:59:50.59,0:59:52.63,yin,,0,0,0,, 我建议使用移除 更合理 \N{\fs12}I suggest removing, it would make sense.
Dialogue: 0,0:59:52.63,0:59:53.13,yin,,0,0,0,, 有问题吗 \N{\fs12}Question?
Dialogue: 0,0:59:53.40,0:59:55.02,yin,,0,0,0,, 如果你将自己从观察者中移除 \N{\fs12}How do you remove yourself as an observer
Dialogue: 0,0:59:55.02,0:59:56.85,yin,,0,0,0,, 但你却不是一个观察者呢 \N{\fs12}and you’re not an observer on anything?
Dialogue: 0,0:59:57.20,0:59:57.72,yin,,0,0,0,, 好问题 \N{\fs12}Great question.
Dialogue: 0,0:59:57.72,0:59:59.47,yin,,0,0,0,, 问题是 如果我调用了 removeObserver\N{\fs12}So the question is: What if I call removeObserver
Dialogue: 0,0:59:59.48,1:00:00.81,yin,,0,0,0,, 但我却没有观察任何对象会怎样 \N{\fs12}and I’m not observing anything?
Dialogue: 0,1:00:01.09,1:00:01.58,yin,,0,0,0,, 没问题 \N{\fs12}No problem.
Dialogue: 0,1:00:01.80,1:00:03.05,yin,,0,0,0,, 不会发生不好的事情 \N{\fs12}Nothing bad will happen.
Dialogue: 0,1:00:03.14,1:00:04.31,yin,,0,0,0,, 那么你可以直接放到 dealloc 中 \N{\fs12}So you could just throw that in dealloc.
Dialogue: 0,1:00:04.32,1:00:04.87,yin,,0,0,0,, 可以的 \N{\fs12}You could.
Dialogue: 0,1:00:04.87,1:00:05.20,yin,,0,0,0,, 你可以这样做 \N{\fs12}You could.
Dialogue: 0,1:00:05.20,1:00:06.72,yin,,0,0,0,, 并不是很好的编程方法 \N{\fs12}It wouldn’t be very nice programming.
Dialogue: 0,1:00:06.74,1:00:07.94,yin,,0,0,0,, 不是很好看 \N{\fs12}It’s kind of not very pretty,
Dialogue: 0,1:00:07.95,1:00:11.63,yin,,0,0,0,, 但是为了安全 你可以直接放到 dealloc 中 \N{\fs12}but you could just throw that in your dealloc to be safe.
Dialogue: 0,1:00:12.03,1:00:15.40,yin,,0,0,0,, 但是更好的方法你们知道的 \N{\fs12}But better to, you know — okay.
Dialogue: 0,1:00:15.66,1:00:16.57,yin,,0,0,0,, 接下来是一个示例 \N{\fs12}So here’s an example.
Dialogue: 0,1:00:16.58,1:00:18.55,yin,,0,0,0,, 这个示例我会快速演示一下 \N{\fs12}This is an example I’m going to demo real quick here,
Dialogue: 0,1:00:18.70,1:00:20.05,yin,,0,0,0,, 是关于文本大小的 \N{\fs12}which is text size.
Dialogue: 0,1:00:20.05,1:00:23.79,yin,,0,0,0,, 在 iOS7 之前的版本中都没有这个功能 \N{\fs12}So in iOS 7 — not in any iOS before that, but in iOS 7 –
Dialogue: 0,1:00:23.94,1:00:26.96,yin,,0,0,0,, 但在 iOS7 中 如果你使用了推荐字体 \N{\fs12}if you use preferred fonts, then the user can actually
Dialogue: 0,1:00:26.96,1:00:29.29,yin,,0,0,0,, 用户可以进入设置界面改变字体大小 \N{\fs12}go into settings and change the size of their font.
Dialogue: 0,1:00:29.53,1:00:30.84,yin,,0,0,0,, 如果他们像我一样 \N{\fs12}So if they’re like me
Dialogue: 0,1:00:31.03,1:00:34.89,yin,,0,0,0,, 随着年龄的增长 手机要拿得更远一些才能看清 \N{\fs12}and the phone has to be held farther and farther away as the years go by,
Dialogue: 0,1:00:35.09,1:00:36.49,yin,,0,0,0,, 你就可以将字号调大 \N{\fs12}you can set the text size up
Dialogue: 0,1:00:36.49,1:00:38.15,yin,,0,0,0,, 然后把手机拿近一点 \N{\fs12}and move that phone back in a little bit.
Dialogue: 0,1:00:38.15,1:00:40.92,yin,,0,0,0,, 文本大小就可以实现这样的功能 \N{\fs12}So that’s what this text size thing allows you to do.
Dialogue: 0,1:00:40.92,1:00:43.89,yin,,0,0,0,, 如果文本大小发生了变化 \N{\fs12}Well, if that text size font change happens,
Dialogue: 0,1:00:44.10,1:00:47.42,yin,,0,0,0,, 你需要收到通知 然后改变字体 \N{\fs12}you have to get notified so that you can change the fonts,
Dialogue: 0,1:00:47.42,1:00:51.71,yin,,0,0,0,, 变为用户设置的新的推荐字体 对吧 \N{\fs12}use the new preferred font that the user set, okay?
Dialogue: 0,1:00:52.00,1:00:53.91,yin,,0,0,0,, 获取这个通知的方法是 \N{\fs12}So you get that notification
Dialogue: 0,1:00:54.05,1:00:56.77,yin,,0,0,0,, 在广播站通知中心登记 \N{\fs12}by signing up in the default center for the radio station
Dialogue: 0,1:00:56.78,1:01:00.69,yin,,0,0,0,, 使用 UIContentSizeCategoryDidChangeNotification\N{\fs12}called UIContentSizeCategoryDidChangeNotification.
Dialogue: 0,1:01:01.10,1:01:03.57,yin,,0,0,0,, 你可以认为它可以是 \N{\fs12}Okay? You could argue it could be something
Dialogue: 0,1:01:03.57,1:01:04.90,yin,,0,0,0,, 推荐字体改变之类的东西 \N{\fs12}like preferred fonts change.
Dialogue: 0,1:01:04.90,1:01:05.61,yin,,0,0,0,, 但它不是 \N{\fs12}But it’s not.
Dialogue: 0,1:01:05.61,1:01:08.44,yin,,0,0,0,, 而是 UIContentSizeCategoryDidChangeNotification\N{\fs12}UIContentSizeCategoryDidChangeNotification, okay?
Dialogue: 0,1:01:08.80,1:01:09.78,yin,,0,0,0,, 登记进去之后 \N{\fs12}You sign up for that,
Dialogue: 0,1:01:09.78,1:01:13.39,yin,,0,0,0,, 无论何时这些字体改变了大小 你的方法 \N{\fs12}and whenever those fonts change size, your method –
Dialogue: 0,1:01:13.47,1:01:15.72,yin,,0,0,0,, 我这里叫做 preferredFontSizeChange\N{\fs12}”preferredFontSizeChange” is what I called mine –
Dialogue: 0,1:01:15.97,1:01:18.29,yin,,0,0,0,, 会被调用 \N{\fs12}will get called. Okay?
Dialogue: 0,1:01:18.99,1:01:23.57,yin,,0,0,0,, 我们来看一下如何将其添加到 Attributor 中 \N{\fs12}So let’s take a look at how we would add that to Attributor
Dialogue: 0,1:01:23.58,1:01:25.29,yin,,0,0,0,, 因为 Attributor 使用了推荐字体 \N{\fs12}because Attributor uses preferred fonts.
Dialogue: 0,1:01:25.43,1:01:26.62,yin,,0,0,0,, 如果我们改变了字体大小 \N{\fs12}And if we change the font size,
Dialogue: 0,1:01:26.63,1:01:28.66,yin,,0,0,0,, 我们希望正文和标题 \N{\fs12}we want the body and the headline
Dialogue: 0,1:01:28.84,1:01:31.28,yin,,0,0,0,, 都变成更大或更小的字体 \N{\fs12}both to change to the bigger or smaller font.
Dialogue: 0,1:01:31.62,1:01:32.53,yin,,0,0,0,, 我们来做一下 \N{\fs12}So let’s do that.
Dialogue: 0,1:01:33.46,1:01:36.72,yin,,0,0,0,, 回到 Xcode\N{\fs12}I’m going to go back here to Xcode.
Dialogue: 0,1:01:37.01,1:01:37.80,yin,,0,0,0,, 好了 \N{\fs12}So here we are.
Dialogue: 0,1:01:37.81,1:01:39.82,yin,,0,0,0,, 想要实现这个功能 \N{\fs12}The other thing we’re going to need to make this work
Dialogue: 0,1:01:39.96,1:01:41.65,yin,,0,0,0,, 我们还需要视图控制器生命周期 \N{\fs12}is the view controller lifecycle.
Dialogue: 0,1:01:41.99,1:01:45.21,yin,,0,0,0,, 只有在我们是在屏幕上的 MVC 的情况下 \N{\fs12}Okay? Because we’re only interested in those font changes
Dialogue: 0,1:01:45.21,1:01:47.52,yin,,0,0,0,, 才会关注这些字体的变化 \N{\fs12}if we’re the MVC that’s on screen,
Dialogue: 0,1:01:47.65,1:01:48.66,yin,,0,0,0,, 我们一直都在 \N{\fs12}which we always are,
Dialogue: 0,1:01:48.66,1:01:51.21,yin,,0,0,0,, 当然是这样 因为我们只有这一个 MVC\N{\fs12}of course, because we only have this one MVC.
Dialogue: 0,1:01:51.22,1:01:52.67,yin,,0,0,0,, 但很快 我们会添加其他 MVC\N{\fs12}But soon we will have other MVCs
Dialogue: 0,1:01:52.68,1:01:53.89,yin,,0,0,0,, 就不会始终都在屏幕上了 \N{\fs12}and we won’t always be on screen.
Dialogue: 0,1:01:54.52,1:01:58.95,yin,,0,0,0,, 我们用视图控制器生命周期方法 viewWillAppear\N{\fs12}So let’s use the view controller lifecycle method viewWillAppear.
Dialogue: 0,1:01:59.70,1:02:01.63,yin,,0,0,0,, 当一个视图将要出现时 \N{\fs12}Okay? So when a view will appear –
Dialogue: 0,1:02:01.63,1:02:05.28,yin,,0,0,0,, 注意这里始终都要加上 super\N{\fs12}notice I’m always going to do super there.
Dialogue: 0,1:02:05.61,1:02:09.38,yin,,0,0,0,, 你可以在具体操作之前或之后调用 super\N{\fs12}You can call super before or after you do your work.
Dialogue: 0,1:02:09.79,1:02:11.65,yin,,0,0,0,, 取决于你想要什么 \N{\fs12}It kind of depends on what you want.
Dialogue: 0,1:02:11.65,1:02:13.05,yin,,0,0,0,, 你想让你的超类 \N{\fs12}Do you want your super class to get a chance
Dialogue: 0,1:02:13.05,1:02:15.48,yin,,0,0,0,, 在操作之前还是之后被调用 \N{\fs12}after you’ve done what you want to do or before?
Dialogue: 0,1:02:16.26,1:02:17.62,yin,,0,0,0,, 通常是无所谓的 \N{\fs12}Usually it doesn’t matter too much.
Dialogue: 0,1:02:17.70,1:02:19.03,yin,,0,0,0,, 我并不知道那个 UIViewController\N{\fs12}I don’t know that UIViewController
Dialogue: 0,1:02:19.05,1:02:20.85,yin,,0,0,0,, 是否真的在这些超类中执行了操作 \N{\fs12}actually does things in these supers,
Dialogue: 0,1:02:20.86,1:02:23.74,yin,,0,0,0,, 但是依旧要给它们机会 对吧 \N{\fs12}but you always want to give them the opportunity, okay?
Dialogue: 0,1:02:23.75,1:02:26.36,yin,,0,0,0,, 这只是视图控制器生命周期的一部分 \N{\fs12}It’s just part of the view controller lifecycle.
Dialogue: 0,1:02:26.63,1:02:28.69,yin,,0,0,0,, 当视图出现时 \N{\fs12}So when the view appears,
Dialogue: 0,1:02:28.70,1:02:31.05,yin,,0,0,0,, 我想在通知中心中登记 \N{\fs12}I just want to sign up with the notification center
Dialogue: 0,1:02:31.26,1:02:33.99,yin,,0,0,0,, 这样我才能接收到这些消息 \N{\fs12}so that I can receive these messages.
Dialogue: 0,1:02:33.99,1:02:35.41,yin,,0,0,0,, 所以这里我要写 \N{\fs12}So I’m going to say is
Dialogue: 0,1:02:35.95,1:02:43.74,yin,,0,0,0,,[NSNotificationCenter defaultCenter] addObserver: self\N{\fs12}[NSNotificationCenter defaultCenter] addObserver: self,
Dialogue: 0,1:02:44.09,1:02:44.55,yin,,0,0,0,, 明白吧 \N{\fs12}Okay?
Dialogue: 0,1:02:44.60,1:02:46.53,yin,,0,0,0,, 我想让这些消息发送给我 \N{\fs12}I want these messages sent to myself.
Dialogue: 0,1:02:46.58,1:02:49.11,yin,,0,0,0,, 而 selector 要记得用 @selector\N{\fs12}The selector, remember we have to say “at sign selector”
Dialogue: 0,1:02:49.11,1:02:50.24,yin,,0,0,0,, 来指定内容 \N{\fs12}when we want to specify a thing.
Dialogue: 0,1:02:50.24,1:02:54.08,yin,,0,0,0,, 我要叫它 preferredFontsChanged\N{\fs12}I’m going to call it “preferredFontsChanged.”
Dialogue: 0,1:02:55.09,1:03:00.18,yin,,0,0,0,,name 是 UIContentSizeCategoryDidChangeNotification\N{\fs12}Okay? Name is UIContentSizeCategory –
Dialogue: 0,1:03:00.18,1:03:01.77,yin,,0,0,0,, 太好了 可以直接补全 \N{\fs12}lucky, I get to tab through that one.
Dialogue: 0,1:03:01.94,1:03:04.31,yin,,0,0,0,,object 是 nil\N{\fs12}Okay? And the object is nil.
Dialogue: 0,1:03:04.31,1:03:06.05,yin,,0,0,0,, 也就是说 如果有人发送了消息 \N{\fs12}In other words, if anybody sends that,
Dialogue: 0,1:03:06.09,1:03:07.75,yin,,0,0,0,, 我就要改变我的推荐字体 \N{\fs12}I’m going to change my preferred fonts.
Dialogue: 0,1:03:08.43,1:03:10.50,yin,,0,0,0,, 注意这里有一个警告 \N{\fs12}Okay? Notice there’s a warning here,
Dialogue: 0,1:03:10.81,1:03:13.43,yin,,0,0,0,, 因为我没有实现这个 \N{\fs12}that’s because I don’t implement this.
Dialogue: 0,1:03:13.75,1:03:15.72,yin,,0,0,0,, 我觉得这是 iOS7 中的新内容 \N{\fs12}I believe that’s new in iOS 7.
Dialogue: 0,1:03:15.91,1:03:18.77,yin,,0,0,0,, 我不记得以前见过 \N{\fs12}I don’t remember seeing that before.
Dialogue: 0,1:03:19.74,1:03:20.55,yin,,0,0,0,, 好的 谢谢 \N{\fs12}Okay. Thank you.
Dialogue: 0,1:03:20.95,1:03:21.70,yin,,0,0,0,, 这里太多 r 了 \N{\fs12}Too many Rs.
Dialogue: 0,1:03:23.22,1:03:26.34,yin,,0,0,0,,(void)preferred\N{\fs12}Okay. View — void here preferred.
Dialogue: 0,1:03:27.99,1:03:29.43,yin,,0,0,0,, 糟糕 多了个 f\N{\fs12}Oops. Two Fs now.
Dialogue: 0,1:03:29.44,1:03:34.86,yin,,0,0,0,,preferredFontsChanged 参数为 NSNotification\N{\fs12}Okay, preferredFontsChanged takes an NSNotification star,
Dialogue: 0,1:03:35.31,1:03:36.32,yin,,0,0,0,, 然后是 notification\N{\fs12}okay, notification,
Dialogue: 0,1:03:36.33,1:03:37.24,yin,,0,0,0,, 我不会用它 \N{\fs12}I’m not going to use that
Dialogue: 0,1:03:37.25,1:03:38.62,yin,,0,0,0,, 因为基本上它只是一个布尔值 \N{\fs12}because it’s just basically Boolean.
Dialogue: 0,1:03:39.00,1:03:40.68,yin,,0,0,0,, 实际上我要调用另外一个方法 \N{\fs12}And I’m actually going to call another method.
Dialogue: 0,1:03:40.68,1:03:42.99,yin,,0,0,0,, 我要调用 usePreferredFonts\N{\fs12}I’m going to call usePreferredFonts,
Dialogue: 0,1:03:43.00,1:03:44.85,yin,,0,0,0,, 你们马上就能明白这里为什么要这么做 \N{\fs12}and you’re going to see why here in a second.
Dialogue: 0,1:03:45.62,1:03:49.32,yin,,0,0,0,, 这样设置好之后 只要我的视图出现 \N{\fs12}Okay? So that set it up so that anytime my view appears,
Dialogue: 0,1:03:49.50,1:03:53.46,yin,,0,0,0,, 我就会得到这个 usePreferredFonts\N{\fs12}I’m going to get this usePreferredFonts sent to me –
Dialogue: 0,1:03:53.73,1:03:55.90,yin,,0,0,0,, 会发送给我 \N{\fs12}preferred fonts sent.
Dialogue: 0,1:03:55.90,1:03:59.68,yin,,0,0,0,, 在这里 我要让我的文本视图和标题 \N{\fs12}And in here I have to make my text view
Dialogue: 0,1:03:59.68,1:04:02.63,yin,,0,0,0,, 使用新的推荐字体 \N{\fs12}and my headline use the new preferred fonts.
Dialogue: 0,1:04:02.63,1:04:04.75,yin,,0,0,0,, 非常简单 \N{\fs12}And that’s really, really easy to do.
Dialogue: 0,1:04:04.99,1:04:14.94,yin,,0,0,0,,self.body.font=[UIFont preferredFontForTextStyle: UIFontTextStyle\N{\fs12}self.body.font equals UIFont preferredFontForTextStyle UIFontTextStyle –
Dialogue: 0,1:04:14.95,1:04:16.53,yin,,0,0,0,, 这是正文 所以这里我要写 Body\N{\fs12}this is the body, so I’m going to do Body.
Dialogue: 0,1:04:16.83,1:04:18.65,yin,,0,0,0,, 我正好可以借此机会介绍一下 \N{\fs12}So this has allowed me an excuse to show you
Dialogue: 0,1:04:18.66,1:04:20.80,yin,,0,0,0,, 如何使用代码设置推荐字体 \N{\fs12}how to set these preferred fonts in code
Dialogue: 0,1:04:20.81,1:04:22.09,yin,,0,0,0,, 而不是在 Xcode 中进行设置 \N{\fs12}instead of setting them in Xcode.
Dialogue: 0,1:04:22.34,1:04:23.55,yin,,0,0,0,, 就是这么简单 \N{\fs12}This is how easy it is.
Dialogue: 0,1:04:23.79,1:04:26.73,yin,,0,0,0,, 现在我在设置 UITextView 的字体 \N{\fs12}Okay? Now I’m setting the font of the UITextView.
Dialogue: 0,1:04:26.73,1:04:28.60,yin,,0,0,0,, 所以如果我之前设置了加粗或者斜体 \N{\fs12}So if I had any bolds or italics,
Dialogue: 0,1:04:28.68,1:04:30.05,yin,,0,0,0,, 这里设置之后就不再有这些效果了 \N{\fs12}unfortunately this would blast them.
Dialogue: 0,1:04:30.61,1:04:34.27,yin,,0,0,0,, 显然 我需要逐一查看各个属性 \N{\fs12}So obviously, I would need to iterate through all the attributes
Dialogue: 0,1:04:34.28,1:04:35.32,yin,,0,0,0,, 查看字体 \N{\fs12}and look at the font,
Dialogue: 0,1:04:35.58,1:04:36.51,yin,,0,0,0,, 得到符号特征 \N{\fs12}get the symbolic traits,
Dialogue: 0,1:04:36.51,1:04:38.03,yin,,0,0,0,, 像我之前讲过的那样 应用它们 \N{\fs12}apply them like I talked about earlier.
Dialogue: 0,1:04:38.46,1:04:40.45,yin,,0,0,0,, 接下来 我们对标题进行同样的操作 \N{\fs12}And then let’s do the same thing for the headline,
Dialogue: 0,1:04:41.01,1:04:47.20,yin,,0,0,0,, 但是它的字体要是标题推荐字体 \N{\fs12}but its font wants to be the preferred font for headline,
Dialogue: 0,1:04:47.67,1:04:48.77,yin,,0,0,0,, 也就是这个 \N{\fs12}which is this one.
Dialogue: 0,1:04:50.18,1:04:52.69,yin,,0,0,0,, 就是这样 \N{\fs12}Okay? So that’s that.
Dialogue: 0,1:04:54.58,1:05:00.70,yin,,0,0,0,, 还有一点要考虑的是 我需要停止收听 \N{\fs12}One last thing to consider here is I need to stop listening –
Dialogue: 0,1:05:02.47,1:05:04.10,yin,,0,0,0,, 我们在 viewWillDisappear 中执行 \N{\fs12}we’ll do it in will disappear.
Dialogue: 0,1:05:04.10,1:05:09.12,yin,,0,0,0,, 也可以在其他方法中实现 但是这里就这样 \N{\fs12}Could do it in either but — Okay.
Dialogue: 0,1:05:09.35,1:05:12.34,yin,,0,0,0,, 当我要消失时 我想要停止收听 \N{\fs12}When I’m going to disappear I want to stop listening.
Dialogue: 0,1:05:12.63,1:05:15.38,yin,,0,0,0,, 这里也是一样的 NSNotificationCenter\N{\fs12}And so, again, NSNotificationCenter,
Dialogue: 0,1:05:16.69,1:05:19.69,yin,,0,0,0,,defaultCenter removeObserver\N{\fs12}defaultCenter, removeObserver.
Dialogue: 0,1:05:19.96,1:05:21.70,yin,,0,0,0,, 有些同学可能会认为这里直接写 self 就行了 \N{\fs12}Now, some would argue just putting self here,
Dialogue: 0,1:05:21.70,1:05:25.52,yin,,0,0,0,, 但我认为这是一个不好的编程方法 \N{\fs12}but I actually think that’s bad coding because, you know,
Dialogue: 0,1:05:25.52,1:05:27.37,yin,,0,0,0,, 如果你在后面又添加了一个新功能 \N{\fs12}what happens if you add a new feature down the road
Dialogue: 0,1:05:27.37,1:05:28.92,yin,,0,0,0,, 你收听了另外一个广播 \N{\fs12}where you’re listening on a different radio station
Dialogue: 0,1:05:28.92,1:05:30.53,yin,,0,0,0,, 而你并不想在视图消失时 \N{\fs12}that you don’t want to stop listening to
Dialogue: 0,1:05:30.54,1:05:31.76,yin,,0,0,0,, 停止收听这个广播 \N{\fs12}when your view disappears?
Dialogue: 0,1:05:32.01,1:05:33.89,yin,,0,0,0,, 这种情况很少见 但也是有可能的 \N{\fs12}Which is rare, but it’s possible.
Dialogue: 0,1:05:34.28,1:05:38.44,yin,,0,0,0,, 所以我认为这里使用这个版本更好 \N{\fs12}So I actually think it’s better here to use the version of this,
Dialogue: 0,1:05:38.74,1:05:42.00,yin,,0,0,0,, 以名称为参数的 removeObserver\N{\fs12}which remove observer that takes the name.
Dialogue: 0,1:05:42.29,1:05:43.90,yin,,0,0,0,, 我要写 removeObserver: self\N{\fs12}So I’m going to say remove yourself
Dialogue: 0,1:05:44.15,1:05:47.16,yin,,0,0,0,,name: UIContentSizeCategoryDidChangeNotification\N{\fs12}name is UIContent blah-blah-blah.
Dialogue: 0,1:05:48.57,1:05:50.39,yin,,0,0,0,,object 依旧是 nil\N{\fs12}And the object is still nil.
Dialogue: 0,1:05:50.85,1:05:55.01,yin,,0,0,0,, 我只从那一个广播站的收听列表中 \N{\fs12}So I’m only going to remove myself as a listener
Dialogue: 0,1:05:55.01,1:05:56.42,yin,,0,0,0,, 将自己移除 \N{\fs12}from that one radio station.
Dialogue: 0,1:05:57.70,1:05:59.62,yin,,0,0,0,, 还有最后一件事 \N{\fs12}And there’s one last thing to do here,
Dialogue: 0,1:06:00.07,1:06:03.30,yin,,0,0,0,, 如果我的视图出现了 \N{\fs12}which is what happens if my view appears,
Dialogue: 0,1:06:03.43,1:06:05.76,yin,,0,0,0,, 我开始监听 它消失了 \N{\fs12}I start listening, it disappears,
Dialogue: 0,1:06:06.30,1:06:08.05,yin,,0,0,0,, 然后改变了文本样式 \N{\fs12}and then they go change the text style?
Dialogue: 0,1:06:09.52,1:06:10.80,yin,,0,0,0,, 然后视图又重新出现了 \N{\fs12}And then I reappear?
Dialogue: 0,1:06:12.25,1:06:16.00,yin,,0,0,0,, 这里我并不会得到通知 \N{\fs12}Okay? I will not be notified at that point
Dialogue: 0,1:06:16.30,1:06:18.03,yin,,0,0,0,, 因为这个文本样式的改变 \N{\fs12}because the change — the text style change –
Dialogue: 0,1:06:18.03,1:06:19.39,yin,,0,0,0,, 发生在我没有收听的时候 \N{\fs12}happened while I wasn’t listening.
Dialogue: 0,1:06:19.87,1:06:21.77,yin,,0,0,0,, 所以你回来继续收听时 \N{\fs12}So turning your listening back on,
Dialogue: 0,1:06:21.78,1:06:23.06,yin,,0,0,0,, 不会收到没有收听时 \N{\fs12}you don’t get all the messages
Dialogue: 0,1:06:23.06,1:06:24.31,yin,,0,0,0,, 发出的那些消息 \N{\fs12}that happened while you weren’t listening;
Dialogue: 0,1:06:24.31,1:06:25.52,yin,,0,0,0,, 你只会收到新消息 \N{\fs12}you only get new messages.
Dialogue: 0,1:06:25.92,1:06:27.33,yin,,0,0,0,, 这也就是我们为什么 \N{\fs12}So that’s why we probably want
Dialogue: 0,1:06:27.34,1:06:31.26,yin,,0,0,0,, 要在 viewWillAppear 中加上 self usePreferredFonts\N{\fs12}to say self usePreferredFonts in viewWillAppear.
Dialogue: 0,1:06:31.49,1:06:33.66,yin,,0,0,0,, 这也就是为什么我说 \N{\fs12}This is why I’m talking about where viewWillAppear
Dialogue: 0,1:06:33.66,1:06:36.86,yin,,0,0,0,, 在 viewWillAppear 执行同步操作 \N{\fs12}wants to sync up with the world when it starts.
Dialogue: 0,1:06:36.86,1:06:38.42,yin,,0,0,0,,viewWillAppear 就是这个作用 \N{\fs12}That’s what viewWillAppear is for.
Dialogue: 0,1:06:38.71,1:06:40.94,yin,,0,0,0,, 所以 viewWillAppear 会使用推荐字体 \N{\fs12}So viewWillAppear is going to use preferred fonts,
Dialogue: 0,1:06:40.94,1:06:42.89,yin,,0,0,0,, 不管目前是什么样式 \N{\fs12}whatever are currently out there.
Dialogue: 0,1:06:43.25,1:06:45.94,yin,,0,0,0,, 明白我为什么这样做了吗 \N{\fs12}Okay? That make sense why I’m doing that?
Dialogue: 0,1:06:46.89,1:06:51.42,yin,,0,0,0,, 我们运行一下 看看是否运行正常 \N{\fs12}So let’s run this and see if it works.
Dialogue: 0,1:06:53.13,1:06:54.56,yin,,0,0,0,, 我是在设备上运行的 \N{\fs12}Now, I’m running this on a device
Dialogue: 0,1:06:54.76,1:06:59.00,yin,,0,0,0,, 但是你们在模拟器上运行的时候 也可以打开设置 \N{\fs12}but on your simulator you can also go to the settings.
Dialogue: 0,1:06:59.00,1:07:00.86,yin,,0,0,0,, 这是我的文本 对吧 \N{\fs12}So here’s my text, right?
Dialogue: 0,1:07:00.86,1:07:03.46,yin,,0,0,0,, 我们加点橙色的文本 \N{\fs12}So let’s even go ahead and put some orange text in there.
Dialogue: 0,1:07:04.12,1:07:06.17,yin,,0,0,0,, 现在我要点击 home 键 \N{\fs12}Okay. Now I’m going to hit the home button
Dialogue: 0,1:07:06.86,1:07:10.10,yin,,0,0,0,, 转到设置 就在这里 \N{\fs12}and I’m going to go to settings, which is right here.
Dialogue: 0,1:07:10.54,1:07:14.59,yin,,0,0,0,, 找到下面的通用 我觉得是它 \N{\fs12}I’m going to go down to general, I believe it is.
Dialogue: 0,1:07:15.58,1:07:16.18,yin,,0,0,0,, 是它吗 \N{\fs12}Is that it?
Dialogue: 0,1:07:16.20,1:07:17.16,yin,,0,0,0,, 没错 文本大小 \N{\fs12}Yeah, text size.
Dialogue: 0,1:07:17.16,1:07:18.54,yin,,0,0,0,, 看到这个文本大小了吗 \N{\fs12}You see text size right there?
Dialogue: 0,1:07:19.22,1:07:20.51,yin,,0,0,0,, 可以看到这里有一个滑动条 \N{\fs12}You can see there’s a slider.
Dialogue: 0,1:07:20.71,1:07:24.29,yin,,0,0,0,, 我们把字体放到最大 \N{\fs12}So let’s make our text really big, okay?
Dialogue: 0,1:07:24.85,1:07:27.77,yin,,0,0,0,, 回去 我可以直接回到这里 \N{\fs12}Go back. I can just go back to here.
Dialogue: 0,1:07:27.78,1:07:30.58,yin,,0,0,0,, 它还在模拟器中运行 \N{\fs12}It’s still running in the simulator.
Dialogue: 0,1:07:30.69,1:07:32.78,yin,,0,0,0,, 如果我设置了断点之类的 \N{\fs12}Okay? So if I had breakpoints and stuff,
Dialogue: 0,1:07:32.78,1:07:33.73,yin,,0,0,0,, 还是可以使用的 \N{\fs12}that would all still work.
Dialogue: 0,1:07:33.87,1:07:35.23,yin,,0,0,0,, 可以看到 字体变大了 \N{\fs12}And now I can see my font is big.
Dialogue: 0,1:07:35.23,1:07:37.46,yin,,0,0,0,, 橙色文本还在这里 \N{\fs12}I kept my orange right there.
Dialogue: 0,1:07:37.68,1:07:38.25,yin,,0,0,0,, 可以这样做 \N{\fs12}You can do this.
Dialogue: 0,1:07:38.26,1:07:39.71,yin,,0,0,0,, 我可以为它添加轮廓 \N{\fs12}I can put an outline on there.
Dialogue: 0,1:07:40.32,1:07:41.20,yin,,0,0,0,, 绿色的吧 \N{\fs12}Green maybe.
Dialogue: 0,1:07:41.42,1:07:43.22,yin,,0,0,0,, 绿色轮廓更容易看清楚 \N{\fs12}Okay, you can see the outline a little better with green.
Dialogue: 0,1:07:43.45,1:07:45.57,yin,,0,0,0,, 现在如果我再回到设置页面 \N{\fs12}And now if I go back again to settings –
Dialogue: 0,1:07:46.83,1:07:50.98,yin,,0,0,0,, 将字体大小设为最小 回去 \N{\fs12}and let’s set this all the way to small and go back.
Dialogue: 0,1:07:51.76,1:07:54.32,yin,,0,0,0,, 再回到应用中 可以看到页面变化了 \N{\fs12}Back to our thing, you can see it updates it.
Dialogue: 0,1:07:54.91,1:07:58.12,yin,,0,0,0,, 明白了吗 \N{\fs12}Okay? So make sense?
Dialogue: 0,1:07:58.32,1:07:59.97,yin,,0,0,0,, 大家都明白这里发生了什么吗 \N{\fs12}Everyone understand what’s going on there?
Dialogue: 0,1:08:01.42,1:08:03.69,yin,,0,0,0,, 大家可以看到 在这一部分 我们使用了…\N{\fs12}Okay. So there you can see in that part we used –
Dialogue: 0,1:08:04.01,1:08:06.23,yin,,0,0,0,, 介绍了如何用代码设置推荐字体 \N{\fs12}we showed you how to do the preferred fonts in code,
Dialogue: 0,1:08:06.34,1:08:09.64,yin,,0,0,0,, 我们还用通知中心收听了广播 \N{\fs12}and we also used notification center to do the radio station,
Dialogue: 0,1:08:09.80,1:08:13.09,yin,,0,0,0,, 还使用了更多视图控制器生命周期方法 \N{\fs12}and we also used some more of the view controller lifecycle.
Dialogue: 0,1:08:13.09,1:08:16.15,yin,,0,0,0,, 涵盖了很多内容 \N{\fs12}So that was multihit there.
Dialogue: 0,1:08:16.83,1:08:23.88,yin,,0,0,0,, 下次课 周三的课上 \N{\fs12}And so next time — what’s coming up on Wednesday –
Dialogue: 0,1:08:24.01,1:08:25.23,yin,,0,0,0,, 我们要继续修改这个应用 \N{\fs12}we’re going to take this app
Dialogue: 0,1:08:25.50,1:08:28.02,yin,,0,0,0,, 添加更多的视图控制器 \N{\fs12}and we’re going to add some more view controllers to it.
Dialogue: 0,1:08:28.22,1:08:29.22,yin,,0,0,0,, 多个视图控制器 \N{\fs12}So multiple view controllers.
Dialogue: 0,1:08:29.22,1:08:31.95,yin,,0,0,0,, 为了完成作业 要特别注意这部分内容 \N{\fs12}Now, it’s very important to pay attention for that for your assignment
Dialogue: 0,1:08:32.09,1:08:33.36,yin,,0,0,0,, 因为这是作业要求中 \N{\fs12}because that’s the fundamental thing
Dialogue: 0,1:08:33.36,1:08:35.06,yin,,0,0,0,, 最基础的内容 \N{\fs12}we’re asking you to do in the assignment
Dialogue: 0,1:08:35.07,1:08:37.65,yin,,0,0,0,, 就是我们周三要讲的内容 创建多 MVC\N{\fs12}that’s going to go out on Wednesday is make multiple MVCs –
Dialogue: 0,1:08:38.09,1:08:39.46,yin,,0,0,0,, 依旧是 Matchismo\N{\fs12}it’s still going to be Matchismo
Dialogue: 0,1:08:39.59,1:08:41.48,yin,,0,0,0,, 但是要再增加一个游戏 \N{\fs12}but you’re going to have to do another game,
Dialogue: 0,1:08:41.55,1:08:43.24,yin,,0,0,0,, 都显示在屏幕上 \N{\fs12}have both on screen,
Dialogue: 0,1:08:43.34,1:08:45.78,yin,,0,0,0,, 在屏幕上再显示一项内容 \N{\fs12}have yet another thing appearing on screen.
Dialogue: 0,1:08:45.78,1:08:47.64,yin,,0,0,0,, 最少要有三个 MVC\N{\fs12}So you’re going to have at least three
Dialogue: 0,1:08:47.64,1:08:51.09,yin,,0,0,0,, 如果想要获得额外加分 需要实现四到五个不同的 MVC\N{\fs12}and if you do extra credit, four or five different MVCs.
Dialogue: 0,1:08:51.10,1:08:53.47,yin,,0,0,0,, 我们会快速实现多个 MVC\N{\fs12}So we’re going to rapidly start going up to multiple MVCs.
Dialogue: 0,1:08:53.65,1:08:55.34,yin,,0,0,0,, 会讲到如何通过 \N{\fs12}We’re going to talk about how to add MVCs
Dialogue: 0,1:08:55.35,1:08:58.10,yin,,0,0,0,, 选项卡栏和导航控制器添加 MVC\N{\fs12}with the tab bar and also navigation controller.
Dialogue: 0,1:08:58.10,1:09:00.51,yin,,0,0,0,, 这是我们会最先学到的两个实现方法 \N{\fs12}That’s the first two ways we’re going to learn how to do that.
Dialogue: 0,1:09:01.06,1:09:03.42,yin,,0,0,0,, 周三还有一项内容需要重点理解 \N{\fs12}Really important to understand for Wednesday
Dialogue: 0,1:09:03.51,1:09:05.31,yin,,0,0,0,, 就是我们将要用到继承 \N{\fs12}is we’re going to use inheritance
Dialogue: 0,1:09:05.44,1:09:09.24,yin,,0,0,0,, 因为你的两个 MVC 会很相似 \N{\fs12}because two of your MVCs are going to be very similar.
Dialogue: 0,1:09:09.24,1:09:10.57,yin,,0,0,0,, 它们都是卡牌游戏 \N{\fs12}They’re both going to be card games,
Dialogue: 0,1:09:10.58,1:09:11.68,yin,,0,0,0,, 但会有一点不同 \N{\fs12}but they’re going to be a little different.
Dialogue: 0,1:09:11.91,1:09:13.14,yin,,0,0,0,, 你要用继承 \N{\fs12}You’re going to want to use inheritance
Dialogue: 0,1:09:13.14,1:09:14.11,yin,,0,0,0,, 来实现二者之间的代码共享 \N{\fs12}to share a code between them.
Dialogue: 0,1:09:14.11,1:09:16.46,yin,,0,0,0,, 周三会开始讲这部分内容 \N{\fs12}So I’m going to kind of get you started on that on Wednesday.
Dialogue: 0,1:09:16.81,1:09:19.26,yin,,0,0,0,, 我会在周三发布第三个作业 \N{\fs12}And so I’ll be sending out assignment three on Wednesday.
Dialogue: 0,1:09:19.44,1:09:22.64,yin,,0,0,0,, 我们本来要在周五演示使用免费的大学开发者计划 \N{\fs12}Friday we were going to be doing getting your device working
Dialogue: 0,1:09:22.64,1:09:25.03,yin,,0,0,0,, 帮助大家在设备上运行应用 \N{\fs12}with the free university developer program;
Dialogue: 0,1:09:25.24,1:09:27.94,yin,,0,0,0,, 但是现在技术不可用 \N{\fs12}however, that’s not working technically right now.
Dialogue: 0,1:09:27.94,1:09:29.50,yin,,0,0,0,, 所以我们移到下周讲 \N{\fs12}So we’re going to put that off until next week.
Dialogue: 0,1:09:29.50,1:09:32.13,yin,,0,0,0,, 下周五 不是这周五 \N{\fs12}So next Friday — not this week’s Friday,
Dialogue: 0,1:09:32.13,1:09:34.65,yin,,0,0,0,, 下周五我们会有一个课外辅导 \N{\fs12}but next Friday — we’ll be having a section
Dialogue: 0,1:09:34.82,1:09:35.97,yin,,0,0,0,, 大家可以来参加 \N{\fs12}where you can come to the section
Dialogue: 0,1:09:35.97,1:09:39.09,yin,,0,0,0,, 我们会帮助大家在设备上运行应用 \N{\fs12}and we’ll help you get it so it’s working on your device.
Dialogue: 0,1:09:40.79,1:09:44.18,yin,,0,0,0,, 更多内容 请访问斯坦福网站 \N{\fs12}For more, please visit us at stanford.edu.