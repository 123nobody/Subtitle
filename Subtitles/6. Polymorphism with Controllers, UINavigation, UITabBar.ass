[Script Info]
; Script generated by Aegisub 3.1.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
Last Style Storage: Default
Aegisub Video Zoom Percent: 1.000000
Aegisub Scroll Position: 0
Aegisub Active Line: 0

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yin, 冬青黑体简体中文 W3,20,&H00FFFFFF,&HF0000000,&H00000000,&H32000000,0,0,0,0,100,100,0,0,1,1,0,2,5,5,5,134

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:05.04,0:00:07.01,yin,,0,0,0,, 斯坦福大学 \N{\fs12}Stanford University.
Dialogue: 0,0:00:08.51,0:00:10.63,yin,,0,0,0,, 欢迎来到 CS193P\N{\fs12}Okay. Well, welcome to CS193P.
Dialogue: 0,0:00:10.63,0:00:16.78,yin,,0,0,0,, 这是 2013 至 2014 秋季学期第六讲 \N{\fs12}This is lecture six, yes, of fall 2013-14.
Dialogue: 0,0:00:17.05,0:00:21.23,yin,,0,0,0,, 今天我们会先做一个小小的演示 \N{\fs12}So, today we are going to have a little demo at the beginning.
Dialogue: 0,0:00:21.35,0:00:22.97,yin,,0,0,0,, 我想讲一下 \N{\fs12}I want to talk to you a little bit
Dialogue: 0,0:00:22.99,0:00:25.36,yin,,0,0,0,, 控制器的多态性 \N{\fs12}about polymorphism with controllers.
Dialogue: 0,0:00:25.37,0:00:25.88,yin,,0,0,0,, 也就是说 \N{\fs12}In other words,
Dialogue: 0,0:00:25.99,0:00:30.31,yin,,0,0,0,, 在控制器中使用继承 \N{\fs12}using inheritance for — in the world of controllers,
Dialogue: 0,0:00:30.33,0:00:33.35,yin,,0,0,0,, 有些同学如果对于面向对象编程 \N{\fs12}and those of you who — for whom object-oriented programming
Dialogue: 0,0:00:33.37,0:00:35.07,yin,,0,0,0,, 还不是那么熟练 \N{\fs12}is not that facile quite yet,
Dialogue: 0,0:00:36.44,0:00:37.95,yin,,0,0,0,, 可能会认为 \N{\fs12}you might be kind of like, oh yeah,
Dialogue: 0,0:00:37.95,0:00:39.58,yin,,0,0,0,, 可以生成控制器的子类 \N{\fs12}I guess I could subclass my controller,
Dialogue: 0,0:00:39.59,0:00:42.52,yin,,0,0,0,, 实际上 你确实要生成控制器的子类 \N{\fs12}and in fact, you do want to subclass your controller,
Dialogue: 0,0:00:42.62,0:00:45.19,yin,,0,0,0,, 这很常见 \N{\fs12}and it’s quite common to subclass controllers.
Dialogue: 0,0:00:46.58,0:00:48.09,yin,,0,0,0,, 我讲过 \N{\fs12}As I said, iOS is kind of
Dialogue: 0,0:00:48.10,0:00:50.17,yin,,0,0,0,,iOS 是基于面向对象编程设计的 \N{\fs12}all designed around object-oriented programming,
Dialogue: 0,0:00:50.19,0:00:52.33,yin,,0,0,0,, 所以你要在系统中各处 \N{\fs12}so you get to apply object-oriented principles
Dialogue: 0,0:00:52.50,0:00:54.40,yin,,0,0,0,, 应用面向对象原理 \N{\fs12}everywhere in the system,
Dialogue: 0,0:00:54.41,0:00:55.88,yin,,0,0,0,, 今天我就要演示这部分内容 \N{\fs12}so I’m going to show you that today,
Dialogue: 0,0:00:56.04,0:00:57.14,yin,,0,0,0,, 能够帮助大家 \N{\fs12}and that’s to help you a little bit
Dialogue: 0,0:00:57.15,0:00:58.31,yin,,0,0,0,, 开始做作业 \N{\fs12}get you started on your homework,
Dialogue: 0,0:00:58.31,0:00:59.82,yin,,0,0,0,, 因为我要布置的作业内容 \N{\fs12}because what I’m going to ask for your homework
Dialogue: 0,0:01:00.03,0:01:04.64,yin,,0,0,0,, 是需要你在 Matchismo 中再添加一个卡牌配对游戏 \N{\fs12}is for you to add a second card matching game to your Matchismo.
Dialogue: 0,0:01:04.65,0:01:06.99,yin,,0,0,0,, 第二个游戏几乎是一样的 \N{\fs12}Now this second game is almost identical,
Dialogue: 0,0:01:06.99,0:01:08.35,yin,,0,0,0,, 游戏规则等都一样 \N{\fs12}plays by the same rules and everything,
Dialogue: 0,0:01:08.35,0:01:10.49,yin,,0,0,0,, 只是用了另外一副卡牌 \N{\fs12}it really just uses a different deck of cards.
Dialogue: 0,0:01:10.75,0:01:12.84,yin,,0,0,0,, 这是主要的不同 \N{\fs12}Okay, that’s the primary difference,
Dialogue: 0,0:01:13.43,0:01:15.44,yin,,0,0,0,, 所以显然你需要更新模型 \N{\fs12}so you’ll obviously have to update your model
Dialogue: 0,0:01:15.44,0:01:18.27,yin,,0,0,0,, 添加另外一副卡牌 \N{\fs12}to have this extra different deck of cards,
Dialogue: 0,0:01:18.61,0:01:20.50,yin,,0,0,0,, 但是游戏的逻辑 \N{\fs12}but your game playing logic
Dialogue: 0,0:01:20.51,0:01:23.89,yin,,0,0,0,, 和控制器的基础部分都是一样的 \N{\fs12}and the basic part of your controller is the same,
Dialogue: 0,0:01:24.04,0:01:24.89,yin,,0,0,0,, 但是我们并不想 \N{\fs12}but we don’t want to have
Dialogue: 0,0:01:24.89,0:01:27.19,yin,,0,0,0,, 让卡牌和控制器相连 \N{\fs12}playing card wiring into our controller,
Dialogue: 0,0:01:27.20,0:01:28.44,yin,,0,0,0,, 所以我们要用继承 \N{\fs12}so we’re going to use inheritance
Dialogue: 0,0:01:28.45,0:01:30.20,yin,,0,0,0,, 创建一副特定卡牌 \N{\fs12}to create a playing card specific one,
Dialogue: 0,0:01:30.21,0:01:33.48,yin,,0,0,0,, 再用一副通用卡牌与其他游戏共享 \N{\fs12}and then keep a generic one that we can share for the other game,
Dialogue: 0,0:01:33.49,0:01:34.84,yin,,0,0,0,, 我们会先来做这个演示 \N{\fs12}so we’ll show that at the beginning.
Dialogue: 0,0:01:35.46,0:01:37.67,yin,,0,0,0,, 然后我们会详细讲解 \N{\fs12}Then we’re going to dive into
Dialogue: 0,0:01:37.68,0:01:39.72,yin,,0,0,0,, 如何为应用添加多个 MVC\N{\fs12}how to get multiple MVCs in your application.
Dialogue: 0,0:01:39.73,0:01:42.70,yin,,0,0,0,, 换句话说 如何让你的应用实现更多的功能 \N{\fs12}In other words, how to make your application have more features
Dialogue: 0,0:01:42.72,0:01:44.56,yin,,0,0,0,, 不仅局限于一个小小的屏幕 \N{\fs12}than you can just fit on one little screen.
Dialogue: 0,0:01:44.72,0:01:46.73,yin,,0,0,0,, 显然 \N{\fs12}Okay. And the critical, obviously,
Dialogue: 0,0:01:46.74,0:01:49.38,yin,,0,0,0,, 想要构建复杂精细的应用 \N{\fs12}to building any kind of complicated or sophisticated app
Dialogue: 0,0:01:49.39,0:01:51.19,yin,,0,0,0,, 关键在于扩大应用的功能集 \N{\fs12}is to be able to expand your feature set,
Dialogue: 0,0:01:51.20,0:01:53.34,yin,,0,0,0,, 即便是在一个设备上 \N{\fs12}even though you’re talking about being on a device,
Dialogue: 0,0:01:53.34,0:01:55.36,yin,,0,0,0,, 很小的设备 屏幕很小 \N{\fs12}it’s a small device, it’s a very small screen,
Dialogue: 0,0:01:56.21,0:01:58.89,yin,,0,0,0,, 在一屏上只能放置有限个 UI 元素 \N{\fs12}that limits how much UI you can put on there at a time.
Dialogue: 0,0:02:00.52,0:02:03.56,yin,,0,0,0,, 然后 这节课结束之前 我会再演示一个示例 \N{\fs12}And then I’m going to do a demo towards the end
Dialogue: 0,0:02:03.82,0:02:06.24,yin,,0,0,0,, 我会为大家演示 \N{\fs12}where I’m just going to basically show you –
Dialogue: 0,0:02:06.24,0:02:09.03,yin,,0,0,0,, 我说过 我总会先讲讲我们要做什么 \N{\fs12}I tell you I always talk about what we’re going to do,
Dialogue: 0,0:02:09.04,0:02:10.38,yin,,0,0,0,, 然后进行演示 \N{\fs12}then I demonstrate what we’re going to do,
Dialogue: 0,0:02:10.39,0:02:11.48,yin,,0,0,0,, 然后大家在作业中实现讲过的内容 \N{\fs12}and then you do it for your homework,
Dialogue: 0,0:02:11.49,0:02:12.88,yin,,0,0,0,, 今天也是这样的 \N{\fs12}and that’s exactly going to be true today.
Dialogue: 0,0:02:12.90,0:02:16.93,yin,,0,0,0,, 我要接着演示周一的示例 Attributor\N{\fs12}So I’ll do the demo with Attributor that we worked on Monday.
Dialogue: 0,0:02:16.93,0:02:19.17,yin,,0,0,0,, 增强它的功能 让它具有多个 MVC\N{\fs12}We’ll enhance it to have multiple MVCs.
Dialogue: 0,0:02:19.98,0:02:22.64,yin,,0,0,0,, 好的 我们先来演示 \N{\fs12}Okay, so let’s do that demo first.
Dialogue: 0,0:02:24.04,0:02:25.61,yin,,0,0,0,, 打开 Matchismo\N{\fs12}So, we’re going to take the Matchismo
Dialogue: 0,0:02:25.67,0:02:28.44,yin,,0,0,0,, 第三节课最后的示例 \N{\fs12}as of last — at the end of lecture three,
Dialogue: 0,0:02:28.51,0:02:31.37,yin,,0,0,0,, 这个示例是在作业之前演示的 \N{\fs12}so this is prior to all your homework,
Dialogue: 0,0:02:31.87,0:02:33.18,yin,,0,0,0,, 如果你们还记得的话 \N{\fs12}and if you remember then,
Dialogue: 0,0:02:33.64,0:02:34.95,yin,,0,0,0,,storyboard 是这个样子的 \N{\fs12}the storyboard looks like this,
Dialogue: 0,0:02:34.95,0:02:36.72,yin,,0,0,0,, 只有 12 张卡牌和得分 \N{\fs12}we just have 12 cards and the score,
Dialogue: 0,0:02:36.72,0:02:37.89,yin,,0,0,0,, 非常简单 \N{\fs12}really, really simple.
Dialogue: 0,0:02:38.26,0:02:40.76,yin,,0,0,0,, 有一个卡牌游戏视图控制器 \N{\fs12}And we have this card game view controller.
Dialogue: 0,0:02:40.90,0:02:42.49,yin,,0,0,0,, 这是卡牌游戏视图控制器 \N{\fs12}Right. This is the card game view controller,
Dialogue: 0,0:02:42.50,0:02:43.89,yin,,0,0,0,, 也非常简单 \N{\fs12}also quite simple.
Dialogue: 0,0:02:43.89,0:02:45.78,yin,,0,0,0,, 这是上周的内容 还记得吧 \N{\fs12}You remember that from last week.
Dialogue: 0,0:02:46.36,0:02:48.58,yin,,0,0,0,, 当时我说它有一个问题 \N{\fs12}The problem with it and I mentioned this at the time,
Dialogue: 0,0:02:48.59,0:02:51.06,yin,,0,0,0,, 就是它导入了 PlayingCardDeck\N{\fs12}is that it imports PlayingCardDeck.
Dialogue: 0,0:02:51.20,0:02:51.66,yin,,0,0,0,, 换句话说 \N{\fs12}In other words,
Dialogue: 0,0:02:51.67,0:02:54.88,yin,,0,0,0,, 这个卡牌游戏控制器 \N{\fs12}this card game playing controller
Dialogue: 0,0:02:55.14,0:02:57.70,yin,,0,0,0,, 算是通用的卡牌游戏机 \N{\fs12}is pretty generic card game player,
Dialogue: 0,0:02:57.73,0:02:59.54,yin,,0,0,0,, 如果在其中增加其他卡牌 \N{\fs12}and if you put other kinds of cards in there
Dialogue: 0,0:02:59.56,0:03:00.54,yin,,0,0,0,, 可能可以正常匹配 \N{\fs12}it could probably match them,
Dialogue: 0,0:03:00.56,0:03:03.83,yin,,0,0,0,, 除了下面的这行代码 \N{\fs12}except for this one line of code down here
Dialogue: 0,0:03:04.16,0:03:06.61,yin,,0,0,0,, 这行代码要求我们导入 PlayingCardDeck\N{\fs12}that causes us to drag in PlayingCardDeck
Dialogue: 0,0:03:06.62,0:03:10.04,yin,,0,0,0,, 让这个 CardGameViewController 只适用于 PlayingCard 扑克牌 \N{\fs12}and make this CardGameViewController be playing card specific.
Dialogue: 0,0:03:10.05,0:03:12.21,yin,,0,0,0,, 我们要做的很简单 \N{\fs12}So, what we’re going to do, it’s very simple,
Dialogue: 0,0:03:12.29,0:03:16.11,yin,,0,0,0,, 我们要生成一个 CardGameViewController 的子类 \N{\fs12}we’ re going to create a subclass of this CardGameViewController
Dialogue: 0,0:03:16.23,0:03:17.75,yin,,0,0,0,, 只针对扑克牌 \N{\fs12}that’s specific to playing cards,
Dialogue: 0,0:03:17.90,0:03:19.91,yin,,0,0,0,, 然后我们会把所有扑克牌的内容 \N{\fs12}then we’ll move all the playing card specific stuff
Dialogue: 0,0:03:19.92,0:03:20.95,yin,,0,0,0,, 都放到那个子类中 \N{\fs12}into that subclass,
Dialogue: 0,0:03:21.11,0:03:23.36,yin,,0,0,0,, 让当前类整洁和通用 \N{\fs12}and we’ll keep this one nice and generic.
Dialogue: 0,0:03:23.37,0:03:25.06,yin,,0,0,0,, 这个 CardGameViewController 类 \N{\fs12}This CardGameViewController class
Dialogue: 0,0:03:25.26,0:03:29.95,yin,,0,0,0,, 会成为通用的卡牌匹配游戏的视图控制器 \N{\fs12}is going to be a generic card game matching view controller.
Dialogue: 0,0:03:30.15,0:03:31.47,yin,,0,0,0,, 大家明白我要做什么吗 \N{\fs12}Does that make sense what I’m going to do here?
Dialogue: 0,0:03:32.69,0:03:34.48,yin,,0,0,0,, 我们的实现方法是 \N{\fs12}Okay. So the way we’re going to do that
Dialogue: 0,0:03:34.64,0:03:37.51,yin,,0,0,0,, 删掉这行有冲突的代码 \N{\fs12}is we’re going to get rid of this offending line of code.
Dialogue: 0,0:03:37.57,0:03:38.95,yin,,0,0,0,, 这行代码 \N{\fs12}Okay. This is the line of code
Dialogue: 0,0:03:38.95,0:03:41.07,yin,,0,0,0,, 让这个类只针对于扑克牌 \N{\fs12}that makes this class depend on playing cards,
Dialogue: 0,0:03:41.23,0:03:43.42,yin,,0,0,0,, 我要删掉它 \N{\fs12}and I’m just going to delete it
Dialogue: 0,0:03:43.64,0:03:45.99,yin,,0,0,0,, 在 creatDeck 中返回 nil\N{\fs12}and return nil here in createDeck.
Dialogue: 0,0:03:46.43,0:03:47.75,yin,,0,0,0,, 这样就完成了 \N{\fs12}Okay, well, that’s done it.
Dialogue: 0,0:03:47.75,0:03:49.28,yin,,0,0,0,, 我们变成了通用的卡牌 \N{\fs12}Okay. We have a generic card,
Dialogue: 0,0:03:49.28,0:03:50.57,yin,,0,0,0,, 现在就可以删掉这行了 \N{\fs12}now I can get rid of that
Dialogue: 0,0:03:50.68,0:03:51.65,yin,,0,0,0,, 现在它都是通用的 \N{\fs12}and it’s all generic,
Dialogue: 0,0:03:51.65,0:03:53.83,yin,,0,0,0,, 但是显然这里是有问题的 \N{\fs12}but obviously, this is going to be a problem
Dialogue: 0,0:03:53.85,0:03:55.24,yin,,0,0,0,, 因为没有牌 deck\N{\fs12}because now there’s no deck.
Dialogue: 0,0:03:55.55,0:03:57.18,yin,,0,0,0,, 对吧 这里会返回 nil\N{\fs12}Right. This is going to return nil,
Dialogue: 0,0:03:57.18,0:03:58.87,yin,,0,0,0,, 这里会返回 nil\N{\fs12}this is going to return nil right here.
Dialogue: 0,0:03:58.97,0:04:01.29,yin,,0,0,0,, 这里实际上也会返回 nil\N{\fs12}This is actually going to return nil as well,
Dialogue: 0,0:04:01.35,0:04:03.46,yin,,0,0,0,, 因为它无法绘制任何卡牌 \N{\fs12}because it’s not going to be able to draw any cards,
Dialogue: 0,0:04:03.66,0:04:05.14,yin,,0,0,0,, 所以是有这个问题的 \N{\fs12}so this is a problem.
Dialogue: 0,0:04:05.25,0:04:08.53,yin,,0,0,0,, 通过修改 把这里改成 nil 以后 \N{\fs12}So by doing this, by putting this nil right here,
Dialogue: 0,0:04:08.63,0:04:13.40,yin,,0,0,0,, 基本上 我们是把 CardGameViewController 类抽象了 \N{\fs12}we’ve essentially made this class CardGameViewController abstract.
Dialogue: 0,0:04:13.83,0:04:16.20,yin,,0,0,0,, 希望大家熟悉面向对象编程 \N{\fs12}Okay. So, hopefully all of you know enough object-oriented programming
Dialogue: 0,0:04:16.22,0:04:17.70,yin,,0,0,0,, 知道抽象这个术语 \N{\fs12}to know the term abstract.
Dialogue: 0,0:04:17.96,0:04:22.32,yin,,0,0,0,, 抽象表示这个类不能被实例化使用 \N{\fs12}Abstract means that this class cannot be instantiated and used,
Dialogue: 0,0:04:22.43,0:04:25.15,yin,,0,0,0,, 它只能用于作为 \N{\fs12}it’s only useful as a superclass
Dialogue: 0,0:04:25.30,0:04:27.03,yin,,0,0,0,, 具体类的超类 \N{\fs12}for other classes that are concrete –
Dialogue: 0,0:04:27.09,0:04:28.19,yin,,0,0,0,, 与之相对的我们叫做具体 \N{\fs12}what we call concrete.
Dialogue: 0,0:04:28.74,0:04:32.55,yin,,0,0,0,, 所以如果我们想对它进行操作的话 \N{\fs12}Okay. So we need to make a concrete subclass of this
Dialogue: 0,0:04:32.56,0:04:34.70,yin,,0,0,0,, 需要创建一个它的具体子类 \N{\fs12}if we want to do anything with it,
Dialogue: 0,0:04:34.82,0:04:37.33,yin,,0,0,0,, 就我自己而言–\N{\fs12}and I personally when I –
Dialogue: 0,0:04:37.36,0:04:40.85,yin,,0,0,0,, 在 Objective-C 中 没有 abstract 关键词 \N{\fs12}okay, in objective-c, there’s no abstract keyword
Dialogue: 0,0:04:41.01,0:04:43.85,yin,,0,0,0,, 不能直接声明某个类是抽象类 \N{\fs12}that you can use to specify that this is an abstract class,
Dialogue: 0,0:04:43.87,0:04:46.15,yin,,0,0,0,, 你需要在头文件中进行记录 \N{\fs12}you just have to document it in your header file
Dialogue: 0,0:04:46.15,0:04:49.58,yin,,0,0,0,, 标明这个类是抽象类 不能实例化 \N{\fs12}that this class is abstract, you can’t instantiate.
Dialogue: 0,0:04:50.12,0:04:54.17,yin,,0,0,0,, 我还喜欢在其他地方也记录上 甚至在实现文件中 \N{\fs12}And I also like to document, even on my implementation,
Dialogue: 0,0:04:54.38,0:04:57.56,yin,,0,0,0,, 标明哪些方法是抽象的 \N{\fs12}any methods that basically are abstract.
Dialogue: 0,0:04:57.56,0:05:01.40,yin,,0,0,0,, 需要你对其进行重写 \N{\fs12}Any method that is required that you override this method.
Dialogue: 0,0:05:01.56,0:05:04.33,yin,,0,0,0,, 还要注意 所有抽象方法 \N{\fs12}And also any abstract method,
Dialogue: 0,0:05:04.34,0:05:06.65,yin,,0,0,0,, 都应该是公有的 \N{\fs12}you’ve got to make them public. Okay.
Dialogue: 0,0:05:06.82,0:05:10.04,yin,,0,0,0,, 否则具体子类会无法知道 \N{\fs12}Because otherwise the concrete subclasses won’t be able to know
Dialogue: 0,0:05:10.04,0:05:11.45,yin,,0,0,0,, 它们需要实现这些方法 \N{\fs12}that they’re supposed to implement them.
Dialogue: 0,0:05:11.45,0:05:12.91,yin,,0,0,0,, 它们依然可以重写这些方法 \N{\fs12}Okay. They could still override them
Dialogue: 0,0:05:12.91,0:05:15.33,yin,,0,0,0,, 如果有人偷偷告诉它们了 \N{\fs12}as someone sneakily told them about it,
Dialogue: 0,0:05:15.34,0:05:16.98,yin,,0,0,0,, 但是我们不想要偷偷摸摸的 \N{\fs12}but we don’t want any sneaking around here,
Dialogue: 0,0:05:17.13,0:05:18.81,yin,,0,0,0,, 我们想让 createDeck 变成公有的 \N{\fs12}we want createDeck to be public,
Dialogue: 0,0:05:18.81,0:05:20.61,yin,,0,0,0,, 所以我要复制 createDeck 方法 \N{\fs12}so I’m going to copy createDeck
Dialogue: 0,0:05:20.74,0:05:24.23,yin,,0,0,0,, 把它放到公有接口中 \N{\fs12}and put it in our public interface.
Dialogue: 0,0:05:24.49,0:05:27.60,yin,,0,0,0,, 这个抽象注释可以留着 \N{\fs12}I’m going to leave that thing there that says it’s abstract.
Dialogue: 0,0:05:28.06,0:05:30.91,yin,,0,0,0,, 我还要在这里添加一条类的注释 \N{\fs12}Okay. I’m also going to put a class comment here
Dialogue: 0,0:05:31.59,0:05:35.32,yin,,0,0,0,, 写上 抽象类 \N{\fs12}that says abstract class,
Dialogue: 0,0:05:36.75,0:05:42.37,yin,,0,0,0,, 必须按照下面要求实现方法 \N{\fs12}you know, must implement methods as described below,
Dialogue: 0,0:05:42.37,0:05:43.37,yin,,0,0,0,, 或者类似的说明 \N{\fs12}or something like that,
Dialogue: 0,0:05:43.37,0:05:45.14,yin,,0,0,0,, 这样有人看到这个类时 \N{\fs12}so that when people come to this class
Dialogue: 0,0:05:45.14,0:05:46.75,yin,,0,0,0,, 就会知道 这个类是抽象的 \N{\fs12}they know ooh, this class is abstract.
Dialogue: 0,0:05:46.91,0:05:47.54,yin,,0,0,0,, 转到下面 \N{\fs12}And then we go down here,
Dialogue: 0,0:05:47.54,0:05:49.99,yin,,0,0,0,, 通常情况下 我还会在这里添加注释 \N{\fs12}and then a lot of times I’ll put right here,
Dialogue: 0,0:05:50.91,0:05:52.78,yin,,0,0,0,, 比如 protected 受保护的 \N{\fs12}maybe the word protected
Dialogue: 0,0:05:53.49,0:05:57.87,yin,,0,0,0,, 或者 for subclasses 用于超类 之类的 \N{\fs12}or for subclasses, something like that
Dialogue: 0,0:05:58.07,0:06:01.10,yin,,0,0,0,, 以注释来区分两种方法 \N{\fs12}to kind of make it clear the difference between methods
Dialogue: 0,0:06:01.10,0:06:02.54,yin,,0,0,0,, 一种是仅适用于子类的方法 \N{\fs12}that are just for subclassers,
Dialogue: 0,0:06:02.54,0:06:05.92,yin,,0,0,0,, 需要重写之类的 \N{\fs12}that they’re going to override or something like that,
Dialogue: 0,0:06:06.02,0:06:07.73,yin,,0,0,0,, 另一种是公有方法 \N{\fs12}versus public methods
Dialogue: 0,0:06:07.74,0:06:09.42,yin,,0,0,0,, 可能要放到上面这里 \N{\fs12}which would probably go up here,
Dialogue: 0,0:06:09.58,0:06:13.18,yin,,0,0,0,, 是使用这个卡牌游戏控制器的对象要调用的方法 \N{\fs12}which someone using this card game controller would call.
Dialogue: 0,0:06:14.01,0:06:17.42,yin,,0,0,0,, 当然了 这里有一个错误 因为 Deck 没有声明 \N{\fs12}Okay. So of course, we have an error here because of deck,
Dialogue: 0,0:06:17.63,0:06:19.64,yin,,0,0,0,, 所以我们需要导入 Deck\N{\fs12}so we have to import deck,
Dialogue: 0,0:06:19.71,0:06:22.93,yin,,0,0,0,, 但是这样比导入 PlayingCardDeck 要好多了 \N{\fs12}but that’s a lot better than importing PlayingCardDeck,
Dialogue: 0,0:06:23.12,0:06:26.17,yin,,0,0,0,, 因为目前我们并没有绑定某种卡牌 \N{\fs12}because we are not now tied to any kind of deck,
Dialogue: 0,0:06:26.18,0:06:28.97,yin,,0,0,0,, 任何卡牌都可以 \N{\fs12}any deck of cards will do. Okay.
Dialogue: 0,0:06:29.99,0:06:30.90,yin,,0,0,0,, 明白吗 \N{\fs12}That make sense?
Dialogue: 0,0:06:31.06,0:06:32.92,yin,,0,0,0,, 现在 我们有了这个抽象类 \N{\fs12}So now that we have this abstract class
Dialogue: 0,0:06:32.92,0:06:34.92,yin,,0,0,0,, 它有一个这样的方法 需要实现 \N{\fs12}that has this method that has to be implemented,
Dialogue: 0,0:06:35.04,0:06:38.25,yin,,0,0,0,, 我们创建一个它的具体子类 \N{\fs12}let’s make that concrete subclass of this
Dialogue: 0,0:06:38.36,0:06:40.02,yin,,0,0,0,, 实现 createDeck 方法 \N{\fs12}that implements createDeck.
Dialogue: 0,0:06:40.25,0:06:43.85,yin,,0,0,0,, 和新建类的方法一样 \N{\fs12}Okay. And we just do that in the same way we create any new class.
Dialogue: 0,0:06:43.99,0:06:46.02,yin,,0,0,0,, 选择文件菜单下 新建菜单中的文件 \N{\fs12}Right. File menu, new file
Dialogue: 0,0:06:46.76,0:06:49.50,yin,,0,0,0,, 选择 Objective-C 类 \N{\fs12}and then we’re going to say we want an objective-c class.
Dialogue: 0,0:06:49.99,0:06:51.74,yin,,0,0,0,, 可以在这里指定超类 \N{\fs12}We can specify the superclass here
Dialogue: 0,0:06:51.74,0:06:54.74,yin,,0,0,0,, 输入 CardGameViewController\N{\fs12}is gonna be CardGameViewController,
Dialogue: 0,0:06:55.00,0:06:58.38,yin,,0,0,0,, 我要叫这个类 PlayingCardGameViewController\N{\fs12}and I’m going to call this class PlayingCardGameViewController,
Dialogue: 0,0:06:58.88,0:07:00.55,yin,,0,0,0,, 因为这就是它的功能 \N{\fs12}okay, because that’s what it’s going to do.
Dialogue: 0,0:07:00.66,0:07:02.32,yin,,0,0,0,, 它是一个 CardGameViewController\N{\fs12}It’s going to be a CardGameViewController,
Dialogue: 0,0:07:02.32,0:07:04.56,yin,,0,0,0,, 但是它是具体的 \N{\fs12}but it’s going to have the concrete thing
Dialogue: 0,0:07:04.61,0:07:06.95,yin,,0,0,0,, 它在游戏中使用的是扑克牌 \N{\fs12}that it is going to play with playing cards.
Dialogue: 0,0:07:07.31,0:07:08.29,yin,,0,0,0,, 点击下一步 \N{\fs12}So, I hit next.
Dialogue: 0,0:07:08.39,0:07:12.40,yin,,0,0,0,, 和其他视图控制器放在一个目录下 \N{\fs12}I’m going to put it in the same place as my other view controller.
Dialogue: 0,0:07:12.51,0:07:13.10,yin,,0,0,0,, 出来了 \N{\fs12}Here it is.
Dialogue: 0,0:07:13.10,0:07:16.85,yin,,0,0,0,, 可以看到系统自动添加了一些视图控制器生命周期的代码 \N{\fs12}You can see a couple of view controller lifecycle stubs in here.
Dialogue: 0,0:07:16.96,0:07:18.00,yin,,0,0,0,, 我不需要这些 \N{\fs12}I don’t need those.
Dialogue: 0,0:07:18.10,0:07:20.70,yin,,0,0,0,, 这个方法实际上是指定初始化方法 \N{\fs12}This is actually the designated initializer.
Dialogue: 0,0:07:20.70,0:07:22.25,yin,,0,0,0,, 我也不确定为什么要把它放在这 \N{\fs12}I’m not sure why it throws that in there,
Dialogue: 0,0:07:22.26,0:07:24.73,yin,,0,0,0,, 因为现在我们都从 storyboard 开始执行 \N{\fs12}because nowadays we pull these things out of storyboard.
Dialogue: 0,0:07:24.88,0:07:28.69,yin,,0,0,0,, 我们会用 awakeFromNib viewDidLoad 更好 \N{\fs12}We would use awakeFromNib, or even better, viewDidLoad. Okay.
Dialogue: 0,0:07:28.83,0:07:30.12,yin,,0,0,0,, 所以我们也不需要这个方法 \N{\fs12}So we don’t want that either.
Dialogue: 0,0:07:30.55,0:07:33.86,yin,,0,0,0,, 现在这个具体子类看起来就很整洁了 \N{\fs12}So we have this nice concrete subclass,
Dialogue: 0,0:07:33.88,0:07:37.30,yin,,0,0,0,, 它只需要实现 createDeck\N{\fs12}and all this thing needs to do is implement createDeck.
Dialogue: 0,0:07:38.21,0:07:38.62,yin,,0,0,0,, 对吧 \N{\fs12}Okay.
Dialogue: 0,0:07:39.07,0:07:40.91,yin,,0,0,0,, 我来实现一下 这里返回–\N{\fs12}So I’m going to do that. I’m going to return –
Dialogue: 0,0:07:41.11,0:07:45.59,yin,,0,0,0,, 这里确实需要导入 PlayingCardDeck\N{\fs12}Okay. Here I do need to import PlayingCardDeck,
Dialogue: 0,0:07:45.84,0:07:46.73,yin,,0,0,0,, 但在这里导入没问题 \N{\fs12}but that’s okay here,
Dialogue: 0,0:07:46.73,0:07:49.13,yin,,0,0,0,, 因为这个类就是用于扑克牌的 \N{\fs12}because that this class is for playing cards.
Dialogue: 0,0:07:49.13,0:07:50.18,yin,,0,0,0,, 它就是做这个的 \N{\fs12}That’s what it’s for,
Dialogue: 0,0:07:50.28,0:07:51.44,yin,,0,0,0,, 所以这样做没问题 \N{\fs12}so I have no problem doing that.
Dialogue: 0,0:07:52.21,0:07:53.06,yin,,0,0,0,, 我们再回到下面这里 \N{\fs12}So let’s go down here –
Dialogue: 0,0:07:53.45,0:07:57.52,yin,,0,0,0,,[PlayingCardDeck alloc] init\N{\fs12}PlayingCardDeck alloc init. Okay.
Dialogue: 0,0:07:57.95,0:08:00.45,yin,,0,0,0,, 好了 我创建了一个具体子类 \N{\fs12}Bingo, I’ve created a concrete subclass.
Dialogue: 0,0:08:00.66,0:08:01.72,yin,,0,0,0,, 可以用了 \N{\fs12}It’s ready to go.
Dialogue: 0,0:08:02.65,0:08:06.85,yin,,0,0,0,, 如果我回到 storyboard 运行一下 \N{\fs12}If I were to go back to my storyboard here and run –
Dialogue: 0,0:08:06.86,0:08:07.99,yin,,0,0,0,, 我们来运行一下 \N{\fs12}let’s go ahead and run this.
Dialogue: 0,0:08:08.13,0:08:09.84,yin,,0,0,0,, 我们何不在设备上运行一下呢 \N{\fs12}We’ll do this on the device, why not.
Dialogue: 0,0:08:10.53,0:08:11.28,yin,,0,0,0,, 看看会发生什么 \N{\fs12}See what happens.
Dialogue: 0,0:08:11.79,0:08:13.80,yin,,0,0,0,, 有谁可以预测一下运行时会发生什么吗 \N{\fs12}Can anyone predict what’s going to happen if I run this?
Dialogue: 0,0:08:14.46,0:08:15.14,yin,,0,0,0,, 会正常运行吗 \N{\fs12}Is it going to work?
Dialogue: 0,0:08:17.30,0:08:18.00,yin,,0,0,0,, 没人猜一下吗 \N{\fs12}No guesses?
Dialogue: 0,0:08:18.68,0:08:19.78,yin,,0,0,0,, 这里是不能正常运行的 \N{\fs12}It’s not going to work here,
Dialogue: 0,0:08:19.80,0:08:21.22,yin,,0,0,0,, 我看到有人摇头了 \N{\fs12}I see heads shaking.
Dialogue: 0,0:08:21.22,0:08:22.35,yin,,0,0,0,, 应用不能正常运行 \N{\fs12}No, it’s not going to work.
Dialogue: 0,0:08:22.54,0:08:24.92,yin,,0,0,0,, 实际上 它不能正常运行 \N{\fs12}And in fact, it isn’t going to work,
Dialogue: 0,0:08:26.22,0:08:27.42,yin,,0,0,0,, 我们看看它会怎样 \N{\fs12}and we’ll see what it does.
Dialogue: 0,0:08:27.42,0:08:29.44,yin,,0,0,0,, 我试着翻开卡牌 \N{\fs12}Okay, so I’ m trying to flip cards
Dialogue: 0,0:08:29.45,0:08:32.81,yin,,0,0,0,, 现在什么牌都没有 对吧 \N{\fs12}and all these cards there’s no cards here. Okay.
Dialogue: 0,0:08:33.50,0:08:35.40,yin,,0,0,0,, 我刚才创建了具体子类呀 \N{\fs12}I just made that concrete subclass,
Dialogue: 0,0:08:35.40,0:08:37.17,yin,,0,0,0,, 怎么回事 为什么不能用呢 \N{\fs12}what’s going on? How come it’s not working?
Dialogue: 0,0:08:37.85,0:08:40.13,yin,,0,0,0,,storyboard 还和抽象控制器连在一起 \N{\fs12}The storyboard’s still tied to the abstract controller.
Dialogue: 0,0:08:40.15,0:08:40.87,yin,,0,0,0,, 没错 \N{\fs12}That’s right.
Dialogue: 0,0:08:40.88,0:08:43.54,yin,,0,0,0,, 原因就是 这里的这个 storyboard\N{\fs12}So the answer is my storyboard right here,
Dialogue: 0,0:08:43.62,0:08:47.87,yin,,0,0,0,, 如果看这里 这个控制器还是抽象的那个 \N{\fs12}if I look at this, this controller is still the abstract one.
Dialogue: 0,0:08:48.06,0:08:50.16,yin,,0,0,0,, 所以它当然不能正常运行 \N{\fs12}So, it’s actually properly not working.
Dialogue: 0,0:08:50.49,0:08:52.88,yin,,0,0,0,, 因为它是抽象的 \N{\fs12}Okay. Because it is abstract,
Dialogue: 0,0:08:53.07,0:08:55.65,yin,,0,0,0,, 没有与之关联的卡牌 \N{\fs12}it has no cards that are associated with it
Dialogue: 0,0:08:55.77,0:08:56.59,yin,,0,0,0,, 没有特定 deck\N{\fs12}because it has not deck,
Dialogue: 0,0:08:56.84,0:08:57.42,yin,,0,0,0,, 就不能运行 \N{\fs12}so it doesn’t work.
Dialogue: 0,0:08:57.42,0:08:59.83,yin,,0,0,0,, 问题是 我们如何告诉 storyboard\N{\fs12}So the question is how do we tell our storyboard
Dialogue: 0,0:08:59.83,0:09:03.37,yin,,0,0,0,, 我们想让这个控制器使用具体子类 \N{\fs12}that we want this controller to use the concrete subclass
Dialogue: 0,0:09:03.44,0:09:05.56,yin,,0,0,0,, 而不是抽象超类呢 \N{\fs12}instead of using that abstract superclass?
Dialogue: 0,0:09:05.74,0:09:08.34,yin,,0,0,0,, 答案很简单 我们只要选中它 \N{\fs12}The answer is very simple, we just select it.
Dialogue: 0,0:09:08.34,0:09:11.30,yin,,0,0,0,, 我们可以点击下面的图标进行选中 \N{\fs12}We can select a controller either by selecting here,
Dialogue: 0,0:09:11.51,0:09:14.37,yin,,0,0,0,, 直接点击这里时要注意 \N{\fs12}be a little careful when you click here, it didn’t–
Dialogue: 0,0:09:14.43,0:09:16.98,yin,,0,0,0,, 这样实际上选择的是顶级视图 \N{\fs12}this actually selected the top level view.
Dialogue: 0,0:09:17.15,0:09:19.86,yin,,0,0,0,, 正确选中时 边缘会有蓝色边框 \N{\fs12}You can see, we need the blue border around the edge.
Dialogue: 0,0:09:20.39,0:09:22.57,yin,,0,0,0,, 实际上 在选择元素时 \N{\fs12}There’s actually a little trick that you can do
Dialogue: 0,0:09:23.21,0:09:25.59,yin,,0,0,0,, 可以使用一个小技巧 \N{\fs12}when you’re selecting things.
Dialogue: 0,0:09:26.09,0:09:28.03,yin,,0,0,0,, 让我想想是哪个键 \N{\fs12}Let’s see if I can remember which one it is.
Dialogue: 0,0:09:29.27,0:09:32.78,yin,,0,0,0,, 按住 command 单击 是什么呢 出来了 \N{\fs12}Go to command, click. Oh, what is that? There is it.
Dialogue: 0,0:09:33.71,0:09:37.18,yin,,0,0,0,, 按住 Shift 单击吗 不是 是按住 control 和 shift 键单击 \N{\fs12}Shift click? No. Okay. Control, shift, click.
Dialogue: 0,0:09:37.58,0:09:40.03,yin,,0,0,0,, 当你在某个地方按住 control 和 shift 键单击时 \N{\fs12}When you go to control, shift, click on something,
Dialogue: 0,0:09:40.14,0:09:43.03,yin,,0,0,0,, 会显示出鼠标指针下的所有元素 \N{\fs12}it will actually show you all the things that are under your mouse.
Dialogue: 0,0:09:43.32,0:09:45.42,yin,,0,0,0,, 所以如果我在这里按住 control 和 shift 键单击时 \N{\fs12}So actually if I control, shift, click here –
Dialogue: 0,0:09:45.94,0:09:47.37,yin,,0,0,0,, 对吗 对的 \N{\fs12}is that what it is? Yeah.
Dialogue: 0,0:09:47.99,0:09:49.35,yin,,0,0,0,, 会显示出按钮 \N{\fs12}Then it’s showing me the button,
Dialogue: 0,0:09:49.35,0:09:50.14,yin,,0,0,0,, 它就在鼠标指针下面 \N{\fs12}which is under right under my mouse,
Dialogue: 0,0:09:50.15,0:09:53.27,yin,,0,0,0,, 然后是视图 然后是后面的控制器 \N{\fs12}then the view, and then the controller behind it,
Dialogue: 0,0:09:53.62,0:09:55.20,yin,,0,0,0,, 现在我可以直接选择 \N{\fs12}and so now I can pick which one of these
Dialogue: 0,0:09:55.21,0:09:58.06,yin,,0,0,0,, 我想要选择的元素 \N{\fs12}I actually meant to select like that. Okay.
Dialogue: 0,0:09:58.26,0:10:00.98,yin,,0,0,0,, 不是 control 和 shift 就是 command 和 shift\N{\fs12}So I think it’s control, shift, or something command shift.
Dialogue: 0,0:10:00.98,0:10:02.70,yin,,0,0,0,, 我老是记不住 记性不好 \N{\fs12}I can never remember it. Loss of memory.
Dialogue: 0,0:10:03.24,0:10:04.79,yin,,0,0,0,, 我的键盘和现在用的这个也不太一样 \N{\fs12}And my keyboard’s slightly different in this one.
Dialogue: 0,0:10:05.01,0:10:06.57,yin,,0,0,0,, 不管怎样 现在我选中了它 \N{\fs12}So anyway, so now I’ve got it selected,
Dialogue: 0,0:10:06.57,0:10:08.06,yin,,0,0,0,, 出现了蓝色边框 \N{\fs12}it’s got this blue thing around it,
Dialogue: 0,0:10:08.06,0:10:09.40,yin,,0,0,0,, 现在我要检查它 \N{\fs12}so now I’m going to inspect it.
Dialogue: 0,0:10:09.49,0:10:10.95,yin,,0,0,0,, 打开检查器 \N{\fs12}Okay. I’m going to bring up the inspector,
Dialogue: 0,0:10:11.08,0:10:13.22,yin,,0,0,0,, 但是我不需要属性检查器 \N{\fs12}but I don’t want the attributes inspector.
Dialogue: 0,0:10:13.62,0:10:17.17,yin,,0,0,0,, 我要检查的是它的标识符 \N{\fs12}Okay. I’m going to inspect the identity of this thing,
Dialogue: 0,0:10:17.17,0:10:18.98,yin,,0,0,0,, 转到标识符检查器 \N{\fs12}so I go to the identity inspector.
Dialogue: 0,0:10:18.98,0:10:20.11,yin,,0,0,0,, 就是这个 \N{\fs12}That’s this one right here.
Dialogue: 0,0:10:20.43,0:10:22.46,yin,,0,0,0,, 在标识符检查器中 \N{\fs12}Okay. And if you look at the identity inspector,
Dialogue: 0,0:10:22.46,0:10:23.74,yin,,0,0,0,, 如果选中了一个控制器 \N{\fs12}if you have a controller selected,
Dialogue: 0,0:10:23.74,0:10:27.63,yin,,0,0,0,, 最上面一项就是这个控制器所属的类 \N{\fs12}the very top thing is what class is this controller.
Dialogue: 0,0:10:27.65,0:10:29.77,yin,,0,0,0,, 可以看到现在是 CardGameViewController\N{\fs12}You can see that right now it’s CardGameViewController,
Dialogue: 0,0:10:29.77,0:10:31.09,yin,,0,0,0,, 抽象超类 \N{\fs12}the abstract superclass.
Dialogue: 0,0:10:31.32,0:10:32.65,yin,,0,0,0,, 如果我点击这里 \N{\fs12}So if I click here,
Dialogue: 0,0:10:32.65,0:10:34.55,yin,,0,0,0,, 我可以直接输入 PlayingCardViewController\N{\fs12}I can either just type PlayingCardViewController,
Dialogue: 0,0:10:34.55,0:10:36.45,yin,,0,0,0,, 或者从列表中进行选择 \N{\fs12}or it could be in the list right here.
Dialogue: 0,0:10:36.45,0:10:37.61,yin,,0,0,0,, 滚动一下 \N{\fs12}So if I scroll around
Dialogue: 0,0:10:37.62,0:10:39.45,yin,,0,0,0,, 可以看到 iOS 中的其他类 \N{\fs12}you can see some other classes that are in iOS,
Dialogue: 0,0:10:39.64,0:10:41.59,yin,,0,0,0,,PlayingCardViewController 在这里 \N{\fs12}and here’s our PlayingCard one right there.
Dialogue: 0,0:10:41.93,0:10:43.25,yin,,0,0,0,, 如果我选择它 \N{\fs12}If I select that one,
Dialogue: 0,0:10:43.40,0:10:44.53,yin,,0,0,0,, 现在再运行时 \N{\fs12}now when we run,
Dialogue: 0,0:10:46.32,0:10:49.09,yin,,0,0,0,, 它就会使用那个具体子类 \N{\fs12}it’ll be using that concrete subclass,
Dialogue: 0,0:10:49.12,0:10:51.64,yin,,0,0,0,, 在游戏中发出扑克牌 \N{\fs12}which will be dealing out playing cards in our game,
Dialogue: 0,0:10:51.89,0:10:53.85,yin,,0,0,0,, 所以应用就又可以正常运行了 \N{\fs12}so we’re back to having this work.
Dialogue: 0,0:10:54.81,0:10:55.22,yin,,0,0,0,, 对吧 \N{\fs12}Okay.
Dialogue: 0,0:10:55.86,0:10:57.14,yin,,0,0,0,, 大家都明白刚才的操作吗 \N{\fs12}Everybody understand what we did there?
Dialogue: 0,0:10:57.72,0:11:01.07,yin,,0,0,0,, 你需要设置控制器的类 \N{\fs12}Now you’ll have to do this — setting the class of controllers,
Dialogue: 0,0:11:01.16,0:11:02.92,yin,,0,0,0,, 如果应用中有多个视图控制器 \N{\fs12}and this is especially common to have to do
Dialogue: 0,0:11:02.92,0:11:04.58,yin,,0,0,0,, 这个操作是特别常见的 \N{\fs12}when you have multiple view controllers,
Dialogue: 0,0:11:04.64,0:11:06.24,yin,,0,0,0,, 当你拖出一个新的视图控制器时 \N{\fs12}because when you drag out a new view controller,
Dialogue: 0,0:11:06.28,0:11:07.86,yin,,0,0,0,, 需要选择它的类 \N{\fs12}you’ll need to say what class it is.
Dialogue: 0,0:11:08.17,0:11:10.29,yin,,0,0,0,, 否则你就不能将输出口和操作 \N{\fs12}Okay. Otherwise, you won’t be able to hook up your outlets and actions
Dialogue: 0,0:11:10.32,0:11:12.88,yin,,0,0,0,, 连接到你的 UIViewController 的子类上了 \N{\fs12}to your subclass of UIViewController.
Dialogue: 0,0:11:13.69,0:11:16.10,yin,,0,0,0,, 好的 这会帮你们开个头 \N{\fs12}All right. So, that’ll get you started on that,
Dialogue: 0,0:11:16.10,0:11:18.98,yin,,0,0,0,, 你们需要再添加一个游戏 \N{\fs12}and again, you’re going to have another game.
Dialogue: 0,0:11:19.84,0:11:20.92,yin,,0,0,0,, 两个游戏 \N{\fs12}Both of them are going –
Dialogue: 0,0:11:20.93,0:11:23.34,yin,,0,0,0,, 你的应用中的两个游戏应该都可以运行 \N{\fs12}your app is going to be able to play either game.
Dialogue: 0,0:11:24.33,0:11:26.31,yin,,0,0,0,, 好的 我要演示的就是这些 \N{\fs12}All right. That’s it. That’s all I wanted to show there.
Dialogue: 0,0:11:27.03,0:11:30.45,yin,,0,0,0,, 我们回来开始讲多个 MVC 的内容 \N{\fs12}So let’s go back and start talking about multiple MVCs now.
Dialogue: 0,0:11:31.01,0:11:33.27,yin,,0,0,0,, 我们为什么需要多个 MVC 呢 \N{\fs12}Why do we want multiple MVCs?
Dialogue: 0,0:11:33.34,0:11:34.51,yin,,0,0,0,, 当然是因为我们可以–\N{\fs12}Obviously, so we can have more –
Dialogue: 0,0:11:34.51,0:11:35.23,yin,,0,0,0,, 抱歉 有问题吗 \N{\fs12}Oh, sorry, question.
Dialogue: 0,0:11:35.52,0:11:36.79,yin,,0,0,0,,- 很短的问题 - 说吧 \N{\fs12}- Just really quickly. – Yeah.
Dialogue: 0,0:11:36.81,0:11:38.98,yin,,0,0,0,, 假如说 如果你 \N{\fs12}So if you — if you, say,
Dialogue: 0,0:11:39.19,0:11:42.42,yin,,0,0,0,, 将一个方法与 storyboard 中的某个元素绑定在一起 \N{\fs12}bind a method to something in the storyboard
Dialogue: 0,0:11:42.73,0:11:45.28,yin,,0,0,0,, 和抽象类绑定在一起了 然后你重写了它 \N{\fs12}and you bind it in the abstract class and then you override it,
Dialogue: 0,0:11:45.28,0:11:48.74,yin,,0,0,0,, 是否会自动继承相同的监听者呢 \N{\fs12}does it automatically inherit the same listener steps?
Dialogue: 0,0:11:48.75,0:11:49.60,yin,,0,0,0,, 这是一个好问题 \N{\fs12}Yeah. So that’s a good question.
Dialogue: 0,0:11:49.60,0:11:52.16,yin,,0,0,0,, 问题是 如果我有一个输出口或者操作 \N{\fs12}The question is, what if I have an outlet or an action
Dialogue: 0,0:11:52.32,0:11:56.31,yin,,0,0,0,, 将它连接到了抽象超类中的 \N{\fs12}that I’ve connected up to some outlet or action
Dialogue: 0,0:11:56.32,0:11:57.96,yin,,0,0,0,, 某个输出口或操作上 \N{\fs12}that’s in your abstract superclass,
Dialogue: 0,0:11:58.17,0:12:00.56,yin,,0,0,0,, 然后我将它的类改为了某个具体子类 \N{\fs12}and then I set the class to be a concrete subclass,
Dialogue: 0,0:12:00.71,0:12:02.58,yin,,0,0,0,, 输出口和操作还可以正常使用吗 \N{\fs12}will all my outlets and actions still work?
Dialogue: 0,0:12:02.95,0:12:04.37,yin,,0,0,0,, 是的 它们还会正常工作的 \N{\fs12}Yes, in fact they will still work.
Dialogue: 0,0:12:04.47,0:12:06.55,yin,,0,0,0,, 完全没问题 实际上 \N{\fs12}They’ll work great, and in fact, if you –
Dialogue: 0,0:12:06.56,0:12:09.69,yin,,0,0,0,, 如果你有抽象超类的代码 像这里一样 \N{\fs12}if you have the code for the abstract superclass like we do here,
Dialogue: 0,0:12:09.84,0:12:12.26,yin,,0,0,0,, 实际上 你可以打开 storyboard\N{\fs12}you can actually have your storyboard up,
Dialogue: 0,0:12:12.38,0:12:15.28,yin,,0,0,0,, 在辅助编辑器中打开抽象超类 \N{\fs12}and in the assistant editor, open up the abstract superclass
Dialogue: 0,0:12:15.28,0:12:17.23,yin,,0,0,0,, 然后连接输出口和操作 \N{\fs12}and you can wire up outlets and actions,
Dialogue: 0,0:12:17.69,0:12:19.05,yin,,0,0,0,, 甚至私有的也可以 \N{\fs12}okay, even private ones.
Dialogue: 0,0:12:19.59,0:12:22.55,yin,,0,0,0,, 抽象超类中的输出口和操作不一定要是私有的 \N{\fs12}Something doesn’t have to be private in the abstract superclass,
Dialogue: 0,0:12:22.55,0:12:25.32,yin,,0,0,0,, 都可以进行连接 \N{\fs12}the outlets and actions, to wire it up. Okay.
Dialogue: 0,0:12:25.77,0:12:29.80,yin,,0,0,0,, 如果辅助编辑器的右侧是自动模式 \N{\fs12}Now, if you have the right side of your assistant editor set on automatic,
Dialogue: 0,0:12:29.80,0:12:31.52,yin,,0,0,0,, 你需要切换到手动 \N{\fs12}you’ll have to switch it to manual
Dialogue: 0,0:12:31.52,0:12:33.48,yin,,0,0,0,, 才能选择抽象超类 \N{\fs12}to go and pick the abstract superclass,
Dialogue: 0,0:12:33.59,0:12:35.81,yin,,0,0,0,, 因为自动模式下显示的是具体子类 \N{\fs12}because automatic’s going to want to show you the concrete one,
Dialogue: 0,0:12:36.24,0:12:37.74,yin,,0,0,0,, 但是和我们这里的示例一样 \N{\fs12}but like in our example here,
Dialogue: 0,0:12:37.74,0:12:42.92,yin,,0,0,0,, 我们不能将卡牌与 PlayingCardViewController 相连接 \N{\fs12}we can’t wire those cards up to PlayingCardViewController,
Dialogue: 0,0:12:42.93,0:12:45.10,yin,,0,0,0,, 因为它没有卡牌按钮对应的输出口 \N{\fs12}because it doesn’t have that outlet for card buttons.
Dialogue: 0,0:12:45.39,0:12:47.18,yin,,0,0,0,, 那是在它的抽象超类中的 \N{\fs12}That’s in its abstract superclass.
Dialogue: 0,0:12:47.69,0:12:49.93,yin,,0,0,0,, 明白吗 所以我们只要打开抽象超类 \N{\fs12}All right. So we just open up the abstract superclass,
Dialogue: 0,0:12:49.95,0:12:50.81,yin,,0,0,0,, 然后进行连接 \N{\fs12}and we can wire it up.
Dialogue: 0,0:12:50.82,0:12:53.54,yin,,0,0,0,, 换句话说 Xcode 很智能 知道继承关系 \N{\fs12}In other words, Xcode is smart about knowing the inheritance,
Dialogue: 0,0:12:53.56,0:12:57.82,yin,,0,0,0,, 允许你与抽象超类 \N{\fs12}to let you wire up to abstract superclasses,
Dialogue: 0,0:12:57.83,0:12:59.61,yin,,0,0,0,, 甚至具体超类相连接 \N{\fs12}or even concrete superclasses,
Dialogue: 0,0:13:00.39,0:13:01.43,yin,,0,0,0,, 即便它们是私有的 \N{\fs12}and even if they’re private.
Dialogue: 0,0:13:01.73,0:13:05.07,yin,,0,0,0,, 输出口和操作是被当作私有内容的 \N{\fs12}So outlet and action connecting is kind of considered a private thing.
Dialogue: 0,0:13:05.48,0:13:06.40,yin,,0,0,0,, 是私有的 \N{\fs12}All right. It’s kind of a private thing.
Dialogue: 0,0:13:06.40,0:13:09.00,yin,,0,0,0,, 不需要都设成公有的 也可以进行连接 \N{\fs12}You don’t have to make all those public to be able to connect those.
Dialogue: 0,0:13:09.19,0:13:12.25,yin,,0,0,0,, 但是调用方法是公有的 \N{\fs12}But calling methods is something that’s public.
Dialogue: 0,0:13:12.28,0:13:14.40,yin,,0,0,0,, 如果你想调用超类中的方法 \N{\fs12}Okay. If you want to call a method in the superclass,
Dialogue: 0,0:13:14.64,0:13:15.99,yin,,0,0,0,, 需要设置为公有的 \N{\fs12}that needs to be made public,
Dialogue: 0,0:13:16.21,0:13:17.53,yin,,0,0,0,, 因为没有保护 \N{\fs12}because there’s no protected.
Dialogue: 0,0:13:18.17,0:13:20.18,yin,,0,0,0,, 明白吗 好问题 \N{\fs12}Okay. Good question.
Dialogue: 0,0:13:21.22,0:13:22.61,yin,,0,0,0,, 好了 接着讲多 MVC\N{\fs12}All right so, multiple MVCs.
Dialogue: 0,0:13:22.74,0:13:24.73,yin,,0,0,0,, 我们为什么需要多个 MVC 呢 \N{\fs12}Why we want multiple MVCs?
Dialogue: 0,0:13:24.73,0:13:26.56,yin,,0,0,0,, 显然是为了向应用中添加更多内容 \N{\fs12}Obviously, we can put more stuff in our app.
Dialogue: 0,0:13:26.83,0:13:29.12,yin,,0,0,0,, 怎么做呢 其实非常简单 \N{\fs12}How do we do it? It’s very simple actually,
Dialogue: 0,0:13:29.18,0:13:31.77,yin,,0,0,0,, 只要转到对象面板 \N{\fs12}you just go to the object palette –
Dialogue: 0,0:13:31.77,0:13:34.14,yin,,0,0,0,, 就是拖出按钮和滑动条的地方 \N{\fs12}the same place you drag a button or a slider out of,
Dialogue: 0,0:13:34.22,0:13:35.95,yin,,0,0,0,, 从那里拖出一个视图控制器 \N{\fs12}and you drag out a view controller,
Dialogue: 0,0:13:36.19,0:13:38.46,yin,,0,0,0,, 这样拖出时 它是一个通用的视图控制器 \N{\fs12}and when you drag it out, it’ll be a generic view controller.
Dialogue: 0,0:13:38.46,0:13:40.81,yin,,0,0,0,, 也就是说它的类是 UIViewController\N{\fs12}In other words, its class will be UIViewController
Dialogue: 0,0:13:40.83,0:13:42.10,yin,,0,0,0,, 显然它会是空白的 \N{\fs12}and it’ll be blank obviously.
Dialogue: 0,0:13:42.37,0:13:45.42,yin,,0,0,0,, 然后创建 UIViewController 的子类 \N{\fs12}Then you go create your subclass of UIViewController.
Dialogue: 0,0:13:45.57,0:13:47.63,yin,,0,0,0,, 在我刚才做过的示例中 \N{\fs12}Okay. In this case, in the demo I just did
Dialogue: 0,0:13:47.64,0:13:49.76,yin,,0,0,0,, 我创建了一个已有类的子类 \N{\fs12}I created a subclass of a class I already had,
Dialogue: 0,0:13:49.76,0:13:52.48,yin,,0,0,0,, 但是你可以直接创建 UIViewController 的子类 \N{\fs12}but you can create this direct subclass of UIViewController,
Dialogue: 0,0:13:52.68,0:13:55.10,yin,,0,0,0,, 然后用属性检查器查看它的属性 \N{\fs12}and then you go and inspect it with the attributes inspector
Dialogue: 0,0:13:55.10,0:13:56.06,yin,,0,0,0,, 设置它的类 \N{\fs12}and you set its class.
Dialogue: 0,0:13:56.23,0:13:58.82,yin,,0,0,0,, 就是这样拖入一个新的 MVC\N{\fs12}That’s it. That’s how you drag a new MVC in
Dialogue: 0,0:13:59.20,0:14:00.74,yin,,0,0,0,, 添加到应用中 \N{\fs12}and create one for your app.
Dialogue: 0,0:14:00.74,0:14:02.43,yin,,0,0,0,, 添加 MVC 很容易 \N{\fs12}So it’s easy to add MVCs.
Dialogue: 0,0:14:02.43,0:14:04.06,yin,,0,0,0,, 添加了 MVC 之后 \N{\fs12}Now, once you have an MVC added,
Dialogue: 0,0:14:04.07,0:14:06.72,yin,,0,0,0,, 就可以向它的视图中添加元素 \N{\fs12}you can put things in its view,
Dialogue: 0,0:14:06.73,0:14:08.61,yin,,0,0,0,, 按钮和标签等等 \N{\fs12}buttons and labels and stuff,
Dialogue: 0,0:14:08.62,0:14:11.45,yin,,0,0,0,, 还可以连接输出口和操作等 \N{\fs12}and you can hook up outlets and actions and all that stuff
Dialogue: 0,0:14:11.74,0:14:14.81,yin,,0,0,0,, 创建第二个 MVC 甚至第三四五个 \N{\fs12}to create a second MVC, or a third, a fourth, a fifth,
Dialogue: 0,0:14:14.82,0:14:17.75,yin,,0,0,0,, 大型应用可能会有 100 个 MVC\N{\fs12}or a large app might have 100 MVCs in it,
Dialogue: 0,0:14:17.76,0:14:19.21,yin,,0,0,0,, 甚至更多 \N{\fs12}okay, or more.
Dialogue: 0,0:14:19.78,0:14:21.36,yin,,0,0,0,, 添加了这些 MVC 之后 \N{\fs12}So, you got all these MVCs,
Dialogue: 0,0:14:21.36,0:14:23.18,yin,,0,0,0,, 如何展示给用户呢 \N{\fs12}how do you present them to the use?
Dialogue: 0,0:14:23.32,0:14:25.27,yin,,0,0,0,, 有很多方法可以实现 \N{\fs12}Okay. Well, there’s a number of ways to do it,
Dialogue: 0,0:14:25.46,0:14:27.32,yin,,0,0,0,, 但是最基本的方法是 \N{\fs12}but the fundamental answer is
Dialogue: 0,0:14:27.39,0:14:32.18,yin,,0,0,0,, 使用一个视图为其他 MVC 的控制器 \N{\fs12}you use a controller whose view is other MVCs.
Dialogue: 0,0:14:33.89,0:14:35.35,yin,,0,0,0,, 理解一下 \N{\fs12}Let that sink in a little. Okay.
Dialogue: 0,0:14:35.66,0:14:40.11,yin,,0,0,0,, 和所有 MVC 一样 我的这个 MVC 也有一个控制器 \N{\fs12}So I can have a MVC that has a controller like all MVCs,
Dialogue: 0,0:14:40.32,0:14:44.26,yin,,0,0,0,, 而这个控制器的视图是其他 MVC\N{\fs12}the view of that controller is other MVCs.
Dialogue: 0,0:14:44.57,0:14:46.67,yin,,0,0,0,, 从概念上讲 \N{\fs12}This is the kind of conceptual way
Dialogue: 0,0:14:46.77,0:14:48.30,yin,,0,0,0,, 这就是实现多个 MVC 的方法 \N{\fs12}we’re going to put multiple MVCs.
Dialogue: 0,0:14:48.64,0:14:52.49,yin,,0,0,0,, 今天我要讲两个 iOS 的类 \N{\fs12}And I’m gonna talk about two classes provided by iOS today,
Dialogue: 0,0:14:52.49,0:14:53.55,yin,,0,0,0,, 两个控制器 \N{\fs12}two controllers,
Dialogue: 0,0:14:53.70,0:14:55.61,yin,,0,0,0,, 它们的视图是其他 MVC\N{\fs12}whose view is other MVCs.
Dialogue: 0,0:14:55.61,0:14:58.19,yin,,0,0,0,, 一个是 UITabBarController 大家都熟悉 \N{\fs12}One is UITabBarController, you’re used to that.
Dialogue: 0,0:14:58.19,0:14:59.37,yin,,0,0,0,, 这种控制器底部有一排选项卡 \N{\fs12}It’s got tabs along the bottom.
Dialogue: 0,0:14:59.37,0:15:00.59,yin,,0,0,0,, 点击不同的选项卡 \N{\fs12}Every time you click on a tab,
Dialogue: 0,0:15:00.60,0:15:02.45,yin,,0,0,0,, 就可以看到不同 MVC 的视图 \N{\fs12}you can see a different MVC’s view,
Dialogue: 0,0:15:03.34,0:15:05.12,yin,,0,0,0,, 再简单不过了 \N{\fs12}okay, couldn’t be simpler.
Dialogue: 0,0:15:05.14,0:15:08.99,yin,,0,0,0,, 这是在屏幕上显示多个 MVC 的最简单的方法 \N{\fs12}That’s the simplest, you know, way to get multiple MVCs on screen.
Dialogue: 0,0:15:09.22,0:15:10.39,yin,,0,0,0,, 然后我会用更多的时间 \N{\fs12}And then I’m going to spend more time
Dialogue: 0,0:15:10.39,0:15:12.89,yin,,0,0,0,, 讲解 UINavigationController\N{\fs12}talking about UINavigationController,
Dialogue: 0,0:15:13.11,0:15:16.22,yin,,0,0,0,, 这种是在屏幕上显示一个视图 \N{\fs12}which is the thing where you have something on screen
Dialogue: 0,0:15:16.22,0:15:18.36,yin,,0,0,0,, 然后你点击了屏幕上的某个按钮之类的 \N{\fs12}and you click on a button or something that’s on screen,
Dialogue: 0,0:15:18.36,0:15:20.12,yin,,0,0,0,, 一个新视图就会滑进来 \N{\fs12}and a new view slides in.
Dialogue: 0,0:15:20.90,0:15:23.80,yin,,0,0,0,, 然后再点击一次 滑进另一个视图 \N{\fs12}Okay. And then you maybe click again and another one slides in,
Dialogue: 0,0:15:23.80,0:15:25.87,yin,,0,0,0,, 还会出现返回按钮 可以返回 \N{\fs12}and then there’s a back button and you can back up,
Dialogue: 0,0:15:26.09,0:15:27.15,yin,,0,0,0,, 所以可以继续和返回 \N{\fs12}so go down and back up.
Dialogue: 0,0:15:27.16,0:15:29.71,yin,,0,0,0,, 可以深入查看信息或者返回 \N{\fs12}So when you want to drill down information or back up.
Dialogue: 0,0:15:30.16,0:15:31.91,yin,,0,0,0,, 这种稍微复杂些 \N{\fs12}Okay. So that one’s a little more complicated,
Dialogue: 0,0:15:32.27,0:15:34.66,yin,,0,0,0,, 今天大部分时间都会讲解这部分内容 \N{\fs12}and that’s what I’m going to spend most of the time on today.
Dialogue: 0,0:15:34.88,0:15:38.14,yin,,0,0,0,, 还有其他方法可以显示多个 MVC\N{\fs12}Now there’s other ways to put multiple MVCs on screen –
Dialogue: 0,0:15:38.14,0:15:40.70,yin,,0,0,0,,iPad 的弹出窗口和模态展示 \N{\fs12}popovers on iPad and modal presentations.
Dialogue: 0,0:15:40.71,0:15:42.11,yin,,0,0,0,, 今天我不会讲 \N{\fs12}Though I’m not going to talk about those today,
Dialogue: 0,0:15:42.13,0:15:45.13,yin,,0,0,0,, 但是后面几周会讲到的 \N{\fs12}we will cover them all in the next few weeks. Okay.
Dialogue: 0,0:15:45.15,0:15:48.35,yin,,0,0,0,, 我想把内容分解成容易理解的小块 \N{\fs12}I’m just trying to meter this out to you in bite-size chunks.
Dialogue: 0,0:15:49.13,0:15:51.54,yin,,0,0,0,, 好的 那我们来讲讲 UINavigationController\N{\fs12}All right. So, let’s talk about UINavigationController.
Dialogue: 0,0:15:51.73,0:15:55.18,yin,,0,0,0,, 使用 UINavigationController 的最好的示例 \N{\fs12}So, a great app to look at that uses of UINavigationController
Dialogue: 0,0:15:55.18,0:15:56.32,yin,,0,0,0,, 就是日历应用 \N{\fs12}is the calendar app.
Dialogue: 0,0:15:56.32,0:15:58.24,yin,,0,0,0,, 这是显示顶层视图的日历应用 \N{\fs12}So, here’s the calendar app at its top level.
Dialogue: 0,0:15:58.25,0:16:01.09,yin,,0,0,0,, 基本上显示了一整年的日历 \N{\fs12}You can see it’s basically a year — an entire year.
Dialogue: 0,0:16:01.34,0:16:04.33,yin,,0,0,0,, 今天是选中的状态 用红色圆形标出了 \N{\fs12}Today’s date is selected, the little red in there.
Dialogue: 0,0:16:04.33,0:16:06.52,yin,,0,0,0,, 大一点的灰色圆形代表手指 \N{\fs12}That big gray dot is supposed to be the finger.
Dialogue: 0,0:16:06.54,0:16:08.60,yin,,0,0,0,, 在后面的幻灯片中可以看到 \N{\fs12}You’re going to see it touching various spaces
Dialogue: 0,0:16:08.63,0:16:10.36,yin,,0,0,0,, 它点击着不同的地方 \N{\fs12}as we go through these slides.
Dialogue: 0,0:16:11.37,0:16:13.26,yin,,0,0,0,,UINavigationController 适用于 \N{\fs12}And we use the UINavigationController
Dialogue: 0,0:16:13.32,0:16:16.11,yin,,0,0,0,, 屏幕上有很多内容 \N{\fs12}when we have a bunch of stuff on screen
Dialogue: 0,0:16:16.11,0:16:18.40,yin,,0,0,0,, 而我们想向用户展示更多内容 \N{\fs12}and we want to show the user more,
Dialogue: 0,0:16:18.59,0:16:20.51,yin,,0,0,0,, 更多详细的信息 \N{\fs12}more detailed, more information.
Dialogue: 0,0:16:20.73,0:16:22.74,yin,,0,0,0,, 通常用于这种情况 \N{\fs12}Okay. Generally, what this navigation –
Dialogue: 0,0:16:22.75,0:16:24.60,yin,,0,0,0,, 这很常见 \N{\fs12}Now, it’s very common to want to do that.
Dialogue: 0,0:16:24.77,0:16:26.21,yin,,0,0,0,, 当前显示的是高层级的信息 \N{\fs12}You’re kind of showing high level information
Dialogue: 0,0:16:26.21,0:16:28.00,yin,,0,0,0,, 而你想要展示更多详细的内容 \N{\fs12}and you want to show more detail, more detail.
Dialogue: 0,0:16:29.06,0:16:30.31,yin,,0,0,0,, 在日历应用中 \N{\fs12}So, the calendar app,
Dialogue: 0,0:16:30.42,0:16:33.42,yin,,0,0,0,, 如果手指移到某个日期上 然后点击 \N{\fs12}if you go over to the day with your finger and you touch,
Dialogue: 0,0:16:33.85,0:16:35.98,yin,,0,0,0,, 一个月视图就会滑进来 \N{\fs12}then a month view slides in.
Dialogue: 0,0:16:36.68,0:16:41.24,yin,,0,0,0,, 所有这些都发生在一个 MVC 中 \N{\fs12}Okay. So all of that happened in a single MVC,
Dialogue: 0,0:16:41.32,0:16:45.11,yin,,0,0,0,, 也就是导航控制器对应的 MVC\N{\fs12}which was a UINavigationController’s MVC.
Dialogue: 0,0:16:45.21,0:16:47.63,yin,,0,0,0,, 紫色或者浅蓝色圈出的这部分 \N{\fs12}Okay. So the purple or the light blue,
Dialogue: 0,0:16:47.92,0:16:49.65,yin,,0,0,0,, 无论大家看起来是什么颜色 \N{\fs12}whatever color that looks like to you on the screen,
Dialogue: 0,0:16:50.12,0:16:54.62,yin,,0,0,0,, 它是 UINavigationController 的视图 \N{\fs12}that is the view of a UINavigationController.
Dialogue: 0,0:16:54.98,0:16:56.41,yin,,0,0,0,, 基础 MVC 明白吗 \N{\fs12}Based MVC. Okay.
Dialogue: 0,0:16:57.14,0:17:01.38,yin,,0,0,0,, 里面有另一个 MVC 的视图 \N{\fs12}Now, inside there, there’s another MVC’s view,
Dialogue: 0,0:17:01.38,0:17:02.47,yin,,0,0,0,, 月视图 \N{\fs12}the month view.
Dialogue: 0,0:17:02.78,0:17:05.46,yin,,0,0,0,, 所以黄色区域是另一个 MVC 的视图 \N{\fs12}So the little yellow area is another MVC’s view.
Dialogue: 0,0:17:05.87,0:17:09.18,yin,,0,0,0,, 在此之前 里面是一个年 MVC 的视图 \N{\fs12}Okay. And what used to be in there was a year MVC’s view,
Dialogue: 0,0:17:09.19,0:17:11.43,yin,,0,0,0,, 又是另外一个 MVC\N{\fs12}which was yet another MVC.
Dialogue: 0,0:17:11.45,0:17:13.00,yin,,0,0,0,, 可以看到它们是如何嵌入的 \N{\fs12}Okay. So you can see how it’s imbedded.
Dialogue: 0,0:17:13.47,0:17:14.95,yin,,0,0,0,, 而且不只是嵌入 \N{\fs12}And not only is it embedded,
Dialogue: 0,0:17:15.06,0:17:20.11,yin,,0,0,0,, 导航控制器还控制着自己的 UI\N{\fs12}but the navigation controller is kind of controlling its own UI,
Dialogue: 0,0:17:20.16,0:17:22.35,yin,,0,0,0,, 根据嵌入内容的不同而变化 \N{\fs12}based on what happens to be embedded at the time.
Dialogue: 0,0:17:22.97,0:17:25.24,yin,,0,0,0,, 我可以在某一天上点击 \N{\fs12}And so, I could click on the day
Dialogue: 0,0:17:25.35,0:17:28.57,yin,,0,0,0,, 日视图就会进来 这里就换成了日 MVC\N{\fs12}and a day view comes in, so this is a day MVC.
Dialogue: 0,0:17:28.58,0:17:30.94,yin,,0,0,0,, 所以这里我们看到了四个 MVC\N{\fs12}So this is four MVCs we’ve seen here.
Dialogue: 0,0:17:31.11,0:17:34.14,yin,,0,0,0,, 最外层的导航控制器是一个 \N{\fs12}The surrounding navigation controller one,
Dialogue: 0,0:17:34.15,0:17:38.42,yin,,0,0,0,, 显示出来的年月日 \N{\fs12}and now three separate year, month and day MVCs
Dialogue: 0,0:17:38.43,0:17:39.56,yin,,0,0,0,, 分别是三个 MVC\N{\fs12}that are being shown in here.
Dialogue: 0,0:17:40.03,0:17:40.48,yin,,0,0,0,, 明白吗 \N{\fs12}Okay.
Dialogue: 0,0:17:41.39,0:17:43.15,yin,,0,0,0,, 我们来看一下 \N{\fs12}So let’s take a look –
Dialogue: 0,0:17:43.15,0:17:44.57,yin,,0,0,0,, 当然了 我们还可以继续点击 \N{\fs12}Of course, we can click again
Dialogue: 0,0:17:44.57,0:17:46.30,yin,,0,0,0,, 打开事件详情页面 \N{\fs12}and now get the details for an event,
Dialogue: 0,0:17:46.31,0:17:48.16,yin,,0,0,0,, 所以这里我们看到了五个 MVC\N{\fs12}so there’s five MVCs that we’ve seen.
Dialogue: 0,0:17:49.14,0:17:52.11,yin,,0,0,0,, 我们来看一下这个导航控制器的组成部分 \N{\fs12}So let’s look at the components of this UINavigationController.
Dialogue: 0,0:17:52.29,0:17:54.48,yin,,0,0,0,, 顶部有浅灰色的一栏 \N{\fs12}So at the top, there’s this light gray bar
Dialogue: 0,0:17:54.59,0:17:56.57,yin,,0,0,0,, 不管下面显示的是哪个 MVC\N{\fs12}that stayed on the screen, you notice,
Dialogue: 0,0:17:56.58,0:17:59.10,yin,,0,0,0,, 它始终都显示在屏幕上 \N{\fs12}for all of the MVCs as they come swiping in.
Dialogue: 0,0:17:59.27,0:18:02.41,yin,,0,0,0,, 但是不同 MVC 出现时 它会略微变化 \N{\fs12}Okay. But it changed slightly as they all swiped in,
Dialogue: 0,0:18:02.70,0:18:04.97,yin,,0,0,0,, 我们来看看它的组成部分 \N{\fs12}so let’s look at all the parts.
Dialogue: 0,0:18:05.60,0:18:08.34,yin,,0,0,0,, 这个导航栏包括三个主要部分 \N{\fs12}There’s three major parts there of that navigation bar.
Dialogue: 0,0:18:09.39,0:18:12.01,yin,,0,0,0,, 首先是标题 Event Details 事件详情 \N{\fs12}First is the title, okay, Event Details.
Dialogue: 0,0:18:12.01,0:18:13.61,yin,,0,0,0,, 你会发现显示月和日时 \N{\fs12}You’ll notice that the month and the day –
Dialogue: 0,0:18:13.61,0:18:15.07,yin,,0,0,0,, 是没有标题的 \N{\fs12}actually, I don’t think they even had titles,
Dialogue: 0,0:18:15.08,0:18:16.26,yin,,0,0,0,, 这是合理的 \N{\fs12}which is perfectly legal.
Dialogue: 0,0:18:17.06,0:18:20.23,yin,,0,0,0,, 这里会显示事件详情 \N{\fs12}This says Event Detail because the navigation controller
Dialogue: 0,0:18:20.26,0:18:23.11,yin,,0,0,0,, 是因为导航控制器询问嵌入的控制器 \N{\fs12}is basically asking the embedded controller，
Dialogue: 0,0:18:23.11,0:18:25.97,yin,,0,0,0,, 也就是日历事件 MVC\N{\fs12}the calendar event MVC，
Dialogue: 0,0:18:25.98,0:18:27.47,yin,,0,0,0,, 你的标题是什么 \N{\fs12}what’s your title,
Dialogue: 0,0:18:27.78,0:18:30.17,yin,,0,0,0,, 得到它的标题之后 将它显示在顶部 \N{\fs12}and then it gets that and it puts that at the top.
Dialogue: 0,0:18:30.17,0:18:32.75,yin,,0,0,0,, 也可以在 storyboard 中设置这个标题 \N{\fs12}You can also set that title in your storyboard if you want to.
Dialogue: 0,0:18:33.45,0:18:33.84,yin,,0,0,0,, 明白吧 \N{\fs12}Okay.
Dialogue: 0,0:18:34.21,0:18:35.43,yin,,0,0,0,, 这个标题 \N{\fs12}But it’s associated –
Dialogue: 0,0:18:35.60,0:18:38.51,yin,,0,0,0,, 和内部显示的内容有关 \N{\fs12}that title’s associated with what’s inside，
Dialogue: 0,0:18:38.51,0:18:40.28,yin,,0,0,0,, 根据导航控制器中嵌入 MVC 的不同 \N{\fs12}what’s embedded in the navigation controller
Dialogue: 0,0:18:40.29,0:18:42.20,yin,,0,0,0,, 在滑进不同视图时改变标题 \N{\fs12}and it changes as things slide in.
Dialogue: 0,0:18:42.86,0:18:43.31,yin,,0,0,0,, 明白吧 \N{\fs12}Okay.
Dialogue: 0,0:18:44.36,0:18:49.41,yin,,0,0,0,, 右边这里还有按钮 \N{\fs12}Also, we have the buttons on the right here.
Dialogue: 0,0:18:49.41,0:18:51.21,yin,,0,0,0,, 现在只有一个 Edit 编辑按钮 \N{\fs12}So, there’s only one button here — Edit,
Dialogue: 0,0:18:51.21,0:18:52.92,yin,,0,0,0,, 但是如果大家还记得 \N{\fs12}but if you remember back to the month and day,
Dialogue: 0,0:18:52.92,0:18:53.74,yin,,0,0,0,, 在月和日页面中有两个按钮 \N{\fs12}there were actually two buttons,
Dialogue: 0,0:18:53.74,0:18:57.63,yin,,0,0,0,, 可能有一个加号按钮 用来增加事件 \N{\fs12}like a little plus sign to add an event maybe,
Dialogue: 0,0:18:57.64,0:19:01.06,yin,,0,0,0,, 有一个放大镜用来搜索等等 \N{\fs12}and a little magnifying glass to search, things like that.
Dialogue: 0,0:19:01.08,0:19:02.54,yin,,0,0,0,, 所以这里其实可以放多个按钮 \N{\fs12}So you can actually have multiple buttons here,
Dialogue: 0,0:19:02.54,0:19:03.76,yin,,0,0,0,, 这也就是为什么它是一个 NSArray\N{\fs12}that’s why it’s an NSArray.
Dialogue: 0,0:19:03.76,0:19:06.63,yin,,0,0,0,, 这些按钮并不是 UIButton\N{\fs12}Now, these buttons are not UIButtons,
Dialogue: 0,0:19:06.63,0:19:08.46,yin,,0,0,0,, 它们是 UIBarButtonItem\N{\fs12}they’re UIBarButtonItems.
Dialogue: 0,0:19:08.91,0:19:10.55,yin,,0,0,0,, 类似于轻量级的按钮 \N{\fs12}Okay. Kind of lightweight buttons.
Dialogue: 0,0:19:10.72,0:19:15.38,yin,,0,0,0,, 导航控制器如果想要确定显示哪个按钮 \N{\fs12}And the navigation controller figures out which one to put there
Dialogue: 0,0:19:15.48,0:19:20.19,yin,,0,0,0,, 需要向嵌入的视图请求一个对象 叫做 navigationItem\N{\fs12}by asking the embedded view for an object called a navigationItem,
Dialogue: 0,0:19:20.20,0:19:23.79,yin,,0,0,0,, 所有 UIViewController 都有这个 navigationItem 属性 \N{\fs12}so all UIViewControllers have this property navigationItem,
Dialogue: 0,0:19:23.91,0:19:26.01,yin,,0,0,0,, 返回的对象中 \N{\fs12}and it returns this object that has some stuff in there
Dialogue: 0,0:19:26.02,0:19:27.91,yin,,0,0,0,, 包括 rightBarButtonItems 等 \N{\fs12}like rightBarButtonItems,
Dialogue: 0,0:19:28.05,0:19:29.92,yin,,0,0,0,,rightBarButtonItem 是个数组 \N{\fs12}which is an array. Okay.
Dialogue: 0,0:19:29.97,0:19:32.39,yin,,0,0,0,, 大家明白这个属性表示法吗 \N{\fs12}Everybody understand the property notation I’m using there?
Dialogue: 0,0:19:32.39,0:19:34.35,yin,,0,0,0,,navigationItem.rightBarButtonItems\N{\fs12}navigationItem dot rightBarButtonItems.
Dialogue: 0,0:19:34.80,0:19:36.60,yin,,0,0,0,, 这是从嵌入的视图中得到的 \N{\fs12}I’m getting that from the embedded view,
Dialogue: 0,0:19:37.02,0:19:38.93,yin,,0,0,0,, 日视图 月视图等等 \N{\fs12}you know, the day view, or the month view or whatever.
Dialogue: 0,0:19:38.93,0:19:40.79,yin,,0,0,0,, 根据它们决定上面出现的按钮 \N{\fs12}That’s what’s determining the buttons that are up there.
Dialogue: 0,0:19:41.70,0:19:43.73,yin,,0,0,0,, 左边的返回按钮 \N{\fs12}This back button over here on the left,
Dialogue: 0,0:19:43.73,0:19:44.96,yin,,0,0,0,, 如果我点击它 \N{\fs12}if I click that button,
Dialogue: 0,0:19:44.96,0:19:47.37,yin,,0,0,0,, 就会返回到上一个页面 \N{\fs12}it’s going to go back to the last thing that was there,
Dialogue: 0,0:19:47.40,0:19:50.15,yin,,0,0,0,, 在这个示例中 会回到日视图 \N{\fs12}which in this case was the day view. All right.
Dialogue: 0,0:19:50.37,0:19:53.88,yin,,0,0,0,, 这是由 UINavigationController 自动实现的 \N{\fs12}And that’s automatically done by UINavigationController,
Dialogue: 0,0:19:53.93,0:19:56.81,yin,,0,0,0,, 而按钮上显示的单词 \N{\fs12}and the word it’s going to use there is,
Dialogue: 0,0:19:56.90,0:19:57.86,yin,,0,0,0,, 如果放得下的话 \N{\fs12}if it’ll fit,
Dialogue: 0,0:19:57.91,0:20:00.82,yin,,0,0,0,, 就是上一个 MVC 的标题 \N{\fs12}the title of the previous MVC.
Dialogue: 0,0:20:00.99,0:20:04.11,yin,,0,0,0,, 这里是 Day 可以放得下 \N{\fs12}So this case is day, works, it fits.
Dialogue: 0,0:20:04.12,0:20:05.37,yin,,0,0,0,, 也可以进行设置 \N{\fs12}It can also be set,
Dialogue: 0,0:20:05.54,0:20:07.16,yin,,0,0,0,, 因为我并不知道日 MVC\N{\fs12}because I don’t know that the day MVC
Dialogue: 0,0:20:07.17,0:20:08.81,yin,,0,0,0,, 真的有一个标题 Day\N{\fs12}actually had a title that said day,
Dialogue: 0,0:20:08.81,0:20:10.08,yin,,0,0,0,, 也许有 但我不知道 \N{\fs12}might have, but I don’t think so,
Dialogue: 0,0:20:10.08,0:20:11.04,yin,,0,0,0,, 所以这里也可以设置 \N{\fs12}so it can be set.
Dialogue: 0,0:20:11.59,0:20:14.28,yin,,0,0,0,, 如果放不下的话 就会直接显示 Back 返回 \N{\fs12}Also if it doesn’t fit, it’ll just say the word back.
Dialogue: 0,0:20:15.04,0:20:16.52,yin,,0,0,0,, 有时也会遇到这种情况 \N{\fs12}Okay. So you’ll see that sometimes.
Dialogue: 0,0:20:16.53,0:20:19.69,yin,,0,0,0,, 但是用户知道左上角是用来返回的 \N{\fs12}But the user knows that upper left hand corner is how they go back,
Dialogue: 0,0:20:20.06,0:20:21.54,yin,,0,0,0,, 他们进入下面的层级后 可以返回 \N{\fs12}so they drill down, they can go back.
Dialogue: 0,0:20:21.54,0:20:23.46,yin,,0,0,0,, 如果我点击那个返回按钮 \N{\fs12}And if I click on that back button,
Dialogue: 0,0:20:24.61,0:20:26.23,yin,,0,0,0,, 显然我会返回到日视图 \N{\fs12}obviously, I’m going to go back to the day.
Dialogue: 0,0:20:26.26,0:20:27.43,yin,,0,0,0,, 如果我再点击一下 \N{\fs12}If I click again,
Dialogue: 0,0:20:27.65,0:20:28.92,yin,,0,0,0,, 就会返回到月视图 \N{\fs12}I’m going back to the month.
Dialogue: 0,0:20:30.28,0:20:32.10,yin,,0,0,0,, 好的 这就是返回按钮 \N{\fs12}All right. So that’s the back button.
Dialogue: 0,0:20:32.36,0:20:33.41,yin,,0,0,0,, 而在底部 \N{\fs12}Now down at the bottom,
Dialogue: 0,0:20:33.41,0:20:35.00,yin,,0,0,0,, 也有一小条灰色栏 \N{\fs12}you see there’s a little light gray bar there.
Dialogue: 0,0:20:35.00,0:20:36.03,yin,,0,0,0,, 它并不是总显示在那里的 \N{\fs12}That’s not always there.
Dialogue: 0,0:20:36.03,0:20:39.39,yin,,0,0,0,, 日历事件 MVC 中就没有这一栏 \N{\fs12}That wasn’t there on the calendar event MVC, by the way.
Dialogue: 0,0:20:40.31,0:20:43.01,yin,,0,0,0,, 这只是一些 UIBarButtonItems\N{\fs12}This is just a bunch of UIBarButtonItems
Dialogue: 0,0:20:43.01,0:20:45.73,yin,,0,0,0,, 只有在嵌入的 MVC 视图需要时 \N{\fs12}that again, the navigation controller only displays
Dialogue: 0,0:20:45.75,0:20:49.70,yin,,0,0,0,, 导航控制器才会显示这一栏 \N{\fs12}if the embedded MVC’s view says that it wants them.
Dialogue: 0,0:20:50.13,0:20:53.18,yin,,0,0,0,, 对应着另外一个属性 叫做 toolbarItems\N{\fs12}Okay. And there’s another property for that called toolbarItems,
Dialogue: 0,0:20:53.96,0:20:57.46,yin,,0,0,0,, 导航控制器调用嵌入视图控制器的 \N{\fs12}so you call — the navigation controller calls toolbarItems
Dialogue: 0,0:20:57.73,0:21:01.12,yin,,0,0,0,,toolbarItems 属性 \N{\fs12}on the embedded view controller,
Dialogue: 0,0:21:01.19,0:21:03.91,yin,,0,0,0,, 会得到一个 UIBarButtonItem 的 NSArray\N{\fs12}and it returns an NSArray of UIBarButtonItems
Dialogue: 0,0:21:03.92,0:21:05.09,yin,,0,0,0,, 然后将它们显示在底部 \N{\fs12}and it puts them in the bottom.
Dialogue: 0,0:21:05.36,0:21:08.21,yin,,0,0,0,, 如果嵌入的视图控制器 \N{\fs12}And if the embedded view controller
Dialogue: 0,0:21:08.22,0:21:09.82,yin,,0,0,0,, 不需要在底部显示栏按钮 \N{\fs12}doesn’t want any bar buttons at the bottom,
Dialogue: 0,0:21:09.83,0:21:12.29,yin,,0,0,0,, 导航控制器就不会显示灰色这栏 \N{\fs12}then it just animates that gray thing away
Dialogue: 0,0:21:12.48,0:21:13.58,yin,,0,0,0,, 如果转到需要显示底部栏按钮的视图控制器 \N{\fs12}and then animates it back,
Dialogue: 0,0:21:13.58,0:21:15.55,yin,,0,0,0,, 会再显示出这一栏 \N{\fs12}if you navigate it back to one that does.
Dialogue: 0,0:21:15.55,0:21:17.15,yin,,0,0,0,, 大家都明白它的组成部分了吗 \N{\fs12}So everyone understand the components
Dialogue: 0,0:21:18.11,0:21:19.42,yin,,0,0,0,,UINavigationController 的组成部分 \N{\fs12}of UINavigationController?
Dialogue: 0,0:21:20.06,0:21:22.50,yin,,0,0,0,, 现在我们讲讲它是如何工作的 \N{\fs12}Okay. So now let’s talk about how this thing works.
Dialogue: 0,0:21:22.50,0:21:24.28,yin,,0,0,0,, 我们知道它的组成部分 \N{\fs12}We know the parts of it.
Dialogue: 0,0:21:25.84,0:21:30.53,yin,,0,0,0,, 我从 MVC 的角度讲一下 \N{\fs12}I’m going to do this kind of in a MVC like view of this.
Dialogue: 0,0:21:30.73,0:21:33.16,yin,,0,0,0,, 这里我有一个 MVC\N{\fs12}So, here I have an MVC. Right.
Dialogue: 0,0:21:33.16,0:21:35.86,yin,,0,0,0,, 和第一节课用到的是一样的 记得吧 \N{\fs12}You recognize this from the very first lecture. Right.
Dialogue: 0,0:21:36.15,0:21:41.62,yin,,0,0,0,, 假设我有很多功能 屏幕上放不下 \N{\fs12}And let’s say I have more features than I can fit onscreen.
Dialogue: 0,0:21:41.85,0:21:44.92,yin,,0,0,0,, 需要在屏幕上显示更多的视图和按钮等等 \N{\fs12}So got extra views and buttons and stuff I want to put on screen,
Dialogue: 0,0:21:44.92,0:21:45.73,yin,,0,0,0,, 但就是放不下 \N{\fs12}but they just won’t fit.
Dialogue: 0,0:21:46.18,0:21:47.16,yin,,0,0,0,, 我该怎么做呢 \N{\fs12}Okay. So what do I do?
Dialogue: 0,0:21:47.18,0:21:50.58,yin,,0,0,0,, 像我刚才说过的 我们创建第二个 MVC\N{\fs12}Well, like I said, we create a second MVC.
Dialogue: 0,0:21:50.86,0:21:52.79,yin,,0,0,0,, 这里有很重要的一点需要理解 \N{\fs12}Now, what’s really important to understand here
Dialogue: 0,0:21:52.79,0:21:56.13,yin,,0,0,0,, 就是 MVC 需要各自独立 \N{\fs12}is that MVCs need to be independent.
Dialogue: 0,0:21:56.87,0:22:01.12,yin,,0,0,0,, 所以第二个 MVC 需要封装一些功能 \N{\fs12}Okay. So this second MVC has to encapsulate some amount of functionality
Dialogue: 0,0:22:01.20,0:22:03.72,yin,,0,0,0,, 需要能够创建好 \N{\fs12}and it has to be able to be set up,
Dialogue: 0,0:22:04.34,0:22:06.41,yin,,0,0,0,, 准备出现在屏幕上 \N{\fs12}prepared to be onscreen,
Dialogue: 0,0:22:06.41,0:22:07.79,yin,,0,0,0,, 然后能够独自运行 \N{\fs12}and then it has to be able to run by itself.
Dialogue: 0,0:22:08.49,0:22:09.48,yin,,0,0,0,, 为什么呢 \N{\fs12}Okay. Why is that?
Dialogue: 0,0:22:09.61,0:22:11.63,yin,,0,0,0,, 因为这个 MVC\N{\fs12}That’s because this MVC
Dialogue: 0,0:22:11.63,0:22:14.62,yin,,0,0,0,, 是要作为另一个 MVC 的视图 \N{\fs12}is gonna serve as the view of another MVC.
Dialogue: 0,0:22:14.63,0:22:17.17,yin,,0,0,0,, 还记得我们在讲 MVC 时讲过 \N{\fs12}And remember from the MVC discussion,
Dialogue: 0,0:22:17.21,0:22:20.49,yin,,0,0,0,, 视图并不能向控制器发送消息 \N{\fs12}that the views can’t really talk back to their controllers.
Dialogue: 0,0:22:20.71,0:22:22.32,yin,,0,0,0,, 控制器可以向视图发送消息 \N{\fs12}The controller can talk to the view.
Dialogue: 0,0:22:22.51,0:22:23.99,yin,,0,0,0,, 视图想要向控制器发回消息只有一种方法 \N{\fs12}The only way the view can talk back
Dialogue: 0,0:22:24.02,0:22:26.07,yin,,0,0,0,, 就是通过不可视结构化通信 \N{\fs12}is by this blind structured communication
Dialogue: 0,0:22:26.10,0:22:28.12,yin,,0,0,0,, 比如目标操作等等 \N{\fs12}like target action and things like that.
Dialogue: 0,0:22:28.12,0:22:30.82,yin,,0,0,0,, 有一种不可视结构化通信方法 \N{\fs12}And there is blind structure communication –
Dialogue: 0,0:22:30.83,0:22:32.59,yin,,0,0,0,, 是我们讲过的委托 \N{\fs12}delegation, basically, we talked about,
Dialogue: 0,0:22:32.74,0:22:36.00,yin,,0,0,0,, 可以实现作为视图的 MVC 向控制器发送消息 \N{\fs12}for an MVC — part of a view to talk back,
Dialogue: 0,0:22:36.15,0:22:37.39,yin,,0,0,0,, 但是这种方法就复杂多了 \N{\fs12}but it’s much more complicated,
Dialogue: 0,0:22:37.39,0:22:38.87,yin,,0,0,0,, 通常情况下我们尽量不用它 \N{\fs12}and usually we try to avoid it.
Dialogue: 0,0:22:39.08,0:22:42.43,yin,,0,0,0,, 我们真正想要的是设置好这个 MVC 让它独自运行 \N{\fs12}We really want to set this MVC up and have it live on its own.
Dialogue: 0,0:22:43.09,0:22:45.53,yin,,0,0,0,, 这在尝试和设计时非常重要 \N{\fs12}Okay. It’s really important to try and design,
Dialogue: 0,0:22:45.63,0:22:48.14,yin,,0,0,0,, 是面向对象编程的一部分 \N{\fs12}it’s really just part of object-oriented programming
Dialogue: 0,0:22:48.14,0:22:50.01,yin,,0,0,0,, 进行封装 \N{\fs12}to encapsulate things.
Dialogue: 0,0:22:50.08,0:22:51.82,yin,,0,0,0,, 这个 MVC 希望被封装 \N{\fs12}So this MVC wants to be encapsulated.
Dialogue: 0,0:22:51.82,0:22:55.66,yin,,0,0,0,, 希望能自力更生 \N{\fs12}It wants to have its own life. Okay.
Dialogue: 0,0:22:56.16,0:22:57.67,yin,,0,0,0,, 我们接下来讲讲 \N{\fs12}So, let’s talk about then
Dialogue: 0,0:22:57.67,0:23:00.80,yin,,0,0,0,,UINavigationController 是如何加进来的 \N{\fs12}how UINavigationController comes into this.
Dialogue: 0,0:23:00.82,0:23:03.22,yin,,0,0,0,, 如果第二个 MVC 想要展示的内容 \N{\fs12}If the second MVC, what is wants to show,
Dialogue: 0,0:23:03.29,0:23:05.46,yin,,0,0,0,, 是第一个 MVC 的详细信息 \N{\fs12}is more detail of the first MVC,
Dialogue: 0,0:23:05.46,0:23:08.10,yin,,0,0,0,, 那 UINavigationController 很适合这种情况 \N{\fs12}then a UINavigationController is appropriate.
Dialogue: 0,0:23:08.55,0:23:11.23,yin,,0,0,0,,UINavigationController 看起来是这样的 \N{\fs12}All right. A UINavigationController looks like this.
Dialogue: 0,0:23:11.23,0:23:12.46,yin,,0,0,0,, 它是一个 MVC\N{\fs12}It’s an MVC,
Dialogue: 0,0:23:12.71,0:23:15.03,yin,,0,0,0,, 它的控制器是 UINavigationController\N{\fs12}its controller is the UINavigationController,
Dialogue: 0,0:23:15.14,0:23:18.34,yin,,0,0,0,, 它的视图是这个白色的长方形 \N{\fs12}its view is this kind of white rectangular thing
Dialogue: 0,0:23:18.34,0:23:19.86,yin,,0,0,0,, 顶部有一条灰色栏 \N{\fs12}with the gray bar at the top,
Dialogue: 0,0:23:19.86,0:23:21.56,yin,,0,0,0,, 底部也可能有一条灰色栏 \N{\fs12}and possibly a gray bar at the bottom,
Dialogue: 0,0:23:21.94,0:23:26.67,yin,,0,0,0,, 它有一个 rootViewController 根视图控制器 \N{\fs12}and it includes a rootViewController,
Dialogue: 0,0:23:26.75,0:23:28.20,yin,,0,0,0,, 是一个特殊的输出口 \N{\fs12}which is a special outlet
Dialogue: 0,0:23:28.42,0:23:32.37,yin,,0,0,0,, 指向另一个 MVC 的控制器 \N{\fs12}that comes out that points to the controller of the MVC
Dialogue: 0,0:23:32.38,0:23:35.34,yin,,0,0,0,, 而这个 MVC 会在应用开始运行时显示在导航控制器中 \N{\fs12}that’s going to appear in the navigation controller when it starts up,
Dialogue: 0,0:23:35.34,0:23:36.96,yin,,0,0,0,, 就是它的根视图控制器 \N{\fs12}its root view controller.
Dialogue: 0,0:23:37.54,0:23:40.58,yin,,0,0,0,, 如果将这个 MVC 设为根视图控制器 \N{\fs12}Okay. So when you set that to be this MVC,
Dialogue: 0,0:23:41.12,0:23:43.12,yin,,0,0,0,, 导航控制器看起来就会是这样的 \N{\fs12}the navigation controller is going to look like this.
Dialogue: 0,0:23:43.38,0:23:47.10,yin,,0,0,0,, 它会将根视图控制器 MVC 的视图 \N{\fs12}It’s gonna put the view of that root view controller’s MVC into –
Dialogue: 0,0:23:47.18,0:23:49.04,yin,,0,0,0,, 嵌入它的视图中 \N{\fs12}embedded inside of its view.
Dialogue: 0,0:23:49.92,0:23:51.56,yin,,0,0,0,, 大家都明白吗 \N{\fs12}Right. Everyone understand that?
Dialogue: 0,0:23:52.46,0:23:56.14,yin,,0,0,0,, 如果这个视图中或者顶栏中 \N{\fs12}Okay. Now, if you then have some button or something
Dialogue: 0,0:23:56.15,0:23:59.59,yin,,0,0,0,, 有一些按钮之类的 \N{\fs12}inside this view or maybe in the bar at the top
Dialogue: 0,0:24:00.16,0:24:02.61,yin,,0,0,0,, 用来提供更多详细信息 \N{\fs12}that wants to give that more detail
Dialogue: 0,0:24:02.67,0:24:05.95,yin,,0,0,0,, 通过另外一个 MVC 来展示 \N{\fs12}and have this other MVC provides,
Dialogue: 0,0:24:06.10,0:24:08.13,yin,,0,0,0,, 点击了那个按钮之后 \N{\fs12}you click on that button
Dialogue: 0,0:24:08.39,0:24:12.48,yin,,0,0,0,, 就会滑入另一个 MVC 的视图 \N{\fs12}and it slides in the view for this other MVC,
Dialogue: 0,0:24:12.91,0:24:15.22,yin,,0,0,0,, 可以看到 还会在左上角添加返回按钮 \N{\fs12}okay, and puts a back button there as you see.
Dialogue: 0,0:24:15.63,0:24:17.76,yin,,0,0,0,, 现在 当 MVC\N{\fs12}Now again, when the MVC –
Dialogue: 0,0:24:17.77,0:24:19.86,yin,,0,0,0,, 当导航控制器处于当前状态时 \N{\fs12}when the navigation controller’s in this state,
Dialogue: 0,0:24:20.11,0:24:23.91,yin,,0,0,0,, 左侧的 MVC 最好毫无声息 \N{\fs12}okay, the MVC that’s on the left kind of wants to be quite.
Dialogue: 0,0:24:24.00,0:24:26.18,yin,,0,0,0,, 它不希望做任何操作 \N{\fs12}It doesn’t want to be doing anything. Okay.
Dialogue: 0,0:24:26.42,0:24:28.33,yin,,0,0,0,, 现在它并没有参与进来 \N{\fs12}It’s not really involved right now.
Dialogue: 0,0:24:28.51,0:24:31.29,yin,,0,0,0,, 而右侧的 MVC 完全处于控制状态 \N{\fs12}Then MVC on the right is completely in control.
Dialogue: 0,0:24:31.66,0:24:33.49,yin,,0,0,0,, 所以它要做的所有事情 \N{\fs12}Okay. And so it should be doing everything it’s doing
Dialogue: 0,0:24:33.49,0:24:35.15,yin,,0,0,0,, 都应该可以自己独立完成 \N{\fs12}on its own, independently.
Dialogue: 0,0:24:35.62,0:24:37.73,yin,,0,0,0,, 当然 那个小小的返回按钮 \N{\fs12}Now of course, that little back button
Dialogue: 0,0:24:37.74,0:24:40.00,yin,,0,0,0,, 会在 MVC 切换时自动出现 \N{\fs12}which automatically appears when you do this –
Dialogue: 0,0:24:40.43,0:24:41.54,yin,,0,0,0,, 我们会讲到这部分的 \N{\fs12}we’re going to talk about, by the way,
Dialogue: 0,0:24:41.54,0:24:44.15,yin,,0,0,0,, 会讲到如何转到另一个 MVC\N{\fs12}how to make this happen, to go to another MVC.
Dialogue: 0,0:24:44.28,0:24:46.20,yin,,0,0,0,, 当你点击这个小返回按钮时 \N{\fs12}This little back button, when you press it,
Dialogue: 0,0:24:47.03,0:24:50.60,yin,,0,0,0,, 显然它会移回到原来的 MVC\N{\fs12}it’s obviously just going to move back to the original one,
Dialogue: 0,0:24:50.61,0:24:52.84,yin,,0,0,0,, 这时这个 MVC 又处于活动状态了 \N{\fs12}then this MVC is now live again.
Dialogue: 0,0:24:53.54,0:24:55.40,yin,,0,0,0,, 当我们点击返回按钮时 \N{\fs12}What happened to the MVC on the right
Dialogue: 0,0:24:55.40,0:24:56.56,yin,,0,0,0,, 右侧的 MVC 会发生什么呢 \N{\fs12}when we clicked the back button?
Dialogue: 0,0:24:57.86,0:25:00.37,yin,,0,0,0,, 答案是 它会被从堆中释放 \N{\fs12}The answer is, it got de-allocated from the heap.
Dialogue: 0,0:25:02.13,0:25:04.59,yin,,0,0,0,, 这也是需要理解的重要的一点 \N{\fs12}Okay. This is an important thing to understand as well.
Dialogue: 0,0:25:05.01,0:25:06.74,yin,,0,0,0,, 右侧的那个 MVC\N{\fs12}Okay. That MVC on the right
Dialogue: 0,0:25:07.00,0:25:10.87,yin,,0,0,0,, 从 storyboard 中化冻 显示在屏幕上 \N{\fs12}got unfreeze-dried from the storyboard when we put it onscreen,
Dialogue: 0,0:25:11.00,0:25:14.11,yin,,0,0,0,, 当它离开屏幕时 会被释放 \N{\fs12}and when it went back off screen, it got de-allocated.
Dialogue: 0,0:25:15.58,0:25:18.56,yin,,0,0,0,, 每次我们向 UINavigationController 上 \N{\fs12}Okay. Every time we push a new thing
Dialogue: 0,0:25:18.89,0:25:21.55,yin,,0,0,0,, 压入新 MVC 时 \N{\fs12}onto a UINavigationController,
Dialogue: 0,0:25:21.75,0:25:23.94,yin,,0,0,0,, 都是从 storyboard 中新建一个 \N{\fs12}we’re creating a new one from the storyboard.
Dialogue: 0,0:25:24.78,0:25:26.44,yin,,0,0,0,, 在堆中新实例化一个 \N{\fs12}Okay. We’re instantiating a new one in the heap,
Dialogue: 0,0:25:26.44,0:25:28.43,yin,,0,0,0,, 返回之后 它就会消失 \N{\fs12}and every time we go back and it goes away,
Dialogue: 0,0:25:28.72,0:25:29.70,yin,,0,0,0,, 被释放了 \N{\fs12}it’s de-allocated.
Dialogue: 0,0:25:30.37,0:25:34.19,yin,,0,0,0,, 所以这些 MVC 需要知道如何变为活动状态 \N{\fs12}So these MVCs need to know how to come to life,
Dialogue: 0,0:25:34.49,0:25:37.40,yin,,0,0,0,, 准备出现在屏幕上 做要做的事情 \N{\fs12}be prepared to come onscreen, do what they do,
Dialogue: 0,0:25:37.62,0:25:40.20,yin,,0,0,0,, 完成之后 保存工作进度 \N{\fs12}finish what they’ve done, save whatever work it is,
Dialogue: 0,0:25:40.21,0:25:41.23,yin,,0,0,0,, 然后离开 \N{\fs12}and then just go away.
Dialogue: 0,0:25:41.91,0:25:43.48,yin,,0,0,0,, 就是这种模式 \N{\fs12}Okay. That is the modal.
Dialogue: 0,0:25:44.01,0:25:45.73,yin,,0,0,0,, 有些人可能会对此很困惑 \N{\fs12}Some people will be confused by that.
Dialogue: 0,0:25:45.73,0:25:48.90,yin,,0,0,0,, 自己的数据呢 都没了 \N{\fs12}You’ll think oh, what happened to all my data, it’s gone.
Dialogue: 0,0:25:48.92,0:25:50.46,yin,,0,0,0,, 因为它被释放了 对吧 \N{\fs12}Well, because it got de-allocated, all right,
Dialogue: 0,0:25:50.47,0:25:52.03,yin,,0,0,0,, 返回时就会进行这样的操作 \N{\fs12}because that’s what happens when you do back.
Dialogue: 0,0:25:52.30,0:25:54.49,yin,,0,0,0,, 所以如果某些数据需要继续使用 \N{\fs12}Okay. So if there’s any data in there that needs to stay,
Dialogue: 0,0:25:54.49,0:25:55.89,yin,,0,0,0,, 你就需要在某处对它进行保存 \N{\fs12}you need to save it somewhere.
Dialogue: 0,0:25:56.88,0:25:59.45,yin,,0,0,0,, 可以通过反向通信 \N{\fs12}Okay. And you could do it by communicating back
Dialogue: 0,0:25:59.63,0:26:02.71,yin,,0,0,0,, 向将你压进来的那个 MVC 发送消息来实现 \N{\fs12}to the MVC that pushed you onscreen,
Dialogue: 0,0:26:02.79,0:26:04.89,yin,,0,0,0,, 但是必须借助不可视结构化通信 \N{\fs12}but you have to do it with that blind structured communication.
Dialogue: 0,0:26:05.11,0:26:06.99,yin,,0,0,0,, 后面的课程中会讲到 \N{\fs12}And we’ll do that later in the quarter. Okay.
Dialogue: 0,0:26:07.13,0:26:09.36,yin,,0,0,0,, 反正这次作业用不到 \N{\fs12}You won’t have to do that for this assignment whatsoever.
Dialogue: 0,0:26:10.28,0:26:12.07,yin,,0,0,0,, 从根本上说 就是这样工作的 \N{\fs12}Okay. So, that’s basically how it works.
Dialogue: 0,0:26:12.44,0:26:15.27,yin,,0,0,0,, 现在我们再讲一下压入操作 \N{\fs12}Now, let’s talk a little bit about that pushing.
Dialogue: 0,0:26:15.49,0:26:19.67,yin,,0,0,0,, 如何让第二个 MVC 出现在屏幕上呢 \N{\fs12}How do we make a second MVC appear on screen?
Dialogue: 0,0:26:19.68,0:26:21.51,yin,,0,0,0,, 如何让它滑入呢 \N{\fs12}How do we make it do that sliding in thing?
Dialogue: 0,0:26:21.68,0:26:24.05,yin,,0,0,0,, 答案是使用 segue\N{\fs12}Well, the answer is we use what’s called a segue.
Dialogue: 0,0:26:24.05,0:26:26.53,yin,,0,0,0,,segue 是这节课需要理解的非常重要的内容 \N{\fs12}Okay. Segues are very important to understand in this class.
Dialogue: 0,0:26:26.66,0:26:29.71,yin,,0,0,0,,segue 是用来从一个 MVC\N{\fs12}A segue is just when you’re going to move or segue,
Dialogue: 0,0:26:29.82,0:26:31.82,yin,,0,0,0,, 移动或 segue 跳转到另一个 MVC\N{\fs12}from one MVC to another.
Dialogue: 0,0:26:32.74,0:26:34.91,yin,,0,0,0,,segue 的作用就是这样 \N{\fs12}Okay. That’s what a segue’s about
Dialogue: 0,0:26:35.15,0:26:38.54,yin,,0,0,0,,UINavigationController 中用到的 segue\N{\fs12}and the segue that’s involved in a UINavigationController
Dialogue: 0,0:26:38.55,0:26:39.90,yin,,0,0,0,, 叫做 push 类型 segue\N{\fs12}is called a push segue.
Dialogue: 0,0:26:40.20,0:26:42.71,yin,,0,0,0,, 可以把导航控制器看作是 \N{\fs12}We kind of think of the navigation controller as
Dialogue: 0,0:26:42.95,0:26:45.38,yin,,0,0,0,, 在最前面压入一个新的 MVC\N{\fs12}we push a new MVC into the front,
Dialogue: 0,0:26:45.45,0:26:46.76,yin,,0,0,0,, 可能会再压入一个 \N{\fs12}and maybe push another one,
Dialogue: 0,0:26:46.84,0:26:48.82,yin,,0,0,0,, 然后点击返回按钮后 \N{\fs12}and then we pop back and pop back
Dialogue: 0,0:26:48.83,0:26:49.88,yin,,0,0,0,, 再逐一弹出回去 \N{\fs12}when we hit the back button.
Dialogue: 0,0:26:50.22,0:26:51.55,yin,,0,0,0,, 我们用的是这个术语 \N{\fs12}Okay. That’s the terminology that we use.
Dialogue: 0,0:26:51.56,0:26:52.93,yin,,0,0,0,, 但是它叫做 push 类型 segue\N{\fs12}But it’s called a push segue.
Dialogue: 0,0:26:53.19,0:26:56.60,yin,,0,0,0,, 我们先来讲一下如何设置一个 push 类型 segue\N{\fs12}So, let me talk about how to set up a push segue first,
Dialogue: 0,0:26:56.73,0:26:59.43,yin,,0,0,0,, 然后再演示如何将全部内容 \N{\fs12}and then we’ll show you how to put the whole thing
Dialogue: 0,0:26:59.43,0:27:01.18,yin,,0,0,0,, 放入一个导航控制器中 \N{\fs12}into a navigation controller.
Dialogue: 0,0:27:01.45,0:27:03.17,yin,,0,0,0,, 所以这里分为两个步骤 \N{\fs12}Okay. So that’s the two-step process here.
Dialogue: 0,0:27:04.06,0:27:05.79,yin,,0,0,0,, 现在我们只有一个 MVC\N{\fs12}All right. So we’ve only had the single MVC.
Dialogue: 0,0:27:05.79,0:27:08.54,yin,,0,0,0,, 我再来快速演示一下 如何新建一个 MVC\N{\fs12}Let’s show briefly again, how you create a new one.
Dialogue: 0,0:27:08.65,0:27:13.51,yin,,0,0,0,, 只要从对象面板拖拽出一个 UIViewController\N{\fs12}I’m just going to drag a UIViewController out of the object pallet.
Dialogue: 0,0:27:13.64,0:27:15.43,yin,,0,0,0,, 就是这样 \N{\fs12}It appears like that.
Dialogue: 0,0:27:15.60,0:27:18.10,yin,,0,0,0,, 然后转到标识符检查器 \N{\fs12}Then I’m going to go up to the identity inspector,
Dialogue: 0,0:27:18.48,0:27:20.41,yin,,0,0,0,, 不是属性检查器 而是标识符检查器 \N{\fs12}not the attributes inspector, the identity inspector,
Dialogue: 0,0:27:20.41,0:27:21.75,yin,,0,0,0,, 将这里的类选项 \N{\fs12}and I’m going to set the class
Dialogue: 0,0:27:22.00,0:27:25.74,yin,,0,0,0,, 设置成为我之前通过新建文件创建的类 \N{\fs12}to be whatever class I’ve created with file, new file,
Dialogue: 0,0:27:25.74,0:27:27.12,yin,,0,0,0,, 或者也可能已经有那个类了 \N{\fs12}or I might have that class lying around,
Dialogue: 0,0:27:27.12,0:27:28.91,yin,,0,0,0,, 因为在 storyboard 中很有可能会出现 \N{\fs12}because it’s very possible in a storyboard
Dialogue: 0,0:27:28.92,0:27:31.85,yin,,0,0,0,, 多个场景使用同一个控制器的情况 \N{\fs12}to have multiple of these scenes that use the same controller,
Dialogue: 0,0:27:31.85,0:27:33.86,yin,,0,0,0,, 如果是在不同环境中展示相同的内容 \N{\fs12}if you’re displaying the same thing in different environments,
Dialogue: 0,0:27:33.88,0:27:35.27,yin,,0,0,0,, 都可以的 完全没问题 \N{\fs12}so whatever. It’s perfectly fine.
Dialogue: 0,0:27:35.52,0:27:38.58,yin,,0,0,0,, 很容易忘记在这里设置类 \N{\fs12}It’s a very common mistake to forget to do this.
Dialogue: 0,0:27:38.84,0:27:40.51,yin,,0,0,0,, 你可能会来问我 \N{\fs12}All right. You end up coming to office hours and saying
Dialogue: 0,0:27:40.53,0:27:42.96,yin,,0,0,0,, 我拖出了新的视图控制器 \N{\fs12}ah, I put this — I dragged out my new view controller,
Dialogue: 0,0:27:42.96,0:27:44.54,yin,,0,0,0,, 新建了视图控制器类 \N{\fs12}I created my new view controller class,
Dialogue: 0,0:27:44.54,0:27:46.57,yin,,0,0,0,, 但是我却不能连接输出口或者操作 \N{\fs12}but I can’t hook up any of the outlets or actions.
Dialogue: 0,0:27:46.58,0:27:48.12,yin,,0,0,0,, 因为你忘记设置类了 \N{\fs12}Well, because you forgot to set the class.
Dialogue: 0,0:27:48.46,0:27:51.14,yin,,0,0,0,, 操作很简单 但是也很容易忘记 \N{\fs12}Okay. Simple thing to do, but simple to forget as well.
Dialogue: 0,0:27:51.15,0:27:54.58,yin,,0,0,0,, 我敢肯定在这门课上至少会出现一次 \N{\fs12}I’m sure at least one time in a demo in this class in lecture,
Dialogue: 0,0:27:54.58,0:27:55.63,yin,,0,0,0,, 我也忘了做这个操作 \N{\fs12}I’ll forget to do that too,
Dialogue: 0,0:27:55.63,0:27:59.13,yin,,0,0,0,, 到时候就靠大家提醒我不要忘了这一步了 好吗 \N{\fs12}so I’m relying on you to say oh, don’t forget to set the class. Okay.
Dialogue: 0,0:28:00.88,0:28:02.26,yin,,0,0,0,, 设置好类之后 \N{\fs12}So once you’ve set the class,
Dialogue: 0,0:28:02.27,0:28:06.51,yin,,0,0,0,, 现在就有了这两个 MVC 控制器不同 \N{\fs12}now you have these two MVCs with different controllers.
Dialogue: 0,0:28:06.94,0:28:09.97,yin,,0,0,0,, 现在它们都没有视图 \N{\fs12}Okay. There’s no view in either of these right now.
Dialogue: 0,0:28:10.16,0:28:14.34,yin,,0,0,0,, 这个白色小长方形 我们叫做 scene 场景 \N{\fs12}We call this, one of these little rectangular things, a scene,
Dialogue: 0,0:28:14.95,0:28:16.19,yin,,0,0,0,, 是在 storyboard 中的 \N{\fs12}okay, in the storyboard.
Dialogue: 0,0:28:16.20,0:28:17.88,yin,,0,0,0,, 如果我说场景 \N{\fs12}If you hear me use the word scene,
Dialogue: 0,0:28:17.94,0:28:20.33,yin,,0,0,0,, 就表示一个控制器 \N{\fs12}I just mean a combination of a controller
Dialogue: 0,0:28:20.38,0:28:22.36,yin,,0,0,0,, 和一个特别创建的视图的组合 \N{\fs12}and a particular view that we’ve built.
Dialogue: 0,0:28:23.15,0:28:25.49,yin,,0,0,0,, 这叫做场景 \N{\fs12}Okay. So that’s called a scene.
Dialogue: 0,0:28:27.56,0:28:29.48,yin,,0,0,0,, 现在我要做的操作是 \N{\fs12}Okay. So, what we’re going to do now
Dialogue: 0,0:28:29.48,0:28:32.43,yin,,0,0,0,, 拖出一个按钮 放到左边的场景中 \N{\fs12}is I’m going to drag a button into the left scene,
Dialogue: 0,0:28:32.55,0:28:33.95,yin,,0,0,0,, 当点击那个按钮时 \N{\fs12}and when we click that button,
Dialogue: 0,0:28:33.97,0:28:37.24,yin,,0,0,0,, 它会滑进 UINavigationController 中 \N{\fs12}it’s going to slide it in in a UINavigationController.
Dialogue: 0,0:28:37.41,0:28:38.63,yin,,0,0,0,, 会压入进去 \N{\fs12}Okay. It’s going to push it.
Dialogue: 0,0:28:38.99,0:28:40.74,yin,,0,0,0,, 所以我们要把按钮放到左边 \N{\fs12}So we’re going to put that button in the left,
Dialogue: 0,0:28:40.92,0:28:43.70,yin,,0,0,0,, 然后创建一个连接到右边的 push 类型 segue\N{\fs12}and we’re going to create a push segue to the right.
Dialogue: 0,0:28:44.13,0:28:45.37,yin,,0,0,0,, 把按钮放到那里 \N{\fs12}So let’s put the button there.
Dialogue: 0,0:28:45.50,0:28:46.97,yin,,0,0,0,, 我们只要把它放在中间 \N{\fs12}All right. We’re just gonna drop it right in the middle there.
Dialogue: 0,0:28:46.97,0:28:48.91,yin,,0,0,0,, 不用编辑标题什么的 \N{\fs12}I’m not going to change the title or anything.
Dialogue: 0,0:28:49.20,0:28:52.30,yin,,0,0,0,, 创建 segue 的方法就是按住 control 键进行拖拽 \N{\fs12}To make it segue all I do — control drag.
Dialogue: 0,0:28:52.64,0:28:56.13,yin,,0,0,0,,Xcode 中就是要按住 control 键进行拖拽 \N{\fs12}Right. That’s what we do in Xcode, we control drag.
Dialogue: 0,0:28:56.31,0:29:00.43,yin,,0,0,0,, 只要从 segue 开始的地方按住 control 键 \N{\fs12}So you just control drag from the thing you want to start the segue
Dialogue: 0,0:29:00.86,0:29:03.59,yin,,0,0,0,, 拖动至想要 segue 到的视图控制器上 \N{\fs12}over to the view controller you want it to segue to.
Dialogue: 0,0:29:04.34,0:29:06.77,yin,,0,0,0,, 松开鼠标后 \N{\fs12}Okay. When you let go of the mouse,
Dialogue: 0,0:29:06.99,0:29:08.70,yin,,0,0,0,, 就会出现这个黑色的列表 \N{\fs12}it’s going to put this little black thing up
Dialogue: 0,0:29:08.94,0:29:11.72,yin,,0,0,0,, 询问你想要什么类型的 segue\N{\fs12}and ask what kind of segue do you want here,
Dialogue: 0,0:29:12.00,0:29:14.68,yin,,0,0,0,, 在当前情况下 只有三种可用 \N{\fs12}and in this context, there’s only three that make sense –
Dialogue: 0,0:29:14.68,0:29:17.24,yin,,0,0,0,,push 类型 适用于导航控制器 \N{\fs12}push, which would be navigation controller one.
Dialogue: 0,0:29:17.48,0:29:19.09,yin,,0,0,0,,modal 类型 我们稍后会讲到 \N{\fs12}Modal, which we’ll talk about later,
Dialogue: 0,0:29:19.09,0:29:21.44,yin,,0,0,0,, 这种类型的 segue 会接管屏幕 \N{\fs12}which is take over the screen segue.
Dialogue: 0,0:29:21.72,0:29:24.25,yin,,0,0,0,, 我放在后面讲 因为它有可能会被滥用 \N{\fs12}I teach you that late because that can be abused.
Dialogue: 0,0:29:24.25,0:29:25.62,yin,,0,0,0,, 我们并不想过多地使用这种类型 \N{\fs12}Okay. We don’t want to do that too much.
Dialogue: 0,0:29:25.77,0:29:27.65,yin,,0,0,0,,custom 类型允许你创建自己的 segue\N{\fs12}And then custom create your own segues.
Dialogue: 0,0:29:27.65,0:29:28.97,yin,,0,0,0,, 我们这门课上不会讲到它的 \N{\fs12}We’re not even going to talk about that in this class,
Dialogue: 0,0:29:28.97,0:29:29.83,yin,,0,0,0,, 非常少见 \N{\fs12}that’s so rare.
Dialogue: 0,0:29:30.28,0:29:31.80,yin,,0,0,0,, 点击 push 之后 \N{\fs12}All right. So I click push
Dialogue: 0,0:29:32.09,0:29:34.71,yin,,0,0,0,,MVC 之间会出现这个小图标 \N{\fs12}and it puts this little thing in between my MVCs.
Dialogue: 0,0:29:34.71,0:29:35.88,yin,,0,0,0,, 看到这个圆形图标了吗 \N{\fs12}You see that little round thing?
Dialogue: 0,0:29:36.03,0:29:36.93,yin,,0,0,0,, 它代表 segue\N{\fs12}That’s a segue.
Dialogue: 0,0:29:37.51,0:29:39.50,yin,,0,0,0,, 它是可以点击的 \N{\fs12}Okay. And this is a clickable thing.
Dialogue: 0,0:29:39.50,0:29:41.25,yin,,0,0,0,, 实际上 你也需要点击它 \N{\fs12}In fact, you’re going to need to click on it,
Dialogue: 0,0:29:41.42,0:29:42.52,yin,,0,0,0,, 因为当你点击它后 \N{\fs12}because when you click on it
Dialogue: 0,0:29:42.52,0:29:44.20,yin,,0,0,0,, 转到属性检查器 \N{\fs12}and you go to the attributes inspector,
Dialogue: 0,0:29:44.20,0:29:47.25,yin,,0,0,0,, 可以看到有两项 \N{\fs12}you’ll see that it has two things actually,
Dialogue: 0,0:29:47.27,0:29:49.05,yin,,0,0,0,, 一项是 segue 类型 这里是 push\N{\fs12}one is the type of segue, which is push,
Dialogue: 0,0:29:49.18,0:29:51.26,yin,,0,0,0,, 它的上面是标识符 \N{\fs12}but above that, it has this identifier.
Dialogue: 0,0:29:51.26,0:29:54.27,yin,,0,0,0,, 我把这个 segue 叫做 Do Something 做某事 \N{\fs12}Okay. And I call this segue the Do Something segue.
Dialogue: 0,0:29:54.75,0:29:56.97,yin,,0,0,0,, 为什么要在这里加上这个标识符 \N{\fs12}Now why do I need to put this identifier here?
Dialogue: 0,0:29:56.97,0:29:59.92,yin,,0,0,0,, 实际上 这个标识符差不多是必须设置的 \N{\fs12}And actually, it’s pretty much mandatory to put something here.
Dialogue: 0,0:30:00.30,0:30:04.42,yin,,0,0,0,, 因为我需要在代码中标识出这个 segue\N{\fs12}And the reason is that I need to identify this segue in my code.
Dialogue: 0,0:30:05.27,0:30:06.40,yin,,0,0,0,, 这是一个连接点 \N{\fs12}Okay. This is the link,
Dialogue: 0,0:30:07.15,0:30:09.09,yin,,0,0,0,, 有人可能会认为它很脆弱 \N{\fs12}tenuous as one might argue it is,
Dialogue: 0,0:30:09.31,0:30:11.13,yin,,0,0,0,, 它是 Xcode 和你的代码间 \N{\fs12}between Xcode and your code,
Dialogue: 0,0:30:11.29,0:30:12.46,yin,,0,0,0,, 关于 segue 的连接点 \N{\fs12}when it comes to a segue.
Dialogue: 0,0:30:12.46,0:30:14.52,yin,,0,0,0,, 基本上 我们都会命名 segue\N{\fs12}Okay. We essentially name these segues,
Dialogue: 0,0:30:14.52,0:30:16.08,yin,,0,0,0,, 赋予它们标识符字符串 \N{\fs12}we give them identifier strings
Dialogue: 0,0:30:16.26,0:30:17.75,yin,,0,0,0,, 然后就可以在代码中使用 \N{\fs12}and in our code we can refer to them.
Dialogue: 0,0:30:17.75,0:30:19.63,yin,,0,0,0,, 下面的一些幻灯片中 \N{\fs12}And you’ll see in a few slides here,
Dialogue: 0,0:30:20.00,0:30:22.50,yin,,0,0,0,, 将会看到在代码中什么地方用到了它们 \N{\fs12}where in our code we refer to this,
Dialogue: 0,0:30:22.51,0:30:24.21,yin,,0,0,0,, 命名 segue 是非常重要的 \N{\fs12}but it’s very important to do that.
Dialogue: 0,0:30:24.59,0:30:26.20,yin,,0,0,0,, 这是另外一件 \N{\fs12}Okay. Another common thing –
Dialogue: 0,0:30:26.21,0:30:27.32,yin,,0,0,0,, 容易忘记的事情 \N{\fs12}this is a common thing to forget.
Dialogue: 0,0:30:27.62,0:30:28.93,yin,,0,0,0,, 你创建了一个 segue\N{\fs12}You create a segue,
Dialogue: 0,0:30:29.01,0:30:30.97,yin,,0,0,0,, 转到代码才发现自己忘记命名了 \N{\fs12}you go to your code, and you’re like oh, oops,
Dialogue: 0,0:30:30.98,0:30:33.02,yin,,0,0,0,, 最后还得回到 Xcode 中对它命名 \N{\fs12}and then you end up having to go back to Xcode and naming it.
Dialogue: 0,0:30:33.09,0:30:36.55,yin,,0,0,0,, 这个操作不大可能会过了很久才发现 \N{\fs12}This one you’re less likely to get very far without remembering to go back,
Dialogue: 0,0:30:36.57,0:30:39.62,yin,,0,0,0,, 但依旧是经常会忘记的操作 \N{\fs12}but it’s still something that’s commonly forgotten.
Dialogue: 0,0:30:39.89,0:30:43.09,yin,,0,0,0,, 我们要将这个 segue 叫做 Do Something\N{\fs12}All right. So, we’re gonna call this segue the Do Something segue.
Dialogue: 0,0:30:43.30,0:30:47.01,yin,,0,0,0,, 命名时通常会选择具有描述性的标识符 \N{\fs12}Usually you want to pick an identifier that describes in some –
Dialogue: 0,0:30:47.26,0:30:50.31,yin,,0,0,0,, 就像变量名描述变量一样 \N{\fs12}you know, just like a variable name would describe,
Dialogue: 0,0:30:50.31,0:30:51.35,yin,,0,0,0,, 表明它要做什么 \N{\fs12}what’s going on here.
Dialogue: 0,0:30:51.54,0:30:53.29,yin,,0,0,0,, 这是一个通用的示例 \N{\fs12}So this is a generic example,
Dialogue: 0,0:30:53.29,0:30:55.21,yin,,0,0,0,, 点击按钮后 我们会做某事 \N{\fs12}so when we click that button, we’re going to do something,
Dialogue: 0,0:30:55.21,0:30:56.20,yin,,0,0,0,, 所以我叫它 Do Something 做某事 \N{\fs12}so I called it Do Something,
Dialogue: 0,0:30:56.21,0:30:58.78,yin,,0,0,0,, 但是你们也许会选一个更好的名字 \N{\fs12}but you probably want to pick a better name than Do Something.
Dialogue: 0,0:30:58.78,0:30:59.86,yin,,0,0,0,, 不那么通用的名字 \N{\fs12}That’s a little generic. Okay.
Dialogue: 0,0:31:01.82,0:31:03.35,yin,,0,0,0,, 但是这里有个问题 \N{\fs12}Okay. So, there’s a problem here though.
Dialogue: 0,0:31:03.35,0:31:05.48,yin,,0,0,0,, 如果现在这样运行应用 \N{\fs12}If I were to run my application in this state,
Dialogue: 0,0:31:05.48,0:31:06.38,yin,,0,0,0,, 是不会正常运行的 \N{\fs12}it would not work.
Dialogue: 0,0:31:06.73,0:31:09.46,yin,,0,0,0,, 点击那个按钮不会发生 segue 跳转 \N{\fs12}Okay. Clicking that button would not segue.
Dialogue: 0,0:31:09.82,0:31:10.67,yin,,0,0,0,, 为什么呢 \N{\fs12}Why is that?
Dialogue: 0,0:31:10.79,0:31:14.77,yin,,0,0,0,, 因为这些 MVC 需要放在导航控制器中 \N{\fs12}Because this whole thing has to be in a navigation controller.
Dialogue: 0,0:31:15.20,0:31:16.74,yin,,0,0,0,, 这有两个 MVC\N{\fs12}Right. These two MVCs –
Dialogue: 0,0:31:16.74,0:31:18.29,yin,,0,0,0,, 我需要第三个 MVC\N{\fs12}I need a third MVC,
Dialogue: 0,0:31:18.29,0:31:20.05,yin,,0,0,0,, 即它们所在的导航控制器 \N{\fs12}which is the navigation controller they’re in.
Dialogue: 0,0:31:20.36,0:31:21.88,yin,,0,0,0,, 我们讲讲如何实现 \N{\fs12}So, let’s talk about how to do that.
Dialogue: 0,0:31:22.08,0:31:23.13,yin,,0,0,0,, 非常简单 \N{\fs12}It’s very simple.
Dialogue: 0,0:31:23.15,0:31:27.97,yin,,0,0,0,, 选择想要的根视图控制器 \N{\fs12}You pick which one of these you want to be the root view controller,
Dialogue: 0,0:31:28.53,0:31:30.14,yin,,0,0,0,, 导航控制器的根视图控制器 \N{\fs12}all right, of the navigation controller,
Dialogue: 0,0:31:30.37,0:31:33.55,yin,,0,0,0,, 然后打开编辑器菜单选择嵌入导航控制器 \N{\fs12}and you go to the editor menu and you say embed in navigation controller.
Dialogue: 0,0:31:33.55,0:31:34.80,yin,,0,0,0,, 我选择了左边这个 \N{\fs12}So I picked the one on the left,
Dialogue: 0,0:31:34.81,0:31:36.94,yin,,0,0,0,, 可以看到它周围的深蓝色边框 \N{\fs12}you see it’s got the dark blue line around it.
Dialogue: 0,0:31:36.98,0:31:38.49,yin,,0,0,0,, 选择菜单中的嵌入 > 导航控制器 \N{\fs12}I say embed in navigation controller,
Dialogue: 0,0:31:38.50,0:31:40.06,yin,,0,0,0,, 这样做之后 \N{\fs12}and when I do that, boom,
Dialogue: 0,0:31:40.07,0:31:41.70,yin,,0,0,0,, 就会创建一个导航控制器 \N{\fs12}it’s going to create a navigation controller,
Dialogue: 0,0:31:41.70,0:31:44.92,yin,,0,0,0,, 所以现在 storyboard 中有三个 MVC\N{\fs12}so now I have three MVCs in this storyboard. Three.
Dialogue: 0,0:31:45.13,0:31:46.75,yin,,0,0,0,, 导航控制器在左边 \N{\fs12}I’ve got the navigation controller on the left,
Dialogue: 0,0:31:47.03,0:31:50.38,yin,,0,0,0,, 另外两个在右边 \N{\fs12}and then I’ve got my two other ones on the right. Okay.
Dialogue: 0,0:31:51.31,0:31:53.90,yin,,0,0,0,, 最左边的小箭头 \N{\fs12}And the little arrow on the very left,
Dialogue: 0,0:31:53.90,0:31:56.14,yin,,0,0,0,, 看到那个从左边指出来的箭头了吗 \N{\fs12}do you see that arrow that kind of points in from the left?
Dialogue: 0,0:31:56.59,0:32:00.95,yin,,0,0,0,, 它代表应用开始运行时 \N{\fs12}That is where — that’s the MVC that’s going to be onscreen
Dialogue: 0,0:32:00.95,0:32:02.26,yin,,0,0,0,, 将显示在屏幕上的 MVC\N{\fs12}when your application launches.
Dialogue: 0,0:32:02.86,0:32:05.63,yin,,0,0,0,, 那个小箭头其实可以被拾取和移动 \N{\fs12}And that little arrow can actually be picked up and moved around.
Dialogue: 0,0:32:06.05,0:32:08.29,yin,,0,0,0,, 只要拾取它 移动到你想要的 MVC 上 \N{\fs12}Just pick it up and drop it on any MVC you want.
Dialogue: 0,0:32:08.52,0:32:11.03,yin,,0,0,0,, 那个 MVC 就会成为应用开始运行时的第一个 MVC\N{\fs12}That’s going to be the MVC when you start.
Dialogue: 0,0:32:11.03,0:32:12.79,yin,,0,0,0,, 这个箭头原来指向的是 \N{\fs12}Now it used to be pointing at the MVC
Dialogue: 0,0:32:12.79,0:32:14.67,yin,,0,0,0,, 中间有 Button 单词的那个 MVC\N{\fs12}that has the word button in there in the middle,
Dialogue: 0,0:32:14.81,0:32:17.03,yin,,0,0,0,, 但是我将它嵌入到导航控制器中以后 \N{\fs12}but as soon as I embedded it in a navigation controller
Dialogue: 0,0:32:17.03,0:32:19.24,yin,,0,0,0,, 它就会自动移出来 指向导航控制器 \N{\fs12}it automatically moved it out to the navigation controller.
Dialogue: 0,0:32:19.48,0:32:22.25,yin,,0,0,0,, 将箭头指向导航控制器内的 MVC\N{\fs12}It would never make sense to have a little arrow
Dialogue: 0,0:32:22.44,0:32:25.79,yin,,0,0,0,, 完全没有意义 \N{\fs12}pointing to an MVC that’s inside a navigation controller.
Dialogue: 0,0:32:26.03,0:32:29.57,yin,,0,0,0,, 这样的意思不是说打开导航控制器 \N{\fs12}Okay. Because that doesn’t mean bring up the navigation controller
Dialogue: 0,0:32:29.68,0:32:31.60,yin,,0,0,0,, 让这个 MVC 成为它的根视图控制器 \N{\fs12}and have this be the root view controller.
Dialogue: 0,0:32:31.76,0:32:34.83,yin,,0,0,0,, 这样的意思很奇怪 \N{\fs12}That would just mean something strange.
Dialogue: 0,0:32:34.83,0:32:37.36,yin,,0,0,0,, 我也不知道为什么会允许这样的操作 \N{\fs12}I’m not even sure why it’s going to allow that,
Dialogue: 0,0:32:37.36,0:32:38.61,yin,,0,0,0,, 但这样是不能正常运行的 \N{\fs12}but it wouldn’t work.
Dialogue: 0,0:32:38.73,0:32:40.84,yin,,0,0,0,, 应用开始运行时不会出现导航控制器 \N{\fs12}When it came up there would be no navigation controller,
Dialogue: 0,0:32:40.84,0:32:42.74,yin,,0,0,0,, 因为你绕过了它 \N{\fs12}because you’d be bypassing the navigation controller.
Dialogue: 0,0:32:43.01,0:32:46.77,yin,,0,0,0,, 但是你可以拖动箭头 指向选项卡栏控制器 \N{\fs12}So — but you can drag that little arrow to a tab bar controller,
Dialogue: 0,0:32:46.77,0:32:50.46,yin,,0,0,0,, 有时为了测试 可以将箭头指向一个视图控制器 \N{\fs12}or sometimes in testing, it’s nice to move them to a view controller
Dialogue: 0,0:32:50.46,0:32:52.95,yin,,0,0,0,, 让应用从它开始运行 \N{\fs12}and just say oh, just start with this view controller,
Dialogue: 0,0:32:52.97,0:32:55.07,yin,,0,0,0,, 因为这些视图控制器应该是可以独立运行的 \N{\fs12}because remember these view controllers are supposed to stand on their own,
Dialogue: 0,0:32:55.88,0:32:58.11,yin,,0,0,0,, 所以可以在测试时将开始箭头指向它们 \N{\fs12}so you can sometimes drag it to startup for testing
Dialogue: 0,0:32:58.13,0:32:58.98,yin,,0,0,0,, 测试完成再移回去 \N{\fs12}and then drag it back.
Dialogue: 0,0:32:58.98,0:32:59.95,yin,,0,0,0,, 今天如果有时间的话 \N{\fs12}In fact, I’ll try to do that,
Dialogue: 0,0:32:59.97,0:33:03.01,yin,,0,0,0,, 我会演示一下 \N{\fs12}if we have time in the demo today. Okay.
Dialogue: 0,0:33:04.65,0:33:06.20,yin,,0,0,0,, 第二个小圆形图标 \N{\fs12}The second little thing there,
Dialogue: 0,0:33:06.20,0:33:08.93,yin,,0,0,0,, 看起来像是一个 segue 但其实不是 \N{\fs12}that looks like a segue, but it’s not actually.
Dialogue: 0,0:33:08.94,0:33:12.12,yin,,0,0,0,, 它只用于展示导航控制器 \N{\fs12}That’s actually just showing you the root view controller connection
Dialogue: 0,0:33:12.22,0:33:14.48,yin,,0,0,0,, 与根视图控制器之间的连接关系 \N{\fs12}from the navigation controller. Okay.
Dialogue: 0,0:33:14.74,0:33:15.74,yin,,0,0,0,, 当出现这个图标 \N{\fs12}When you see the little –
Dialogue: 0,0:33:15.82,0:33:17.82,yin,,0,0,0,, 看起来像是一条线两个点 \N{\fs12}kind of it looks like a line with two dots in there
Dialogue: 0,0:33:17.82,0:33:21.65,yin,,0,0,0,, 代表它是输出口类型的连接 而不是 segue\N{\fs12}that means it’s a kind of an outlet type of connection not a segue.
Dialogue: 0,0:33:21.65,0:33:23.86,yin,,0,0,0,, 二者很相似 但是你不能检查它 \N{\fs12}Looks very similar, but you can’t inspect it,
Dialogue: 0,0:33:23.86,0:33:25.33,yin,,0,0,0,, 不能设置它的标识符 \N{\fs12}you can’t set an identifier.
Dialogue: 0,0:33:25.33,0:33:26.73,yin,,0,0,0,, 这里都不需要 \N{\fs12}None of that’s necessary here.
Dialogue: 0,0:33:26.73,0:33:28.18,yin,,0,0,0,, 它只是用来表示这个连接 \N{\fs12}It’s just showing you that connection.
Dialogue: 0,0:33:28.43,0:33:30.36,yin,,0,0,0,, 但这个是 segue\N{\fs12}But this one, that is the segue,
Dialogue: 0,0:33:30.36,0:33:32.55,yin,,0,0,0,, 是几张幻灯片前我们按住 control 键拖拽出的 \N{\fs12}the thing that we control dragged a few slides ago.
Dialogue: 0,0:33:32.74,0:33:34.13,yin,,0,0,0,, 如果我点击它 \N{\fs12}If I click on that,
Dialogue: 0,0:33:34.14,0:33:36.44,yin,,0,0,0,, 会显示它的标识符 Do Something 等等 \N{\fs12}it would say identifier Do Something, etcetera,
Dialogue: 0,0:33:37.50,0:33:41.41,yin,,0,0,0,, 注意 所有场景 \N{\fs12}and notice that all — every single one of the scenes
Dialogue: 0,0:33:41.46,0:33:44.42,yin,,0,0,0,, 当前导航控制器中的所有场景 \N{\fs12}that is now inside this navigation controller –
Dialogue: 0,0:33:44.42,0:33:45.59,yin,,0,0,0,, 不只是根视图控制器 \N{\fs12}not just the root view controller,
Dialogue: 0,0:33:45.60,0:33:48.13,yin,,0,0,0,, 所有能过通过 push 类型 segue 导航到的场景 \N{\fs12}but everything it can navigate to with push segues,
Dialogue: 0,0:33:48.25,0:33:50.74,yin,,0,0,0,, 在 Xcode 中都在顶部添加了导航栏 \N{\fs12}gets a bar on the top in Xcode.
Dialogue: 0,0:33:50.92,0:33:53.22,yin,,0,0,0,, 这样可以方便你布局 UI\N{\fs12}And that’s so you can lay out your UI nicely,
Dialogue: 0,0:33:53.22,0:33:55.95,yin,,0,0,0,, 布局时考虑到那个导航栏始终都会出现在场景顶部 \N{\fs12}knowing that that bar is always going to be on top of that scene,
Dialogue: 0,0:33:56.05,0:33:58.08,yin,,0,0,0,, 因为它在导航控制器中 \N{\fs12}because this thing is inside a navigation controller.
Dialogue: 0,0:33:58.61,0:34:01.25,yin,,0,0,0,, 如果你要添加 toolbarItems\N{\fs12}Okay. And if you’re adding toolbarItems things,
Dialogue: 0,0:34:01.26,0:34:02.74,yin,,0,0,0,, 也会在顶部出现一栏 \N{\fs12}then you’ll have a bar on the bottom as well.
Dialogue: 0,0:34:02.81,0:34:05.24,yin,,0,0,0,, 如果这些场景都在选项卡栏控制器中 \N{\fs12}If this was all inside a tab bar controller,
Dialogue: 0,0:34:05.24,0:34:07.30,yin,,0,0,0,, 这是可以的 你们的作业中就要这么做 \N{\fs12}which is legal and which you’re going to be doing for your homework,
Dialogue: 0,0:34:07.56,0:34:10.08,yin,,0,0,0,, 这种情况会在底部出现一条选项卡栏 \N{\fs12}then it would also have a bar for the tab bar,
Dialogue: 0,0:34:10.15,0:34:11.70,yin,,0,0,0,,UI 会变短 \N{\fs12}and so the UI would be squinching down
Dialogue: 0,0:34:11.70,0:34:13.16,yin,,0,0,0,, 你需要调整 UI 以适应这种布局 \N{\fs12}as you have to make your UI fit.
Dialogue: 0,0:34:13.35,0:34:15.38,yin,,0,0,0,, 下周或者下下周 \N{\fs12}And again, next week or the week after,
Dialogue: 0,0:34:15.39,0:34:17.01,yin,,0,0,0,, 也许我们会讲到自动布局 \N{\fs12}I guess, we’re going to talk about autolayout,
Dialogue: 0,0:34:17.01,0:34:20.08,yin,,0,0,0,, 通过它 可以在这些元素 \N{\fs12}which is a way as these things are appearing or disappearing,
Dialogue: 0,0:34:20.08,0:34:21.11,yin,,0,0,0,, 这些顶部栏和底部栏出现消失时 \N{\fs12}these bars on the top and bottom,
Dialogue: 0,0:34:21.11,0:34:23.42,yin,,0,0,0,, 自动对 UI 进行调整 \N{\fs12}to automatically have that stuff rearrange,
Dialogue: 0,0:34:23.44,0:34:26.69,yin,,0,0,0,, 但是目前你需要手动调整 \N{\fs12}but for now you’re going to have to manually do it. Okay.
Dialogue: 0,0:34:27.69,0:34:31.31,yin,,0,0,0,, 如果需要 你可以在栏标题上双击 \N{\fs12}You can double click on the title in these bars
Dialogue: 0,0:34:31.31,0:34:32.78,yin,,0,0,0,, 设置标题 \N{\fs12}and set the title if you want,
Dialogue: 0,0:34:32.82,0:34:37.82,yin,,0,0,0,, 否则这里显示的就是当前场景视图控制器的标题 \N{\fs12}or it’ll ask the view controller that’s at that scene for its title,
Dialogue: 0,0:34:37.84,0:34:40.67,yin,,0,0,0,, 只要使用标题属性就可以得到 \N{\fs12}just using the title property,
Dialogue: 0,0:34:41.29,0:34:44.97,yin,,0,0,0,, 此外 如果你还想在顶部添加按钮 \N{\fs12}and you can also — if you wanted to add a button to the top,
Dialogue: 0,0:34:44.97,0:34:46.91,yin,,0,0,0,, 还记得日历顶部的按钮吗 比如搜索按钮 \N{\fs12}remember the calendar has like the search button,
Dialogue: 0,0:34:46.91,0:34:48.89,yin,,0,0,0,, 添加和编辑按钮 \N{\fs12}and the add button, and the edit button at the top.
Dialogue: 0,0:34:49.47,0:34:51.47,yin,,0,0,0,, 方法是直接拖出一个按钮放在这里 \N{\fs12}The way you do that is you just drag a button in,
Dialogue: 0,0:34:51.47,0:34:53.14,yin,,0,0,0,, 但是这里不要用 UIButton\N{\fs12}but don’t use UIButton here.
Dialogue: 0,0:34:53.73,0:34:56.12,yin,,0,0,0,, 不然你会在拖拽 UIButton 时受挫的 \N{\fs12}Okay. Or you’ll be frustrated if you try to drag UIButton.
Dialogue: 0,0:34:56.12,0:34:58.39,yin,,0,0,0,, 会疑惑 为什么 UIButton 不能放到那里呢 \N{\fs12}It’s like ah, how come the UIButton won’t go there?
Dialogue: 0,0:34:58.56,0:35:00.85,yin,,0,0,0,, 因为我们要用 UIBarButtonItem\N{\fs12}And that’s because we use UIBarButtonItem,
Dialogue: 0,0:35:00.85,0:35:02.14,yin,,0,0,0,, 它是比较轻量级的 \N{\fs12}which is kind of a lighter weight one.
Dialogue: 0,0:35:02.14,0:35:04.12,yin,,0,0,0,, 滚动到差不多面板最底部 \N{\fs12}You scroll down almost to the bottom of the pallet
Dialogue: 0,0:35:04.12,0:35:05.59,yin,,0,0,0,, 就能看到这个 Bar Button Item 栏按钮项 \N{\fs12}you’ll see this thing — Bar Button Item.
Dialogue: 0,0:35:05.88,0:35:09.14,yin,,0,0,0,, 将它拖出 可以看到它会放到那里 \N{\fs12}You drag that out, you’ll see that it will drop there
Dialogue: 0,0:35:09.36,0:35:10.31,yin,,0,0,0,, 松开鼠标之后 \N{\fs12}and when you let it go,
Dialogue: 0,0:35:10.31,0:35:12.43,yin,,0,0,0,, 就出现了一个按钮 叫做 Item\N{\fs12}now you have a button there called item.
Dialogue: 0,0:35:12.46,0:35:14.12,yin,,0,0,0,, 这个按钮只会在一种情况下出现 \N{\fs12}That button will only appear
Dialogue: 0,0:35:14.21,0:35:17.01,yin,,0,0,0,, 就是这个中间有 Button 按钮的 MVC\N{\fs12}when this MVC — the one that has button in the middle of it,
Dialogue: 0,0:35:17.21,0:35:20.34,yin,,0,0,0,, 当前在导航控制器中可见的时候 \N{\fs12}is the currently visible thing in the navigation controller.
Dialogue: 0,0:35:20.36,0:35:21.98,yin,,0,0,0,, 只有这时 Item 按钮才会出现 \N{\fs12}That’s the only time the item will appear.
Dialogue: 0,0:35:22.59,0:35:25.19,yin,,0,0,0,, 这里完全可以 \N{\fs12}Okay. And it is perfectly legal to,
Dialogue: 0,0:35:25.31,0:35:28.34,yin,,0,0,0,, 不使用从 Button 到下一个 MVC 的 segue\N{\fs12}instead of having our segue go from button to the next one,
Dialogue: 0,0:35:28.34,0:35:31.13,yin,,0,0,0,, 可以从 Item 按钮按住 control 键拖动到下一个 MVC\N{\fs12}we could control drag from that item to the next one.
Dialogue: 0,0:35:31.14,0:35:32.92,yin,,0,0,0,, 我会在示例中为大家演示 \N{\fs12}In fact, I’ll do that in the demo just to show you.
Dialogue: 0,0:35:33.69,0:35:36.06,yin,,0,0,0,, 所以顶部的这个 Item 按钮 \N{\fs12}Okay. So that item button at the top
Dialogue: 0,0:35:36.07,0:35:38.05,yin,,0,0,0,, 可以作为 segue 的起点 \N{\fs12}is allowed to be a source of segueing.
Dialogue: 0,0:35:38.05,0:35:39.53,yin,,0,0,0,, 实际上这很常见 \N{\fs12}In fact, it very commonly is.
Dialogue: 0,0:35:40.61,0:35:47.78,yin,,0,0,0,, 好了 我们讲完了如何压入 MVC\N{\fs12}All right. Okay. So, we talked about pushing this stuff on.
Dialogue: 0,0:35:47.86,0:35:49.96,yin,,0,0,0,, 让它显示在屏幕上 \N{\fs12}Okay. That’s how you get something to appear –
Dialogue: 0,0:35:49.96,0:35:51.73,yin,,0,0,0,, 方法是通过 push 类型 segue\N{\fs12}the segue, push segue.
Dialogue: 0,0:35:51.82,0:35:52.76,yin,,0,0,0,, 如何离开屏幕呢 \N{\fs12}How about coming off?
Dialogue: 0,0:35:52.78,0:35:56.25,yin,,0,0,0,, 通常情况下是通过用户点击返回按钮 \N{\fs12}Well normally, things are coming off by a user hitting the back button,
Dialogue: 0,0:35:56.52,0:35:58.15,yin,,0,0,0,, 这个时候就应该离开屏幕了 \N{\fs12}and that’s when you want it to happen.
Dialogue: 0,0:35:58.15,0:35:59.88,yin,,0,0,0,, 你希望用户能够感觉 \N{\fs12}You want the user to feel in control
Dialogue: 0,0:35:59.96,0:36:02.45,yin,,0,0,0,, 自己控制着深入细节和返回的操作 \N{\fs12}of their diving down for detail and coming back,
Dialogue: 0,0:36:03.04,0:36:04.52,yin,,0,0,0,, 所以那个返回按钮需要起作用 \N{\fs12}so you’ll want that back button to work.
Dialogue: 0,0:36:04.52,0:36:05.84,yin,,0,0,0,, 但在一些情况中 \N{\fs12}But there are a few times
Dialogue: 0,0:36:05.96,0:36:08.94,yin,,0,0,0,, 需要通过编程方式实现 \N{\fs12}when it makes sense to programmatically do it
Dialogue: 0,0:36:08.94,0:36:11.00,yin,,0,0,0,, 有一个例子是 假设 \N{\fs12}and one example is, let’s say,
Dialogue: 0,0:36:11.03,0:36:13.76,yin,,0,0,0,, 你打开详情页 显示了某条雇员记录 \N{\fs12}you dive down and you’re showing some employee record,
Dialogue: 0,0:36:13.84,0:36:16.29,yin,,0,0,0,, 里面有一个删除按钮 \N{\fs12}and a button in there is delete,
Dialogue: 0,0:36:16.44,0:36:17.94,yin,,0,0,0,, 表示删除这位雇员 \N{\fs12}meaning delete this employee.
Dialogue: 0,0:36:18.11,0:36:19.80,yin,,0,0,0,, 如果你点击了那个删除按钮 \N{\fs12}Well if you hit that delete button,
Dialogue: 0,0:36:20.00,0:36:21.96,yin,,0,0,0,, 就没有理由再留在这个页面了 \N{\fs12}it doesn’t make any sense to be here anymore,
Dialogue: 0,0:36:21.96,0:36:23.28,yin,,0,0,0,, 因为那位雇员没有了 \N{\fs12}because that employee is gone,
Dialogue: 0,0:36:23.51,0:36:24.66,yin,,0,0,0,, 所以你需要返回 \N{\fs12}so you want to go back.
Dialogue: 0,0:36:24.82,0:36:26.76,yin,,0,0,0,, 回到上一级 \N{\fs12}Okay. You want to go back to the previous level,
Dialogue: 0,0:36:26.91,0:36:29.97,yin,,0,0,0,, 所以你可以调用 UINavigationController 中的这个方法 \N{\fs12}and so you can call this method in UINavigationController
Dialogue: 0,0:36:30.10,0:36:32.86,yin,,0,0,0,, 叫做 popViewControllerAnimated\N{\fs12}called popViewControllerAnimated.
Dialogue: 0,0:36:32.95,0:36:35.20,yin,,0,0,0,, 而且动画参数几乎全部都是 YES\N{\fs12}We almost always specify yes, by the way, in animation.
Dialogue: 0,0:36:35.20,0:36:36.94,yin,,0,0,0,, 你并不希望 UI 跳来跳去 \N{\fs12}You don’t want your UI jumping around.
Dialogue: 0,0:36:36.94,0:36:40.43,yin,,0,0,0,, 你希望页面能够滑入 渐入等等 \N{\fs12}You want things sliding in and fading in and stuff like that,
Dialogue: 0,0:36:40.43,0:36:41.88,yin,,0,0,0,, 下面几周中 \N{\fs12}and we’re going to talk a lot about animation
Dialogue: 0,0:36:41.88,0:36:43.99,yin,,0,0,0,, 我们会讲到很多动画的内容 \N{\fs12}in the next couple weeks of your own stuff.
Dialogue: 0,0:36:44.45,0:36:46.83,yin,,0,0,0,, 你可能会问 \N{\fs12}But you might ask,
Dialogue: 0,0:36:47.34,0:36:49.59,yin,,0,0,0,, 如何得到当前 UINavigationController\N{\fs12}how do I get ahold of my UINavigationController
Dialogue: 0,0:36:49.60,0:36:50.84,yin,,0,0,0,, 向它发送这个消息呢 \N{\fs12}to send it this message
Dialogue: 0,0:36:51.08,0:36:54.42,yin,,0,0,0,, 这部分都是现成的 非常好用 \N{\fs12}and an awesome thing about this way is all set up is,
Dialogue: 0,0:36:54.42,0:36:55.81,yin,,0,0,0,, 如果你是一个视图控制器 \N{\fs12}if you are a view controller
Dialogue: 0,0:36:55.96,0:36:59.00,yin,,0,0,0,, 在一个导航控制器中 \N{\fs12}and you are inside a navigation controller –
Dialogue: 0,0:36:59.06,0:37:00.32,yin,,0,0,0,, 在它堆中的某个地方 \N{\fs12}anywhere on its stack,
Dialogue: 0,0:37:00.95,0:37:04.06,yin,,0,0,0,, 你可以得到自己的一个属性 \N{\fs12}you can get the property on yourself
Dialogue: 0,0:37:04.20,0:37:05.74,yin,,0,0,0,, 叫做 navigationController\N{\fs12}called navigationController
Dialogue: 0,0:37:05.74,0:37:08.00,yin,,0,0,0,, 它会返回你所在的导航控制器 \N{\fs12}and it will return you the navigation controller you’re in.
Dialogue: 0,0:37:09.27,0:37:09.96,yin,,0,0,0,, 明白吗 \N{\fs12}Does that make sense?
Dialogue: 0,0:37:09.96,0:37:11.82,yin,,0,0,0,, 如果你不在导航控制器中 \N{\fs12}If you’re not in a navigation controller,
Dialogue: 0,0:37:11.82,0:37:12.74,yin,,0,0,0,, 它就会直接返回 nil\N{\fs12}it’ll just return nil,
Dialogue: 0,0:37:13.22,0:37:15.23,yin,,0,0,0,,MVC 可以在很多环境中运行 \N{\fs12}and it’s perfectly reasonable to have MVCs
Dialogue: 0,0:37:15.23,0:37:16.92,yin,,0,0,0,, 可以在导航控制器中运行 \N{\fs12}that can live in a navigation controller,
Dialogue: 0,0:37:16.92,0:37:18.59,yin,,0,0,0,, 可以在选项卡栏控制器中运行 \N{\fs12}or live in a tab bar controller,
Dialogue: 0,0:37:18.65,0:37:21.50,yin,,0,0,0,, 或者是在选项卡栏控制器中的导航控制器中 \N{\fs12}or live in a navigation controller that’s inside a tab bar controller,
Dialogue: 0,0:37:21.51,0:37:22.66,yin,,0,0,0,, 或者是自己独立运行 \N{\fs12}or live on their own,
Dialogue: 0,0:37:22.66,0:37:24.47,yin,,0,0,0,, 或者是在模态情景下运行等等 \N{\fs12}or live in a modal situation, whatever.
Dialogue: 0,0:37:24.64,0:37:27.46,yin,,0,0,0,, 我们希望 MVC 可以运行于各种地方 \N{\fs12}You want to have MVCs that are flexible about where they live,
Dialogue: 0,0:37:28.07,0:37:29.50,yin,,0,0,0,, 所以有时这里会返回 nil\N{\fs12}so sometimes this’ll return nil,
Dialogue: 0,0:37:29.50,0:37:32.43,yin,,0,0,0,, 你可能要判断一下 如果在导航控制器中就弹出 \N{\fs12}and you might say, if I’m in a navigation controller then pop.
Dialogue: 0,0:37:32.49,0:37:34.75,yin,,0,0,0,, 如果不在 就做些别的 \N{\fs12}If I’m not then, you know, do something else.
Dialogue: 0,0:37:35.12,0:37:35.46,yin,,0,0,0,, 明白吧 \N{\fs12}All right.
Dialogue: 0,0:37:35.71,0:37:38.58,yin,,0,0,0,,self.navigationController 是控制器中很好用的属性 \N{\fs12}So, self dot navigationController is a good thing to know inside a controller.
Dialogue: 0,0:37:38.59,0:37:39.95,yin,,0,0,0,, 能告诉你当前所在的视图控制器 \N{\fs12}It tells you the view controller you’re in.
Dialogue: 0,0:37:40.07,0:37:41.83,yin,,0,0,0,, 此外还有 self.tabBarController\N{\fs12}There’s also self dot tabBarController.
Dialogue: 0,0:37:41.83,0:37:43.33,yin,,0,0,0,, 可以告诉你当前所在的选项卡栏控制器 \N{\fs12}You can find out the tab bar controller you’re in,
Dialogue: 0,0:37:43.35,0:37:44.91,yin,,0,0,0,, 但是几乎用不到 \N{\fs12}although you almost never need that,
Dialogue: 0,0:37:45.21,0:37:46.38,yin,,0,0,0,, 但 navigationController 是需要的 \N{\fs12}but navigationController you do,
Dialogue: 0,0:37:46.38,0:37:48.35,yin,,0,0,0,, 如果你要弹出或做其他操作的时候 \N{\fs12}if you’re going to pop or do some other things.
Dialogue: 0,0:37:49.85,0:37:51.49,yin,,0,0,0,, 除了 push 类型 还有什么类型的 segue 呢 \N{\fs12}What other segues are there besides push?
Dialogue: 0,0:37:51.49,0:37:53.15,yin,,0,0,0,, 我说到了 modal 和 popover\N{\fs12}I mentioned the modal and popover,
Dialogue: 0,0:37:53.16,0:37:54.42,yin,,0,0,0,, 还有一个 replace\N{\fs12}there’s also a replace,
Dialogue: 0,0:37:54.86,0:37:56.98,yin,,0,0,0,, 仅适用于 iPad 应用 \N{\fs12}which is an iPad only thing,
Dialogue: 0,0:37:56.98,0:37:58.14,yin,,0,0,0,, 还有 custom 类型 \N{\fs12}and there’s custom ones.
Dialogue: 0,0:37:58.23,0:38:01.31,yin,,0,0,0,, 后面几节课中我们会讲到 iPad 的内容 \N{\fs12}We’ll talk about iPad stuff in a few lectures,
Dialogue: 0,0:38:01.32,0:38:02.72,yin,,0,0,0,, 到时就会讲到这些类型 \N{\fs12}and we’ll cover all that then,
Dialogue: 0,0:38:02.97,0:38:04.25,yin,,0,0,0,, 再说一遍 我们要把 modal 放在后面讲解 \N{\fs12}and again, we’ll talk about modal later,
Dialogue: 0,0:38:04.27,0:38:05.75,yin,,0,0,0,, 因为它很容易被滥用 \N{\fs12}because it’s kind of easily abused.
Dialogue: 0,0:38:06.64,0:38:09.50,yin,,0,0,0,, 好的 现在我们讲一下 segue 时 \N{\fs12}Okay. So, now let’s talk about what happens in code
Dialogue: 0,0:38:09.51,0:38:10.47,yin,,0,0,0,, 代码中会发生什么 \N{\fs12}when a segue happens.
Dialogue: 0,0:38:10.55,0:38:11.96,yin,,0,0,0,, 我们已经知道屏幕上会发生什么了 \N{\fs12}We already know what happens on screen,
Dialogue: 0,0:38:11.96,0:38:13.79,yin,,0,0,0,, 也就是这个新的 MVC 滑进来 \N{\fs12}which is this new MVC slides in.
Dialogue: 0,0:38:14.16,0:38:16.46,yin,,0,0,0,, 从月份滑到日期 \N{\fs12}Right. Like the month slides into the day,
Dialogue: 0,0:38:16.46,0:38:19.90,yin,,0,0,0,, 从日期滑到事件等等 \N{\fs12}or the day slides into an event, you know, whatever,
Dialogue: 0,0:38:19.90,0:38:21.81,yin,,0,0,0,, 点击之后就滑到了新的 MVC 中 \N{\fs12}so they slide in as you click on them.
Dialogue: 0,0:38:21.83,0:38:23.05,yin,,0,0,0,, 但是代码中会发生什么呢 \N{\fs12}But what’s happening in your code?
Dialogue: 0,0:38:23.05,0:38:25.46,yin,,0,0,0,, 在新的 MVC 滑入之前 \N{\fs12}Well, there’s an important thing that needs to happen
Dialogue: 0,0:38:25.47,0:38:27.72,yin,,0,0,0,, 需要做一件很重要的事情 \N{\fs12}before a new MVC can slide in,
Dialogue: 0,0:38:27.75,0:38:29.37,yin,,0,0,0,, 就是它需要被准备好 \N{\fs12}which is that it needs to be prepared.
Dialogue: 0,0:38:29.72,0:38:31.71,yin,,0,0,0,, 我们回到日历这个例子 \N{\fs12}So let’s go back to the example of the calendar.
Dialogue: 0,0:38:31.81,0:38:33.05,yin,,0,0,0,, 当我点击–\N{\fs12}When I click on that –
Dialogue: 0,0:38:33.16,0:38:35.18,yin,,0,0,0,, 假设当前日历显示的是月视图 \N{\fs12}let’s say I’ve got a month’s view showing the calendar
Dialogue: 0,0:38:35.18,0:38:36.31,yin,,0,0,0,, 然后我选择了一天 \N{\fs12}and I pick on a day,
Dialogue: 0,0:38:36.53,0:38:38.72,yin,,0,0,0,, 日 MVC 就会滑进来 显示这一天 \N{\fs12}and now it’s going to slide it in to show me a day.
Dialogue: 0,0:38:38.92,0:38:42.43,yin,,0,0,0,, 我需要告诉那个日 MVC 当前选择了哪一天 \N{\fs12}I need to tell that day MVC what day.
Dialogue: 0,0:38:43.24,0:38:45.11,yin,,0,0,0,, 因为那个日 MVC\N{\fs12}Okay. Because that day MVC,
Dialogue: 0,0:38:46.23,0:38:48.07,yin,,0,0,0,, 也许它可以始终显示当前日期 \N{\fs12}I guess it could just always show today,
Dialogue: 0,0:38:48.07,0:38:50.50,yin,,0,0,0,, 但是日历应用中应该可以显示其他日期 \N{\fs12}but if you’re a calendar app you want it to be able to show other days,
Dialogue: 0,0:38:50.68,0:38:53.47,yin,,0,0,0,, 所以你需要为日 MVC 出现在屏幕上做准备 \N{\fs12}so you need to prepare that day MVC to come onscreen
Dialogue: 0,0:38:53.47,0:38:54.86,yin,,0,0,0,, 告诉它当前选中了哪一天 \N{\fs12}by telling it what day.
Dialogue: 0,0:38:55.24,0:38:57.86,yin,,0,0,0,, 你告诉它之后 它就可以独自运行了 \N{\fs12}Okay. Once you tell it what day, it’s on its own.
Dialogue: 0,0:38:58.15,0:38:59.44,yin,,0,0,0,, 出现在屏幕上 显示选中日期 \N{\fs12}It just goes off, shows the day,
Dialogue: 0,0:38:59.44,0:39:00.72,yin,,0,0,0,, 你可以滚动 \N{\fs12}you scroll around, you know,
Dialogue: 0,0:39:00.72,0:39:02.17,yin,,0,0,0,, 如果在上面点击某处 \N{\fs12}if you click on a thing,
Dialogue: 0,0:39:02.32,0:39:07.21,yin,,0,0,0,, 日 MVC 会将事件详情 MVC 压入显示 \N{\fs12}it’s the one that pushes again to push in the event detail one,
Dialogue: 0,0:39:07.30,0:39:08.47,yin,,0,0,0,, 但是你必须为它进行准备 \N{\fs12}but you’ve got to prepare it.
Dialogue: 0,0:39:08.69,0:39:10.60,yin,,0,0,0,,MVC 需要提前准备 \N{\fs12}Okay. So MVCs need to be prepared.
Dialogue: 0,0:39:10.60,0:39:12.23,yin,,0,0,0,, 谁来做准备工作呢 \N{\fs12}Well, who does the preparation?
Dialogue: 0,0:39:12.38,0:39:15.39,yin,,0,0,0,, 显然 是你点击的那个 MVC\N{\fs12}Obviously, it’s the MVC that you clicked in
Dialogue: 0,0:39:15.53,0:39:17.64,yin,,0,0,0,, 是它让其他 MVC 滑进来的 \N{\fs12}to cause this other MVC to slide in.
Dialogue: 0,0:39:17.64,0:39:19.32,yin,,0,0,0,, 在我们刚才做过的例子中 \N{\fs12}So in the example we just did,
Dialogue: 0,0:39:19.40,0:39:21.10,yin,,0,0,0,, 中间有按钮的那个 MVC\N{\fs12}the MVC that has the button in it,
Dialogue: 0,0:39:21.23,0:39:23.63,yin,,0,0,0,, 它应该有一个方法叫做 prepareForSegue\N{\fs12}it should have a method in it, prepareForSegue,
Dialogue: 0,0:39:24.13,0:39:26.71,yin,,0,0,0,, 为下一个 MVC 做准备 \N{\fs12}that prepares the next one over –
Dialogue: 0,0:39:26.73,0:39:28.68,yin,,0,0,0,, 为右边的 MVC 出现在屏幕上做准备 \N{\fs12}the one on the right to come onscreen.
Dialogue: 0,0:39:28.79,0:39:31.36,yin,,0,0,0,, 月 MVC 需要有一个 prepareForSegue 方法 \N{\fs12}The month one has to have a prepareForSegue
Dialogue: 0,0:39:31.36,0:39:34.03,yin,,0,0,0,, 为日视图控制器出现在屏幕上做准备 \N{\fs12}that prepares a day view controller for coming onscreen.
Dialogue: 0,0:39:34.35,0:39:36.45,yin,,0,0,0,,prepareForSegue 的代码是什么样的呢 \N{\fs12}So what does this prepareForSegue code look like?
Dialogue: 0,0:39:36.45,0:39:39.61,yin,,0,0,0,, 首先 它叫做 prepareForSegue: sender:\N{\fs12}Okay. First of all, it’s called prepareForSegue colon sender colon,
Dialogue: 0,0:39:39.87,0:39:41.46,yin,,0,0,0,, 现在不用考虑参数 sender\N{\fs12}don’t worry about that sender argument for now.
Dialogue: 0,0:39:41.46,0:39:43.48,yin,,0,0,0,, 用到它的时候 我们再讲 \N{\fs12}We’ll talk about when that’s useful,
Dialogue: 0,0:39:44.11,0:39:45.22,yin,,0,0,0,, 非常少见 \N{\fs12}it’s a pretty rare case.
Dialogue: 0,0:39:45.31,0:39:48.13,yin,,0,0,0,, 通常只需要第一个参数中的信息 \N{\fs12}Normally, you just need the information that’s in that first argument –
Dialogue: 0,0:39:48.13,0:39:49.45,yin,,0,0,0,, 也就是 UIStoryboardSegue\N{\fs12}the UIStoryboardSegue.
Dialogue: 0,0:39:49.45,0:39:50.93,yin,,0,0,0,, 看到那个 UIStoryboardSegue 了吧 \N{\fs12}You see that UIStoryboardSegue.
Dialogue: 0,0:39:50.94,0:39:52.24,yin,,0,0,0,, 如果你看一下这个类 \N{\fs12}If you go look at that class,
Dialogue: 0,0:39:52.39,0:39:54.84,yin,,0,0,0,, 就会看到两个非常有意思的属性 \N{\fs12}you’ll see there’s a couple of very interesting properties on it.
Dialogue: 0,0:39:55.08,0:39:58.32,yin,,0,0,0,, 一个是标识符 \N{\fs12}One of it is — one interesting property is identifier.
Dialogue: 0,0:39:58.89,0:40:01.88,yin,,0,0,0,, 也就是我们在 Xcode 中输入的字符串 DoSomething\N{\fs12}That’s that string we typed in in Xcode — DoSomething.
Dialogue: 0,0:40:02.32,0:40:02.90,yin,,0,0,0,, 还记得吗 \N{\fs12}Remember that?
Dialogue: 0,0:40:03.35,0:40:05.65,yin,,0,0,0,, 得到这个 preparedForSegue 时 \N{\fs12}So when you get this preparedForSegue,
Dialogue: 0,0:40:05.71,0:40:07.82,yin,,0,0,0,, 要做的第一件事就是 \N{\fs12}the first thing you’re going to do is
Dialogue: 0,0:40:07.87,0:40:10.37,yin,,0,0,0,, 查看 segue 的标识符 \N{\fs12}look at the identifier of the segue
Dialogue: 0,0:40:10.39,0:40:12.18,yin,,0,0,0,, 获得当前所说的 segue\N{\fs12}to see which segue we’re talking about.
Dialogue: 0,0:40:12.18,0:40:14.06,yin,,0,0,0,, 我们为什么要这么做呢 \N{\fs12}Now why do we even need to do that?
Dialogue: 0,0:40:14.21,0:40:17.85,yin,,0,0,0,, 答案是 我们可以有多个点触发 segue\N{\fs12}The answer is we can have multiple things segue,
Dialogue: 0,0:40:18.23,0:40:20.66,yin,,0,0,0,, 我们再回到月视图 \N{\fs12}so again, let’s go back to the month view.
Dialogue: 0,0:40:21.06,0:40:24.58,yin,,0,0,0,, 我可以点击一天 segue 到日视图 \N{\fs12}I can click on a day and it can segue to a day view,
Dialogue: 0,0:40:24.80,0:40:29.41,yin,,0,0,0,, 我也可以点击编辑之类的 \N{\fs12}but maybe I click on the edit, or something like that,
Dialogue: 0,0:40:29.42,0:40:33.11,yin,,0,0,0,, 它就可以 segue 到某个视图上 对月份进行编辑 \N{\fs12}and it could segue to some view that edits something about the month.
Dialogue: 0,0:40:33.24,0:40:35.80,yin,,0,0,0,, 比如每周从周日还是周一开始 \N{\fs12}Okay. Like, do they start on Sundays or do they start on Mondays,
Dialogue: 0,0:40:35.80,0:40:36.73,yin,,0,0,0,, 这种编辑视图 \N{\fs12}that kind of view.
Dialogue: 0,0:40:36.77,0:40:38.37,yin,,0,0,0,, 明白吗 我可以 segue 到不同的视图 \N{\fs12}See what I mean? So it could segue to a different one,
Dialogue: 0,0:40:38.38,0:40:41.88,yin,,0,0,0,, 所以月视图中有两个不同的控件 \N{\fs12}so you’d have two different controls inside the month view
Dialogue: 0,0:40:41.88,0:40:43.51,yin,,0,0,0,, 分别 segue 到不同的 MVC\N{\fs12}that are segueing to different MVC
Dialogue: 0,0:40:43.51,0:40:44.76,yin,,0,0,0,, 所以我们需要 \N{\fs12}so we need to know –
Dialogue: 0,0:40:44.98,0:40:47.10,yin,,0,0,0,, 通过标识符确认是哪个 segue\N{\fs12}we know which one it is by its identifier.
Dialogue: 0,0:40:47.73,0:40:52.53,yin,,0,0,0,, 确定目标 segue 之后–\N{\fs12}Okay. So, once we’ve checked to see which one we’re talking about here –
Dialogue: 0,0:40:52.53,0:40:53.51,yin,,0,0,0,, 我们总会执行这一步 \N{\fs12}and we always do that,
Dialogue: 0,0:40:53.51,0:40:55.07,yin,,0,0,0,, 即便只有一个 segue\N{\fs12}even if there’s only one segue,
Dialogue: 0,0:40:55.07,0:40:56.40,yin,,0,0,0,, 我们也都会检查标识符 \N{\fs12}we always check the identifier
Dialogue: 0,0:40:56.51,0:40:58.99,yin,,0,0,0,, 确保和 storyboard 中添加的是同一个 \N{\fs12}just to make sure we’re in sync with what we put in our storyboard,
Dialogue: 0,0:40:59.24,0:41:02.43,yin,,0,0,0,, 因为某天我们也许会再添加一个标识符不同的 segue\N{\fs12}because some day we may add another segue with a different identifier.
Dialogue: 0,0:41:04.39,0:41:06.03,yin,,0,0,0,, 然后 下面一步是 \N{\fs12}Then, the next thing we do
Dialogue: 0,0:41:06.04,0:41:10.23,yin,,0,0,0,, 确定要 segue 到哪个 MVC\N{\fs12}is we’re going to say what MVC are we segueing to?
Dialogue: 0,0:41:11.17,0:41:16.11,yin,,0,0,0,, 通常情况下 我们知道它的类是什么 \N{\fs12}Okay. Usually we are going to know what class of thing it is
Dialogue: 0,0:41:16.32,0:41:17.16,yin,,0,0,0,, 或者认为我们知道 \N{\fs12}or think we know,
Dialogue: 0,0:41:17.16,0:41:18.85,yin,,0,0,0,, 因为我们知道 segue 的标识符 \N{\fs12}because we know the identifier of the segue.
Dialogue: 0,0:41:18.85,0:41:20.56,yin,,0,0,0,, 如果你在月视图中 \N{\fs12}So it only makes sense if you’re in the month view
Dialogue: 0,0:41:20.68,0:41:22.03,yin,,0,0,0,, 点击了某一天 \N{\fs12}and you click on that day,
Dialogue: 0,0:41:22.47,0:41:25.14,yin,,0,0,0,, 这时候 segue 到日视图控制器才说得通 \N{\fs12}that thing it’s segueing to better be a day view controller,
Dialogue: 0,0:41:25.14,0:41:27.42,yin,,0,0,0,, 如果不是这样的话 你也不知道该做什么 对吧 \N{\fs12}because you don’t know what else to do if it’s not. Okay.
Dialogue: 0,0:41:27.47,0:41:30.13,yin,,0,0,0,, 但是即便这样 我们也会加上 \N{\fs12}But you still, even so, will usually do
Dialogue: 0,0:41:30.49,0:41:33.08,yin,,0,0,0,,segue.destinationViewController isKindOfClass\N{\fs12}segue.destinationViewController isKindOfClass,
Dialogue: 0,0:41:33.21,0:41:35.00,yin,,0,0,0,, 后面是我们想要的视图控制器 \N{\fs12}the view controller we expect.
Dialogue: 0,0:41:35.46,0:41:37.28,yin,,0,0,0,, 然后创建一个它的局部变量 \N{\fs12}Then we’ll make a little local variable with it,
Dialogue: 0,0:41:37.48,0:41:41.15,yin,,0,0,0,, 然后取局部变量 doVC 的属性值 \N{\fs12}and then we’re going to do doVC which is our local variable,
Dialogue: 0,0:41:41.23,0:41:42.90,yin,,0,0,0,,doVC.neededInfo=\N{\fs12}dot neededInfo equals,
Dialogue: 0,0:41:42.90,0:41:46.82,yin,,0,0,0,, 这算是准备日视图控制器的伪代码 \N{\fs12}what’s kind of pseudo code for preparing that day view controller.
Dialogue: 0,0:41:46.84,0:41:48.96,yin,,0,0,0,, 如果这是日视图的例子 \N{\fs12}So, if this were the day view example,
Dialogue: 0,0:41:48.97,0:41:54.54,yin,,0,0,0,, 这里可能会写成 doVC.date 等于某个 NSDate\N{\fs12}probably it would say doVC dot date equals some NSDate.
Dialogue: 0,0:41:55.08,0:41:57.06,yin,,0,0,0,, 这样我们就做好了日视图的准备工作 \N{\fs12}Right? And so now we’ve prepared the day thing.
Dialogue: 0,0:41:57.10,0:41:58.02,yin,,0,0,0,, 我们只需要做这些就行了 \N{\fs12}And that’s all we do here.
Dialogue: 0,0:41:58.29,0:41:59.71,yin,,0,0,0,, 其他操作都会神奇地自动执行 \N{\fs12}Everything else happens by magic.
Dialogue: 0,0:41:59.71,0:42:02.20,yin,,0,0,0,, 我们准备好新的 MVC 之后 \N{\fs12}Once we’ve prepared that new MVC,
Dialogue: 0,0:42:02.65,0:42:04.45,yin,,0,0,0,, 它出现在屏幕上 做它要做的事情 \N{\fs12}it goes onscreen, does what it does.
Dialogue: 0,0:42:04.64,0:42:07.01,yin,,0,0,0,, 滑动和动画都不用我们操心 \N{\fs12}We don’t have to do anything to make things slide or animate,
Dialogue: 0,0:42:07.01,0:42:08.24,yin,,0,0,0,, 都是由系统处理的 \N{\fs12}that’s all handled by the system.
Dialogue: 0,0:42:08.38,0:42:10.04,yin,,0,0,0,, 这里系统只需要你做一件事 \N{\fs12}All the system is asking right here is
Dialogue: 0,0:42:10.04,0:42:12.43,yin,,0,0,0,, 就是为 MVC 出现在屏幕上做准备 \N{\fs12}please prepare this MVC to come onscreen.
Dialogue: 0,0:42:12.61,0:42:15.39,yin,,0,0,0,, 这里需要理解一件很重要的事情 \N{\fs12}Now, very important thing to understand here,
Dialogue: 0,0:42:15.72,0:42:17.22,yin,,0,0,0,, 当调用这个方法时 \N{\fs12}when this is called,
Dialogue: 0,0:42:18.16,0:42:22.56,yin,,0,0,0,, 目标 MVC 中的输出口并没有设置好 \N{\fs12}your outlets are not set in the destination MVC.
Dialogue: 0,0:42:23.31,0:42:27.52,yin,,0,0,0,, 这个方法是在 awakeFromNib 和 viewDidLoad 之间被调用的 \N{\fs12}Okay. So this is between awakeFromNib and viewDidLoad.
Dialogue: 0,0:42:27.80,0:42:29.53,yin,,0,0,0,, 非常烦人 \N{\fs12}This is very annoying. Okay.
Dialogue: 0,0:42:29.69,0:42:30.78,yin,,0,0,0,, 我希望不是这样的 \N{\fs12}I wish this was different.
Dialogue: 0,0:42:31.02,0:42:33.77,yin,,0,0,0,, 我相信肯定有这样做的原因 \N{\fs12}I’m sure there must be a good reason why this is the way it is,
Dialogue: 0,0:42:33.77,0:42:34.80,yin,,0,0,0,, 但是这真的很烦人 \N{\fs12}but it’s very annoying,
Dialogue: 0,0:42:34.93,0:42:37.66,yin,,0,0,0,, 因为这种顺序意味着我们传递的所有信息 \N{\fs12}because it means that any information that you’re passing,
Dialogue: 0,0:42:37.66,0:42:39.52,yin,,0,0,0,, 比如传递给日视图的日期 \N{\fs12}like the day, to the day view,
Dialogue: 0,0:42:39.52,0:42:42.42,yin,,0,0,0,, 必须要等到输出口都设置好才能传递 \N{\fs12}it has to kind of hold on do it until all its outlets are set
Dialogue: 0,0:42:42.59,0:42:45.95,yin,,0,0,0,, 然后再在 viewDidLoad 中更新 UI\N{\fs12}and then in viewDidLoad, it can go update all its UI.
Dialogue: 0,0:42:47.05,0:42:48.85,yin,,0,0,0,, 我这么说明白吗 \N{\fs12}Does that make sense what I just said?
Dialogue: 0,0:42:49.90,0:42:52.24,yin,,0,0,0,, 你需要设置属性 \N{\fs12}Right. So you’re going to have to have properties
Dialogue: 0,0:42:52.24,0:42:53.79,yin,,0,0,0,, 用来保存日期 \N{\fs12}that are going to have to hold on to the day,
Dialogue: 0,0:42:53.90,0:42:56.35,yin,,0,0,0,, 然后在 viewDidLoad 执行时 它才能更新 UI\N{\fs12}and then when viewDidLoad happens, then it can update the UI.
Dialogue: 0,0:42:56.44,0:42:57.84,yin,,0,0,0,, 我会在示例中进行演示 \N{\fs12}And I’m going to show you in the demo,
Dialogue: 0,0:42:57.92,0:43:02.39,yin,,0,0,0,, 用一种大概算是样板化的方法 \N{\fs12}kind of a way that we might do it that’s somewhat boiler plate,
Dialogue: 0,0:43:02.39,0:43:03.77,yin,,0,0,0,, 或者 \N{\fs12}or somewhat kind of –
Dialogue: 0,0:43:04.23,0:43:06.39,yin,,0,0,0,, 我不知道能不能说它是最好的方法 \N{\fs12}I don’t know if I want to go so far as to say best practice –
Dialogue: 0,0:43:06.39,0:43:08.37,yin,,0,0,0,, 是简单的方法 \N{\fs12}simple practice for doing that –
Dialogue: 0,0:43:08.38,0:43:11.41,yin,,0,0,0,, 用来处理这个方法是在调用 viewDidLoad 之前 \N{\fs12}for dealing with the fact that this gets called before viewDidLoad,
Dialogue: 0,0:43:11.62,0:43:14.86,yin,,0,0,0,, 在输出口没有设好时被调用的问题 \N{\fs12}okay, before your outlets are set. Okay.
Dialogue: 0,0:43:15.38,0:43:17.71,yin,,0,0,0,,segue 是可以被阻止的 \N{\fs12}So it is possible to prevent a segue.
Dialogue: 0,0:43:17.71,0:43:19.13,yin,,0,0,0,, 对了 这里还有几张幻灯片 \N{\fs12}I have a few other slides, by the way,
Dialogue: 0,0:43:19.14,0:43:20.12,yin,,0,0,0,, 课上我就不讲了 \N{\fs12}that I’m not going over in lecture,
Dialogue: 0,0:43:20.12,0:43:21.76,yin,,0,0,0,, 大家可以下载到 \N{\fs12}but they’re on what you downloaded,
Dialogue: 0,0:43:21.77,0:43:23.27,yin,,0,0,0,, 通读一遍 \N{\fs12}so you can kind of read through them
Dialogue: 0,0:43:23.43,0:43:24.71,yin,,0,0,0,, 查看相关文档 就可以理解了 \N{\fs12}and look at the documentation to figure it out.
Dialogue: 0,0:43:24.72,0:43:27.18,yin,,0,0,0,, 这里我要再讲一些 segue 的内容 \N{\fs12}But I’m going to talk about a couple of segue things here.
Dialogue: 0,0:43:27.20,0:43:29.65,yin,,0,0,0,, 一是你可以阻止 segue 跳转 \N{\fs12}One is you can prevent a segue from happening
Dialogue: 0,0:43:29.66,0:43:33.59,yin,,0,0,0,, 方法是 shouldPerformsegueWithIdentifier: sender:\N{\fs12}by doing this shouldPerformsegueWithIdentifier colon sender colon,
Dialogue: 0,0:43:33.98,0:43:35.61,yin,,0,0,0,, 方法名就是它的含义 \N{\fs12}and that’s exactly what it says.
Dialogue: 0,0:43:35.61,0:43:38.19,yin,,0,0,0,, 返回 YES 或 NO 来表示是否允许某个 segue 跳转 \N{\fs12}You return yes or no whether you want that segue to happen.
Dialogue: 0,0:43:38.25,0:43:40.86,yin,,0,0,0,, 为什么我们不想允许 segue 跳转呢 \N{\fs12}Why would you never want — why would you not want this to happen?
Dialogue: 0,0:43:40.96,0:43:42.88,yin,,0,0,0,, 比如说你有一个按钮 \N{\fs12}Let’s say you have a button
Dialogue: 0,0:43:42.88,0:43:45.03,yin,,0,0,0,, 通常情况下 点击按钮之后就会进行 segue 跳转 \N{\fs12}and you click on it and it normally segues,
Dialogue: 0,0:43:45.03,0:43:46.64,yin,,0,0,0,, 但是因为某些原因 你不能进行 segue\N{\fs12}but for some reason you can’t segue.
Dialogue: 0,0:43:46.95,0:43:48.75,yin,,0,0,0,, 也许你没有权限 \N{\fs12}Okay. Maybe you don’t have permission,
Dialogue: 0,0:43:48.75,0:43:50.84,yin,,0,0,0,, 找不到日期了等等 \N{\fs12}or it can’t find the date, or whatever,
Dialogue: 0,0:43:50.84,0:43:52.77,yin,,0,0,0,, 所以这时你希望弹出一个警告 \N{\fs12}so instead you want to put up an alert
Dialogue: 0,0:43:52.90,0:43:56.52,yin,,0,0,0,, 说无法提供信息等等 \N{\fs12}that says could not, you know, provide the information, or whatever.
Dialogue: 0,0:43:56.74,0:44:01.12,yin,,0,0,0,, 不能直接用按钮上的目标操作 \N{\fs12}You can’t just have a target action from that button
Dialogue: 0,0:44:01.12,0:44:02.48,yin,,0,0,0,, 来弹出警告 \N{\fs12}that puts up the alert.
Dialogue: 0,0:44:02.69,0:44:05.04,yin,,0,0,0,, 你需要阻止 segue 跳转的发生 \N{\fs12}Okay. You need to prevent the segue from happening
Dialogue: 0,0:44:05.05,0:44:05.87,yin,,0,0,0,, 并弹出警告 \N{\fs12}and put up the alert.
Dialogue: 0,0:44:05.88,0:44:07.38,yin,,0,0,0,, 所以你需要用这个方法来阻止 segue\N{\fs12}So you prevent the segue with this
Dialogue: 0,0:44:07.97,0:44:09.41,yin,,0,0,0,, 然后再通过按钮的目标操作 \N{\fs12}and then you have target action from your button
Dialogue: 0,0:44:09.41,0:44:10.90,yin,,0,0,0,, 弹出警告 \N{\fs12}that puts up the altet.
Dialogue: 0,0:44:11.24,0:44:13.79,yin,,0,0,0,, 你显然不想同时弹出警告和进行 segue 跳转 \N{\fs12}Okay. That obviously, you wouldn’t want to put up the alert and segue,
Dialogue: 0,0:44:13.80,0:44:16.22,yin,,0,0,0,, 二者只能执行一项 \N{\fs12}so it — they want to be mutually exclusive,
Dialogue: 0,0:44:16.24,0:44:19.89,yin,,0,0,0,, 这就是阻止 segue 跳转的方法 \N{\fs12}but this is how you can prevent a segue. Okay.
Dialogue: 0,0:44:20.51,0:44:22.29,yin,,0,0,0,, 进入演示之前 \N{\fs12}Any questions before I dive into a demo
Dialogue: 0,0:44:22.29,0:44:23.98,yin,,0,0,0,, 有什么问题吗 \N{\fs12}to show you all this in action?
Dialogue: 0,0:44:25.22,0:44:26.86,yin,,0,0,0,, 好的 我来演示一下 \N{\fs12}All right. Here we go.
Dialogue: 0,0:44:27.91,0:44:29.34,yin,,0,0,0,, 这里我们要做的是 \N{\fs12}So what we’re going to do here
Dialogue: 0,0:44:30.10,0:44:37.05,yin,,0,0,0,, 回到 Attributor\N{\fs12}is we are going to go back to Attributor. Right?
Dialogue: 0,0:44:37.06,0:44:39.45,yin,,0,0,0,, 不用 Matchismo 了 我们这回用 Attributor 来演示 \N{\fs12}Instead of Matchismo, we’re going to do this in Attributor.
Dialogue: 0,0:44:40.73,0:44:42.97,yin,,0,0,0,, 好了 隐藏其他内容 \N{\fs12}All right. Let’s hide others here.
Dialogue: 0,0:44:43.58,0:44:45.29,yin,,0,0,0,,Attributor 就是这个样子的 \N{\fs12}So this is what Attributor looks like,
Dialogue: 0,0:44:46.15,0:44:48.11,yin,,0,0,0,, 两天前的例子 希望大家还记得 \N{\fs12}if you’ll remember, hopefully, from just two days ago.
Dialogue: 0,0:44:48.51,0:44:51.66,yin,,0,0,0,, 我们要做的是添加第二个 MVC\N{\fs12}And what we’re going to do is we’re going to add a second MVC,
Dialogue: 0,0:44:51.95,0:44:55.31,yin,,0,0,0,, 而这个 MVC 要做的是 \N{\fs12}and what this MVC is going to do is to analyze –
Dialogue: 0,0:44:55.31,0:44:57.19,yin,,0,0,0,, 分析某些文本 \N{\fs12}it’s going to analyze some text
Dialogue: 0,0:44:57.39,0:44:59.86,yin,,0,0,0,, 统计彩色字符有多少个 \N{\fs12}and say how many colored characters in there,
Dialogue: 0,0:44:59.86,0:45:02.08,yin,,0,0,0,, 带有轮廓的字符有多少个等等 \N{\fs12}how many outlined characters in there, etcetera.
Dialogue: 0,0:45:02.09,0:45:04.01,yin,,0,0,0,, 所以它会进行统计 \N{\fs12}Right. So it’s kind of a stat.
Dialogue: 0,0:45:04.04,0:45:06.49,yin,,0,0,0,, 告诉你某些文本的统计数据 \N{\fs12}It’s giving you statistics about some texts.
Dialogue: 0,0:45:06.51,0:45:08.56,yin,,0,0,0,, 现在我要把这个 MVC 移到一旁 \N{\fs12}Now, I’m going to put this aside
Dialogue: 0,0:45:08.77,0:45:12.39,yin,,0,0,0,, 单独做这个新的 MVC\N{\fs12}and do this new MVC completely independently.
Dialogue: 0,0:45:12.69,0:45:15.78,yin,,0,0,0,, 换句话说 我现在甚至不会考虑这个 MVC\N{\fs12}In other words, I’m not even going to think about this right now.
Dialogue: 0,0:45:15.86,0:45:19.33,yin,,0,0,0,, 我要创建第二个 MVC\N{\fs12}I’m going to build the second MVC that does this thing
Dialogue: 0,0:45:19.34,0:45:21.29,yin,,0,0,0,, 用来分析文本 得出统计结果 \N{\fs12}which is analyze text and give you result,
Dialogue: 0,0:45:22.32,0:45:23.29,yin,,0,0,0,, 然后我们会用到它 \N{\fs12}then we’ll use it.
Dialogue: 0,0:45:23.29,0:45:24.93,yin,,0,0,0,, 我只是想通过这样做 \N{\fs12}And I just want to do that to emphasize
Dialogue: 0,0:45:24.93,0:45:27.13,yin,,0,0,0,, 强调 MVC 的独立性 \N{\fs12}how we want MVCs to be independent.
Dialogue: 0,0:45:27.94,0:45:29.91,yin,,0,0,0,, 我们来设计那个 MVC\N{\fs12}Okay. So let’s design that MVC.
Dialogue: 0,0:45:29.96,0:45:32.25,yin,,0,0,0,, 先拖出一个视图控制器 \N{\fs12}We start by dragging out a view controller,
Dialogue: 0,0:45:32.70,0:45:33.43,yin,,0,0,0,, 像这样 \N{\fs12}just like this.
Dialogue: 0,0:45:34.16,0:45:36.61,yin,,0,0,0,, 然后为它新建一个类 \N{\fs12}Okay. We’re going to create a new class for it.
Dialogue: 0,0:45:37.74,0:45:39.70,yin,,0,0,0,, 我要叫它 \N{\fs12}Okay. And I’m going to call this thing –
Dialogue: 0,0:45:40.13,0:45:42.75,yin,,0,0,0,, 它是一个 UIViewController\N{\fs12}it’s going to be a UIViewController,
Dialogue: 0,0:45:43.16,0:45:44.51,yin,,0,0,0,, 我要叫它 \N{\fs12}and I’m going to call it –
Dialogue: 0,0:45:45.66,0:45:49.88,yin,,0,0,0,, 我们就叫它 TextStatsViewController\N{\fs12}let’s call it TextStatsViewController.
Dialogue: 0,0:45:49.90,0:45:52.75,yin,,0,0,0,, 我用的应该是这个名字 我看一下 没错 \N{\fs12}I think that’s the name I used. Make sure I did it. Yeah.
Dialogue: 0,0:45:53.64,0:45:54.77,yin,,0,0,0,,TextStatsViewController\N{\fs12}TextStatsViewController.
Dialogue: 0,0:45:54.77,0:45:57.22,yin,,0,0,0,, 也可以叫它 AnalyzeTextViewController 等等 \N{\fs12}We could call it AnalyzeTextViewController, something like that,
Dialogue: 0,0:45:57.24,0:46:00.38,yin,,0,0,0,, 但我认为 TextStatsViewController 虽然很难读 \N{\fs12}but I think TextStatsViewController — although it’s mouthful,
Dialogue: 0,0:46:00.53,0:46:01.53,yin,,0,0,0,, 但是具有很好的描述性 \N{\fs12}is pretty descriptive.
Dialogue: 0,0:46:02.17,0:46:04.19,yin,,0,0,0,, 保存在同一目录下 \N{\fs12}And so we’re going to put it at the same top level there,
Dialogue: 0,0:46:04.19,0:46:06.08,yin,,0,0,0,, 我们当然也可以将视图控制器进行分组 \N{\fs12}and we can of course group our view controllers too.
Dialogue: 0,0:46:06.55,0:46:09.93,yin,,0,0,0,, 这是 TextStatsViewController 的代码 \N{\fs12}Here’s the code for our TextStatsViewController.
Dialogue: 0,0:46:09.93,0:46:10.85,yin,,0,0,0,, 这里同样可以看到 \N{\fs12}You can see again,
Dialogue: 0,0:46:10.98,0:46:14.56,yin,,0,0,0,, 自动生成了这个指定初始化方法 我们不需要 \N{\fs12}we’ve got this nice designated initializer which we don’t want,
Dialogue: 0,0:46:14.68,0:46:16.62,yin,,0,0,0,, 还有一些视图控制器生命周期的代码 \N{\fs12}and we’ve got some view controller lifecycle,
Dialogue: 0,0:46:16.62,0:46:17.75,yin,,0,0,0,, 我们也不需要 \N{\fs12}we don’t want any of that. Okay.
Dialogue: 0,0:46:18.28,0:46:20.82,yin,,0,0,0,, 这个 TextStatsViewController\N{\fs12}So, this TextStatsViewController,
Dialogue: 0,0:46:21.94,0:46:24.30,yin,,0,0,0,, 本质上说 它是可重用的 \N{\fs12}it is essentially a reusable thing.
Dialogue: 0,0:46:24.30,0:46:25.70,yin,,0,0,0,, 需要一个公有 API\N{\fs12}It needs a public API.
Dialogue: 0,0:46:26.46,0:46:29.34,yin,,0,0,0,, 就像设计卡牌配对游戏时一样 \N{\fs12}Okay. And just like we did when we designed the card matching game
Dialogue: 0,0:46:29.34,0:46:33.67,yin,,0,0,0,, 我们想要先设置一个公有 API\N{\fs12}and we kind of tried to come up with a public API first
Dialogue: 0,0:46:33.76,0:46:35.78,yin,,0,0,0,, 然后才能考虑如何使用我们的元素 \N{\fs12}so we could think of how our thing is going to be used,
Dialogue: 0,0:46:35.83,0:46:37.43,yin,,0,0,0,, 这里我们要做完全一样的操作 \N{\fs12}we’re going to do exact same thing here.
Dialogue: 0,0:46:37.62,0:46:39.79,yin,,0,0,0,, 转到它的公有接口 \N{\fs12}So, I’m going to go to the public interface of this.
Dialogue: 0,0:46:39.81,0:46:42.78,yin,,0,0,0,, 这是 TextStatsViewController 的公有接口 \N{\fs12}this is the public interface for TextStatsViewController,
Dialogue: 0,0:46:42.96,0:46:44.83,yin,,0,0,0,, 我要增加一个属性 \N{\fs12}and I’m going to add a property,
Dialogue: 0,0:46:45.35,0:46:49.15,yin,,0,0,0,,nonatomic strong 是一个 NSAttributedString\N{\fs12}nonatomic strong, which is a NSAttributedString,
Dialogue: 0,0:46:49.56,0:46:52.00,yin,,0,0,0,, 叫做 textToAnalyze 待分析文本 \N{\fs12}which is the textToAnalyze.
Dialogue: 0,0:46:52.65,0:46:55.37,yin,,0,0,0,, 这个 MVC 的工作方式就是 \N{\fs12}Okay. So the way this MVC is going to work
Dialogue: 0,0:46:55.38,0:46:58.27,yin,,0,0,0,, 你为它设置一个 textToAnalyze\N{\fs12}is you set it a textToAnalyze
Dialogue: 0,0:46:58.27,0:46:59.55,yin,,0,0,0,, 是一个属性化字符串 \N{\fs12}which is an attributed string,
Dialogue: 0,0:46:59.55,0:47:00.95,yin,,0,0,0,, 然后它会对其进行分析 \N{\fs12}and it’s going to analyze it.
Dialogue: 0,0:47:01.82,0:47:04.11,yin,,0,0,0,, 就是这样 它就是这个功能 \N{\fs12}Okay. That’s it. That’s what it does.
Dialogue: 0,0:47:04.90,0:47:08.02,yin,,0,0,0,, 这就是它存在的意义 \N{\fs12}Okay. That’s its entire reason for being. Okay.
Dialogue: 0,0:47:08.03,0:47:09.66,yin,,0,0,0,, 但它是一个完整的 MVC\N{\fs12}But it’s an entire MVC,
Dialogue: 0,0:47:09.92,0:47:11.67,yin,,0,0,0,, 所以要有相应 UI 等 \N{\fs12}so it’s going to have the UI to do that,
Dialogue: 0,0:47:11.69,0:47:14.02,yin,,0,0,0,, 来实现这个功能 \N{\fs12}all that stuff to do that.
Dialogue: 0,0:47:14.40,0:47:16.95,yin,,0,0,0,, 那么如何实现呢 \N{\fs12}So, how are we going to implement something like this?
Dialogue: 0,0:47:18.44,0:47:21.06,yin,,0,0,0,, 我要先思考一下 \N{\fs12}Well, I’m going to start by thinking about
Dialogue: 0,0:47:21.52,0:47:25.81,yin,,0,0,0,, 如果我是这个 MVC\N{\fs12}how I want to react if I’m this MVC
Dialogue: 0,0:47:25.81,0:47:27.96,yin,,0,0,0,, 有人设置了 textToAnalyze 我要如何反应 \N{\fs12}when people set my textToAnalyze.
Dialogue: 0,0:47:28.25,0:47:31.29,yin,,0,0,0,, 显然 如果有人设置了 textToAnalyze\N{\fs12}And obviously, if someone sets my textToAnalyze,
Dialogue: 0,0:47:31.29,0:47:34.30,yin,,0,0,0,, 使用 setTextToAnalyze 这个公有方法 \N{\fs12}using setTextToAnalyze, right, the public method.
Dialogue: 0,0:47:34.78,0:47:37.33,yin,,0,0,0,, 显然 我需要在这里设置变量 \N{\fs12}Obviously, I want to set my variable here,
Dialogue: 0,0:47:37.40,0:47:39.62,yin,,0,0,0,, 我还要更新我的 UI\N{\fs12}but I’m also going to update my UI.
Dialogue: 0,0:47:40.67,0:47:43.72,yin,,0,0,0,, 只要有人设置了要分析的文本 \N{\fs12}Okay. So anytime someone sets the text to analyze,
Dialogue: 0,0:47:43.74,0:47:45.31,yin,,0,0,0,, 我就要更新 UI\N{\fs12}I’m going to update my UI.
Dialogue: 0,0:47:45.66,0:47:49.06,yin,,0,0,0,, 所以 我并不希望我的 UI\N{\fs12}So, I don’t want to allow my UI to ever get out of sync
Dialogue: 0,0:47:49.06,0:47:51.73,yin,,0,0,0,, 和我的模型不同步 \N{\fs12}with what is essentially my model.
Dialogue: 0,0:47:52.16,0:47:54.81,yin,,0,0,0,, 从本质上说 它就是这个 MVC 的模型 \N{\fs12}Okay. This is essentially the model for this MVC,
Dialogue: 0,0:47:54.92,0:47:56.36,yin,,0,0,0,, 就是要分析的文本 \N{\fs12}is the text to analyze.
Dialogue: 0,0:47:56.82,0:48:00.48,yin,,0,0,0,, 当然 我们还要加上 updateUI\N{\fs12}So, of course, we’re going to want nice updateUI,
Dialogue: 0,0:48:00.54,0:48:02.17,yin,,0,0,0,, 和另一个 MVC 中的很类似 \N{\fs12}very similar to that we had in the other one,
Dialogue: 0,0:48:02.19,0:48:04.20,yin,,0,0,0,, 我们一会实现它 \N{\fs12}and we’ll do that in a minute. Okay.
Dialogue: 0,0:48:05.76,0:48:11.10,yin,,0,0,0,, 还有一个时间点可能需要更新 UI\N{\fs12}But, there’s another time here when I might want to update my UI,
Dialogue: 0,0:48:11.92,0:48:14.79,yin,,0,0,0,, 就是在 viewWillAppear 视图将要出现时 \N{\fs12}and that is in viewWillAppear.
Dialogue: 0,0:48:15.59,0:48:18.50,yin,,0,0,0,, 这又回到了我们以前讲过的内容 \N{\fs12}And that’s back to what we were talking about before,
Dialogue: 0,0:48:18.74,0:48:24.90,yin,,0,0,0,, 如果我不在屏幕上的时候 textToAnalyze 被设置了怎么办 \N{\fs12}which is that if this textToAnalyze gets set when I’m not onscreen,
Dialogue: 0,0:48:24.91,0:48:26.90,yin,,0,0,0,, 也许是在输出口没有设置好的时候 \N{\fs12}maybe before my outlets are set,
Dialogue: 0,0:48:27.34,0:48:30.34,yin,,0,0,0,, 我希望视图将要出现时同步数据 \N{\fs12}okay, I want to come along when view will appear
Dialogue: 0,0:48:30.42,0:48:32.52,yin,,0,0,0,, 确保 UI 同步 \N{\fs12}and make sure my UI is in sync.
Dialogue: 0,0:48:32.97,0:48:36.72,yin,,0,0,0,, 因为显然 这个 updateUI 要向我的视图发送消息 \N{\fs12}Okay. Because this updateUI is obviously going to be taking to my view
Dialogue: 0,0:48:36.72,0:48:39.74,yin,,0,0,0,, 如果输出口没有设好 它不会做任何操作的 \N{\fs12}and if my outlets aren’t set, it won’t do anything. Okay.
Dialogue: 0,0:48:39.89,0:48:43.21,yin,,0,0,0,, 这个方法显然马上会在 prepareForSegue 中被调用 \N{\fs12}So this is obviously gonna get called in prepareForSegue in a moment,
Dialogue: 0,0:48:43.47,0:48:44.58,yin,,0,0,0,, 所以我要这样做 \N{\fs12}so that’s why I’m doing this,
Dialogue: 0,0:48:44.58,0:48:49.62,yin,,0,0,0,, 一般来说 在这两个地方都更新 UI\N{\fs12}but this is also kind of a generically good thing to update UI there,
Dialogue: 0,0:48:49.63,0:48:50.66,yin,,0,0,0,, 是比较好的做法 \N{\fs12}and update it here.
Dialogue: 0,0:48:50.79,0:48:52.83,yin,,0,0,0,, 有人可能会认为 真浪费 \N{\fs12}Now you might argue oh, what a waste.
Dialogue: 0,0:48:52.83,0:48:55.07,yin,,0,0,0,, 如果调用它的时候 输出口设好了呢 \N{\fs12}What if this is called and your outlets are set?
Dialogue: 0,0:48:55.41,0:48:58.70,yin,,0,0,0,, 你在这里更新了 UI 然后出现时又更新了一遍 \N{\fs12}You updated UI and then you appeared and you updated UI again.
Dialogue: 0,0:48:59.02,0:49:01.94,yin,,0,0,0,, 所以有人可能会认为这样做比较好 \N{\fs12}So, one might argue that it’s a good thing to do this.
Dialogue: 0,0:49:03.56,0:49:10.43,yin,,0,0,0,,self.view.window 是当前视图所在窗口 \N{\fs12}Okay. Self dot view dot window is the window that your view is in,
Dialogue: 0,0:49:10.49,0:49:13.12,yin,,0,0,0,,view 指的是你的 MVC 的顶级视图 \N{\fs12}view is the top level view of your MVC,
Dialogue: 0,0:49:13.12,0:49:15.67,yin,,0,0,0,, 如果它是 nil 那么你现在不在屏幕上 \N{\fs12}and if that’s nil, then you’re not onscreen right now.
Dialogue: 0,0:49:16.41,0:49:17.70,yin,,0,0,0,, 所以这样写的意思是 \N{\fs12}So what this says is,
Dialogue: 0,0:49:17.70,0:49:21.24,yin,,0,0,0,, 如果有人设置了待分析的文本 而且我在屏幕上 \N{\fs12}if someone sets the text I’m supposed to analyze and I’m onscreen,
Dialogue: 0,0:49:21.25,0:49:22.85,yin,,0,0,0,, 那么我最好更新我的 UI\N{\fs12}then I’d better update my UI.
Dialogue: 0,0:49:23.18,0:49:26.18,yin,,0,0,0,, 否则就让 viewWillAppear 替我执行 \N{\fs12}Otherwise, I’ll let viewWillAppear do it for me,
Dialogue: 0,0:49:26.76,0:49:29.08,yin,,0,0,0,, 因为我现在不在屏幕上 但最终会出现在屏幕上 \N{\fs12}because I’m not onscreen and I’m eventually going to come onscreen.
Dialogue: 0,0:49:29.09,0:49:32.26,yin,,0,0,0,, 实际上 除非我出现在屏幕上 否则我不会分析文本的 \N{\fs12}In fact, I’ll never analyze my text unless I get put onscreen,
Dialogue: 0,0:49:32.27,0:49:33.60,yin,,0,0,0,, 这样的性能也很好 \N{\fs12}so it’s kind of good performance too,
Dialogue: 0,0:49:33.61,0:49:36.59,yin,,0,0,0,, 尽管分析文本会变得不太重要 \N{\fs12}although analyzing text is going to be trivial. Okay.
Dialogue: 0,0:49:36.93,0:49:39.12,yin,,0,0,0,, 这是一种常用的模式 \N{\fs12}So this is kind of a common pattern
Dialogue: 0,0:49:39.32,0:49:41.42,yin,,0,0,0,, 设置输出口 \N{\fs12}to have outlets that you set
Dialogue: 0,0:49:41.57,0:49:43.96,yin,,0,0,0,, 如果你在屏幕上的话就更新 \N{\fs12}that if you’re onscreen will update,
Dialogue: 0,0:49:43.96,0:49:46.38,yin,,0,0,0,, 否则就等着让 viewWillAppear 来做 \N{\fs12}otherwise, you wait and let viewWillAppear do it.
Dialogue: 0,0:49:47.02,0:49:48.64,yin,,0,0,0,, 明白吧 好的 \N{\fs12}Okay. All right.
Dialogue: 0,0:49:48.66,0:49:51.02,yin,,0,0,0,, 我们讲讲如何更新 UI\N{\fs12}So let’s talk about update UI and how that’s going to work.
Dialogue: 0,0:49:51.02,0:49:52.91,yin,,0,0,0,, 先创建视图 \N{\fs12}Well, let’s build our view
Dialogue: 0,0:49:52.96,0:49:56.24,yin,,0,0,0,, 方便大家知道我们要创建的 UI 是怎样的 \N{\fs12}so you know what our UI is that we want to build here.
Dialogue: 0,0:49:56.24,0:49:58.32,yin,,0,0,0,,UI 会非常非常简单 \N{\fs12}So, I’m going to make this really, really simple,
Dialogue: 0,0:49:58.32,0:50:00.23,yin,,0,0,0,, 只是添加两个标签 \N{\fs12}so I’m just going to have a couple of labels here.
Dialogue: 0,0:50:00.89,0:50:04.95,yin,,0,0,0,, 这里写上 0 个彩色字符 \N{\fs12}I’m going to say zero colorful characters.
Dialogue: 0,0:50:06.18,0:50:08.66,yin,,0,0,0,, 我们会用在 Matchismo 中用过的 \N{\fs12}Okay. And then we’re going to do the same thing we did
Dialogue: 0,0:50:08.75,0:50:11.99,yin,,0,0,0,, 处理分数的方法 \N{\fs12}with the score in Matchismo
Dialogue: 0,0:50:12.00,0:50:13.91,yin,,0,0,0,, 用打印函数来修改标签 \N{\fs12}to change that with the printf thing,
Dialogue: 0,0:50:14.08,0:50:17.20,yin,,0,0,0,, 再添加一条带有轮廓字符的统计信息 \N{\fs12}and then we’ll also keep track of outlined characters,
Dialogue: 0,0:50:17.50,0:50:19.45,yin,,0,0,0,, 这个文本分析器中 \N{\fs12}but you could imagine that this text analyzer
Dialogue: 0,0:50:19.45,0:50:20.73,yin,,0,0,0,, 应该还有很多其他数据 \N{\fs12}would have a whole bunch of other lines,
Dialogue: 0,0:50:20.73,0:50:24.50,yin,,0,0,0,, 分析随机属性化文本的其他数据 \N{\fs12}where it’d analyze other thing that was in random attributed text.
Dialogue: 0,0:50:24.73,0:50:27.73,yin,,0,0,0,, 字体 加粗 斜体等等 \N{\fs12}Okay. Font, bold, italic, etcetera,
Dialogue: 0,0:50:27.73,0:50:29.25,yin,,0,0,0,, 但是这里我们就简化一下 \N{\fs12}but again, we’re going to make this simple.
Dialogue: 0,0:50:30.01,0:50:32.84,yin,,0,0,0,, 我需要更新这两条数据 \N{\fs12}So I need to update these two things with –
Dialogue: 0,0:50:33.30,0:50:38.31,yin,,0,0,0,, 通过分析模型 这里的这个模型 \N{\fs12}by analyzing whatever my model, this model right here,
Dialogue: 0,0:50:38.67,0:50:40.32,yin,,0,0,0,, 分析它的属性化字符串的内容情况 \N{\fs12}contains in terms of attributed strings.
Dialogue: 0,0:50:40.33,0:50:41.12,yin,,0,0,0,, 我要怎么实现呢 \N{\fs12}So how am I going to do that?
Dialogue: 0,0:50:41.13,0:50:45.51,yin,,0,0,0,, 我要为大家展示 \N{\fs12}Well, I’m going to do that in a way that shows off a little bit
Dialogue: 0,0:50:45.66,0:50:48.46,yin,,0,0,0,, 如何分析属性化字符串 \N{\fs12}how we analyze attributed strings.
Dialogue: 0,0:50:48.59,0:50:50.73,yin,,0,0,0,, 我会快速输入代码 \N{\fs12}Okay. I’m going to type this code in pretty quick
Dialogue: 0,0:50:50.73,0:50:52.36,yin,,0,0,0,, 因为显然我们时间不够了 \N{\fs12}because we’re time constrained, obviously,
Dialogue: 0,0:50:52.50,0:50:54.22,yin,,0,0,0,, 但大家要确保自己理解了这段代码 \N{\fs12}but you should make sure you understand this code.
Dialogue: 0,0:50:54.22,0:50:55.75,yin,,0,0,0,, 非常简单和直接 \N{\fs12}It’s very simple and straightforward,
Dialogue: 0,0:50:55.90,0:50:58.64,yin,,0,0,0,, 但是真的需要你理解属性化字符串 \N{\fs12}but it really requires that you understand attributed strings,
Dialogue: 0,0:50:58.64,0:50:59.84,yin,,0,0,0,, 所以这也同时检查了 \N{\fs12}so it’s a little bit of a double check
Dialogue: 0,0:50:59.85,0:51:02.39,yin,,0,0,0,, 大家对于属性化字符串的理解 \N{\fs12}of your attributed string understanding.
Dialogue: 0,0:51:02.74,0:51:03.88,yin,,0,0,0,, 我要做的是 \N{\fs12}So what I’m going to do is
Dialogue: 0,0:51:03.88,0:51:08.53,yin,,0,0,0,, 添加一个方法 叫做 charactersMatching–\N{\fs12}I’m going to have a method called charactersMatching –
Dialogue: 0,0:51:09.46,0:51:11.06,yin,,0,0,0,, 不如我们用这个吧 \N{\fs12}or we’ll just use this one like
Dialogue: 0,0:51:11.06,0:51:17.62,yin,,0,0,0,,charactersWithAttribute: (NSString )attributeName\N{\fs12}charactersWithAttribute NSString attributeName. Okay.
Dialogue: 0,0:51:17.83,0:51:19.58,yin,,0,0,0,, 这个方法要做的是 \N{\fs12}So what this is going to do is
Dialogue: 0,0:51:19.59,0:51:21.73,yin,,0,0,0,, 对 textToAnalyze 进行查找 \N{\fs12}it’s going to look in my textToAnalyze
Dialogue: 0,0:51:21.99,0:51:24.45,yin,,0,0,0,, 看有哪些字符具有这个属性 \N{\fs12}for any characters that have this attribute,
Dialogue: 0,0:51:24.47,0:51:29.30,yin,,0,0,0,, 比如 NSForegroundColor 和 strokeWidth 等 \N{\fs12}like NSForegroundColor attribute or in strokeWidth, or something like that,
Dialogue: 0,0:51:29.49,0:51:31.33,yin,,0,0,0,, 这个方法会返回一个字符串 \N{\fs12}and it’s going to return a string
Dialogue: 0,0:51:31.33,0:51:33.81,yin,,0,0,0,, 复制了所有符合条件的字符 \N{\fs12}that has all those characters cloned onto it.
Dialogue: 0,0:51:34.20,0:51:36.04,yin,,0,0,0,, 然后在 UI 中 \N{\fs12}And then in my UI,
Dialogue: 0,0:51:36.09,0:51:39.60,yin,,0,0,0,, 我只要知道长度就可以得到字符的数量 \N{\fs12}I’ll just specify how many of them there are by checking the length,
Dialogue: 0,0:51:40.50,0:51:41.93,yin,,0,0,0,, 通过字符串的长度 \N{\fs12}okay, of that string.
Dialogue: 0,0:51:42.17,0:51:44.56,yin,,0,0,0,, 有人可能会问 为什么要这么麻烦地收集字符 \N{\fs12}And you might ask why am I going to all the troubles to collect them up,
Dialogue: 0,0:51:44.77,0:51:45.81,yin,,0,0,0,, 等下就知道了 \N{\fs12}and you’ll see that later.
Dialogue: 0,0:51:46.44,0:51:48.61,yin,,0,0,0,, 如何把字符收集起来呢 \N{\fs12}Okay. So, how would I collect this up?
Dialogue: 0,0:51:48.61,0:51:51.33,yin,,0,0,0,, 我这样做是想为大家演示它是如何作用的 \N{\fs12}I’m doing it mostly because I want to show you how that would work.
Dialogue: 0,0:51:51.50,0:51:54.85,yin,,0,0,0,, 我要创建一个可变属性化字符串 用来收集字符 \N{\fs12}So I’m gonna create a mutable attributed string to collect all this into.
Dialogue: 0,0:51:54.85,0:51:56.03,yin,,0,0,0,, 叫它 characters\N{\fs12}I’ll call it characters,
Dialogue: 0,0:51:56.19,0:51:59.35,yin,,0,0,0,, 把两边的面板隐藏 腾出更大空间 \N{\fs12}and let’s make more space here on both sides.
Dialogue: 0,0:52:00.45,0:52:00.95,yin,,0,0,0,, 好的 \N{\fs12}Okay.
Dialogue: 0,0:52:01.68,0:52:04.86,yin,,0,0,0,, 然后是 [NSMutableAttributedString alloc] init\N{\fs12}So I’m just going to say NSMutableAttributedString alloc init,
Dialogue: 0,0:52:04.86,0:52:06.25,yin,,0,0,0,, 现在这是一个空的可变字符串 \N{\fs12}so here’s an empty mutable string
Dialogue: 0,0:52:06.27,0:52:10.44,yin,,0,0,0,, 我要在其中添加字符 然后返回字符串 \N{\fs12}that I’m going to put the characters in and return. Okay.
Dialogue: 0,0:52:10.55,0:52:13.59,yin,,0,0,0,, 所以在中间我需要收集符合条件的字符 \N{\fs12}So, in here I need to collect all this stuff.
Dialogue: 0,0:52:14.00,0:52:15.23,yin,,0,0,0,, 我要做什么呢 \N{\fs12}So what am I going to do?
Dialogue: 0,0:52:15.32,0:52:17.09,yin,,0,0,0,, 实际上 我要做的是 \N{\fs12}I’m actually just going to
Dialogue: 0,0:52:17.35,0:52:19.90,yin,,0,0,0,, 创建一个 while 循环 依次检查字符 \N{\fs12}do a while loop that goes through and looks at every character.
Dialogue: 0,0:52:20.45,0:52:21.57,yin,,0,0,0,, 再简单不过了 \N{\fs12}Okay. Couldn’t be simpler.
Dialogue: 0,0:52:21.78,0:52:25.14,yin,,0,0,0,, 这里写 int index=0\N{\fs12}So I’ll say int index equals zero
Dialogue: 0,0:52:26.38,0:52:33.88,yin,,0,0,0,, 当 index 小于 self.textToAnalyze 的长度时 \N{\fs12}while this index is less than the self textToAnalyze length,
Dialogue: 0,0:52:34.85,0:52:36.06,yin,,0,0,0,,while (index<[self.textToAnalyze lenth])\N{\fs12}oops, length.
Dialogue: 0,0:52:37.25,0:52:40.76,yin,,0,0,0,, 我就会收集字符 \N{\fs12}Then I’m going to collect the characters. Okay.
Dialogue: 0,0:52:40.77,0:52:43.35,yin,,0,0,0,, 这里多了一个方括号 \N{\fs12}Too many square brackets there. Okay.
Dialogue: 0,0:52:44.57,0:52:46.83,yin,,0,0,0,, 到这里大家都明白吧 \N{\fs12}So everyone understands this part so far, right?
Dialogue: 0,0:52:47.17,0:52:49.81,yin,,0,0,0,, 这部分最简单了 \N{\fs12}This part couldn’t be simpler.
Dialogue: 0,0:52:51.25,0:52:54.08,yin,,0,0,0,, 我们继续 \N{\fs12}So, now let’s go ahead
Dialogue: 0,0:52:54.09,0:52:57.59,yin,,0,0,0,, 获取这个属性的值 \N{\fs12}and get the value of this attribute
Dialogue: 0,0:52:57.86,0:52:59.48,yin,,0,0,0,, 这个位置的字符的属性值 \N{\fs12}at this character.
Dialogue: 0,0:53:00.08,0:53:03.06,yin,,0,0,0,, 叫做 value 它在这里是一个 ID 类型 \N{\fs12}So that’s value, and the value’s an ID here,
Dialogue: 0,0:53:03.40,0:53:07.19,yin,,0,0,0,, 因为它有可能是一种颜色 一种字体 对吧 \N{\fs12}because it could be a color, it could be a font. Right?
Dialogue: 0,0:53:07.22,0:53:09.40,yin,,0,0,0,, 可能是一个 NSNumber\N{\fs12}It could be NSNumber, so I’m –
Dialogue: 0,0:53:09.40,0:53:11.82,yin,,0,0,0,, 这样 ID 类型就派上用场了 \N{\fs12}this is where ID comes in handy dandy.
Dialogue: 0,0:53:12.13,0:53:21.51,yin,,0,0,0,, 然后是 self.textToAnalyze attribute:attributeName\N{\fs12}So let’s say self dot textToAnalyze attribute colon attributeName
Dialogue: 0,0:53:22.84,0:53:26.93,yin,,0,0,0,,atIndex: index effectiveRange\N{\fs12}atIndex: index effectiveRange. Okay.
Dialogue: 0,0:53:26.99,0:53:28.66,yin,,0,0,0,, 还记得这个 effectiveRange 吧 \N{\fs12}So this effectiveRange, remember I told you,
Dialogue: 0,0:53:28.66,0:53:32.49,yin,,0,0,0,, 它会返回具有相同属性的字符范围 \N{\fs12}is gonna return the range that this attribute is the same for.
Dialogue: 0,0:53:32.98,0:53:35.42,yin,,0,0,0,, 如果连续 12 个字符都具有这个属性 \N{\fs12}Right. So if this attribute is there for 12 characters in a row,
Dialogue: 0,0:53:35.42,0:53:37.25,yin,,0,0,0,, 它就会返回连续 12 个这样的范围 \N{\fs12}it’s going to return this range 12 in a row,
Dialogue: 0,0:53:37.25,0:53:38.80,yin,,0,0,0,, 我要得到这个范围 \N{\fs12}so I’m going to capture that range,
Dialogue: 0,0:53:38.80,0:53:40.08,yin,,0,0,0,, 你们会看到我为什么要这样做 \N{\fs12}and you’ll see why I want that.
Dialogue: 0,0:53:40.50,0:53:42.43,yin,,0,0,0,, 我最好新建一个局部变量 \N{\fs12}Okay. So I better create a local variable
Dialogue: 0,0:53:42.44,0:53:48.58,yin,,0,0,0,,NSRange range\N{\fs12}NSRanger, no, NSRange. Oh, hello, range, range.
Dialogue: 0,0:53:48.78,0:53:51.17,yin,,0,0,0,, 这只是这个结构体的局部变量 range\N{\fs12}So this is just a local variable range for this struct
Dialogue: 0,0:53:51.52,0:53:53.21,yin,,0,0,0,, 我要传递一个指针给它 \N{\fs12}and I’m just going to pass a pointer to it,
Dialogue: 0,0:53:53.21,0:53:56.24,yin,,0,0,0,,effectiveRange 把结构体填满 \N{\fs12}so that it fills that struct out with the effectiveRange.
Dialogue: 0,0:53:57.07,0:53:58.12,yin,,0,0,0,, 有问题吗 \N{\fs12}Got any questions there?
Dialogue: 0,0:53:58.94,0:53:59.48,yin,,0,0,0,, 好的 \N{\fs12}All right.
Dialogue: 0,0:53:59.49,0:54:02.16,yin,,0,0,0,, 如果 value 不为空 \N{\fs12}So, if the value is set,
Dialogue: 0,0:54:02.85,0:54:04.70,yin,,0,0,0,, 那就是我想要的 \N{\fs12}okay, that’s what I’m looking for.
Dialogue: 0,0:54:04.74,0:54:07.68,yin,,0,0,0,, 我要找那些设置了这个属性的字符 \N{\fs12}I’m looking for characters where this attribute is set.
Dialogue: 0,0:54:08.23,0:54:09.86,yin,,0,0,0,, 如果我查看的属性是前景色 \N{\fs12}Okay. So, if I’m looking at foreground color,
Dialogue: 0,0:54:09.86,0:54:11.12,yin,,0,0,0,, 那这就是带颜色的字符 \N{\fs12}this would be colored characters.
Dialogue: 0,0:54:11.36,0:54:12.24,yin,,0,0,0,, 如果我查看的是描边宽度 \N{\fs12}If I’m looking at stroke width,
Dialogue: 0,0:54:12.24,0:54:13.51,yin,,0,0,0,, 那就是带有轮廓的字符 \N{\fs12}it would be outlined characters.
Dialogue: 0,0:54:13.82,0:54:15.07,yin,,0,0,0,, 所以如果 value 不为空 \N{\fs12}So if the value is set,
Dialogue: 0,0:54:15.56,0:54:20.50,yin,,0,0,0,, 我就要将它加到 characters 中 \N{\fs12}then I’m going to take the characters and append onto it
Dialogue: 0,0:54:21.09,0:54:26.04,yin,,0,0,0,,textToAnalyze attributedSubstringFromRange\N{\fs12}the textToAnalyze attributedSubstringFromRange,
Dialogue: 0,0:54:26.05,0:54:27.42,yin,,0,0,0,, 然后是我得到的范围 range\N{\fs12}that range I just got back.
Dialogue: 0,0:54:29.59,0:54:30.68,yin,,0,0,0,, 大家都明白吗 \N{\fs12}Everyone make sense there?
Dialogue: 0,0:54:30.68,0:54:34.26,yin,,0,0,0,, 这里我收集了符合属性条件的字符 \N{\fs12}So I just collected those characters that matched that attribute,
Dialogue: 0,0:54:34.42,0:54:36.99,yin,,0,0,0,, 我还想加上 \N{\fs12}and I also want to say –
Dialogue: 0,0:54:37.00,0:54:40.44,yin,,0,0,0,, 这里可以用 index++ 进入下一个 index\N{\fs12}I could say index plus plus and just go to the next index,
Dialogue: 0,0:54:40.53,0:54:43.67,yin,,0,0,0,, 但是实际上 我们知道字符范围 \N{\fs12}but actually know that this range of character
Dialogue: 0,0:54:43.69,0:54:48.71,yin,,0,0,0,, 结束的位置是 range.location+range.length\N{\fs12}ends at range dot location plus range dot length.
Dialogue: 0,0:54:49.38,0:54:51.22,yin,,0,0,0,, 所以不需要逐一检查 \N{\fs12}Right. So there’s no need to check –
Dialogue: 0,0:54:51.22,0:54:52.82,yin,,0,0,0,, 我已经得到了这个范围 \N{\fs12}I already grabbed this range,
Dialogue: 0,0:54:52.82,0:54:54.84,yin,,0,0,0,, 只要直接跳到这个范围的末尾就可以了 \N{\fs12}so I need now to jump to the end of this range.
Dialogue: 0,0:54:55.47,0:54:57.93,yin,,0,0,0,, 如果这个字符没有设置这个属性 \N{\fs12}If the attribute is not set on this character,
Dialogue: 0,0:54:57.93,0:55:00.93,yin,,0,0,0,, 那我确实需要移到下一个 index\N{\fs12}then I do need to move to the next thing.
Dialogue: 0,0:55:01.42,0:55:03.03,yin,,0,0,0,, 移到下一个字符 \N{\fs12}Okay. To the next character,
Dialogue: 0,0:55:03.25,0:55:04.62,yin,,0,0,0,, 因为我是在这个 while 循环中 \N{\fs12}because I’m in this while loop right here,
Dialogue: 0,0:55:04.62,0:55:05.81,yin,,0,0,0,, 需要循环执行 \N{\fs12}I need to go round and round.
Dialogue: 0,0:55:06.58,0:55:07.73,yin,,0,0,0,, 好的 就是这样 \N{\fs12}Okay. So that’s it.
Dialogue: 0,0:55:08.13,0:55:10.52,yin,,0,0,0,, 希望大家都理解了这段代码 \N{\fs12}Hopefully, you all understand this code.
Dialogue: 0,0:55:11.42,0:55:13.79,yin,,0,0,0,, 如果没有 下面再看看 \N{\fs12}If you don’t, you definitely want to offline,
Dialogue: 0,0:55:14.17,0:55:15.97,yin,,0,0,0,, 确保自己理解了这部分的工作原理 \N{\fs12}make sure you understand how this works
Dialogue: 0,0:55:15.97,0:55:17.47,yin,,0,0,0,, 理解了可变字符串 \N{\fs12}so that you understand mutable strings
Dialogue: 0,0:55:17.48,0:55:20.33,yin,,0,0,0,, 理解了属性化字符串 \N{\fs12}or attributed strings. Okay.
Dialogue: 0,0:55:20.51,0:55:24.12,yin,,0,0,0,, 注意这里返回的是一个不可变属性化字符串 \N{\fs12}So now, notice that I’m returning a non-mutable attributed string here
Dialogue: 0,0:55:24.21,0:55:26.63,yin,,0,0,0,, 而它显然是一个可变属性化字符串 \N{\fs12}and this is clearly a mutable attributed string,
Dialogue: 0,0:55:26.63,0:55:27.77,yin,,0,0,0,, 这样完全没问题 \N{\fs12}and that’s perfectly fine.
Dialogue: 0,0:55:28.33,0:55:30.94,yin,,0,0,0,, 这样意味着 不管是谁调用这个方法 \N{\fs12}What that says is whoever’s calling this,
Dialogue: 0,0:55:30.94,0:55:32.77,yin,,0,0,0,, 都不应该认为它是可变的 \N{\fs12}shouldn’t rely on this being mutable.
Dialogue: 0,0:55:33.15,0:55:34.71,yin,,0,0,0,, 应该假设它是不可变的 \N{\fs12}They should assume it’s not mutable.
Dialogue: 0,0:55:34.78,0:55:37.29,yin,,0,0,0,,updateUI 会调用这个方法 \N{\fs12}And so, updateUI is going to call this
Dialogue: 0,0:55:37.29,0:55:41.59,yin,,0,0,0,, 它不应该尝试改变这些字符 \N{\fs12}and it should be sure not to try and change these characters,
Dialogue: 0,0:55:41.59,0:55:44.07,yin,,0,0,0,, 如果不进行类型转换 这也是不允许的 \N{\fs12}and it won’t be allowed to either without doing some sort of casting
Dialogue: 0,0:55:44.08,0:55:47.58,yin,,0,0,0,, 因为编译器不允许赋值给可变字符串 \N{\fs12}because the compiler is not gonna let you assign this to a mutable string.
Dialogue: 0,0:55:47.59,0:55:50.16,yin,,0,0,0,, 我把这个方法移到上面这里 \N{\fs12}I’m going to move this up here like this,
Dialogue: 0,0:55:50.46,0:55:52.17,yin,,0,0,0,, 我们继续 用下面这行代码 \N{\fs12}and so let’s go ahead and use this.
Dialogue: 0,0:55:53.46,0:55:55.44,yin,,0,0,0,, 可能看起来很长 \N{\fs12}This might seem like a really long line of code,
Dialogue: 0,0:55:55.44,0:55:57.17,yin,,0,0,0,, 但也很简单 \N{\fs12}but it’s pretty straightforward,
Dialogue: 0,0:55:57.34,0:56:02.96,yin,,0,0,0,, 我们需要添加一些指向它们的输出口 \N{\fs12}so we need to have some outlets that point to these things.
Dialogue: 0,0:56:03.33,0:56:05.80,yin,,0,0,0,, 指向这两个标签 我们做一下 \N{\fs12}Right. These little guys right here, so let’s do that.
Dialogue: 0,0:56:09.39,0:56:13.79,yin,,0,0,0,, 这正好是我刚才说过的内容的例子 \N{\fs12}Okay. So, here’s an example of exactly what I was talking about.
Dialogue: 0,0:56:13.90,0:56:15.56,yin,,0,0,0,, 我想在这里创建一个输出口 \N{\fs12}I want to create an outlet here
Dialogue: 0,0:56:15.80,0:56:17.89,yin,,0,0,0,, 怎么回事 \N{\fs12}and what’s going on?
Dialogue: 0,0:56:17.90,0:56:19.37,yin,,0,0,0,, 为什么不能创建这个输出口呢 \N{\fs12}How come I can’t create this outlet?
Dialogue: 0,0:56:19.77,0:56:22.04,yin,,0,0,0,, 是自动没错 \N{\fs12}Okay. This is on automatic.
Dialogue: 0,0:56:22.49,0:56:23.63,yin,,0,0,0,, 怎么回事呢 \N{\fs12}What’s going on here?
Dialogue: 0,0:56:23.63,0:56:27.02,yin,,0,0,0,, 答案是 它还是一个 UIViewController\N{\fs12}Well the answer is, this is still UIViewController,
Dialogue: 0,0:56:27.41,0:56:28.77,yin,,0,0,0,, 所以我需要转到这里 \N{\fs12}so I need to go over here,
Dialogue: 0,0:56:29.27,0:56:30.28,yin,,0,0,0,, 打开标识符检查器 \N{\fs12}go to here,
Dialogue: 0,0:56:30.41,0:56:33.02,yin,,0,0,0,, 这里现在是 UIViewController\N{\fs12}and instead of having UIViewController here,
Dialogue: 0,0:56:33.02,0:56:35.29,yin,,0,0,0,, 我要改成 TextStatsViewController\N{\fs12}I need TextStatsViewController.
Dialogue: 0,0:56:35.66,0:56:37.24,yin,,0,0,0,, 看看发生了什么 \N{\fs12}Okay. Now look what happened.
Dialogue: 0,0:56:37.34,0:56:39.00,yin,,0,0,0,, 系统自动更新了代码 \N{\fs12}It automatically updated this.
Dialogue: 0,0:56:39.74,0:56:42.33,yin,,0,0,0,, 自动模式发挥了它的作用 \N{\fs12}Okay. The automatic did its automatic job.
Dialogue: 0,0:56:42.78,0:56:46.76,yin,,0,0,0,, 现在我就可以在这里按住 control 键拖动到这里了 \N{\fs12}Okay. So now I can control drag from here to here –
Dialogue: 0,0:56:46.77,0:56:50.58,yin,,0,0,0,, 我们叫它 colorfulCharactersLabel 彩色字符标签 \N{\fs12}we’ll call this colorfulCharactersLabel,
Dialogue: 0,0:56:51.32,0:56:53.81,yin,,0,0,0,, 我还要从这里拖动到这里 \N{\fs12}and I’ll also drag from here to here
Dialogue: 0,0:56:53.82,0:56:58.72,yin,,0,0,0,, 我要叫它 outlinedCharactersLabel 带有轮廓字符标签 \N{\fs12}and we’ll call this outlinedCharactersLabel. Okay.
Dialogue: 0,0:56:59.55,0:57:00.44,yin,,0,0,0,, 看懂了吗 \N{\fs12}Everyone see that?
Dialogue: 0,0:57:01.91,0:57:03.67,yin,,0,0,0,, 剩下要做的 \N{\fs12}All right. So all we have left to do here
Dialogue: 0,0:57:03.68,0:57:05.68,yin,,0,0,0,, 就是实现 updateUI 方法 \N{\fs12}is implement our updateUI
Dialogue: 0,0:57:05.69,0:57:08.50,yin,,0,0,0,, 让这两个标签 \N{\fs12}to make these two labels here
Dialogue: 0,0:57:08.82,0:57:10.71,yin,,0,0,0,, 能够正确显示字符串长度 \N{\fs12}properly display the length of the characters
Dialogue: 0,0:57:10.72,0:57:14.16,yin,,0,0,0,, 而长度是通过下面的 charactersWithAttribute 计算出的 \N{\fs12}that we calculated with this charactersWithAttribute down here.
Dialogue: 0,0:57:14.42,0:57:16.64,yin,,0,0,0,, 腾出更大空间 \N{\fs12}So let’s make a lot more space.
Dialogue: 0,0:57:16.64,0:57:19.60,yin,,0,0,0,, 转到这里 只显示视图控制器 \N{\fs12}Let’s go over here, just showing our view controller.
Dialogue: 0,0:57:20.67,0:57:24.36,yin,,0,0,0,, 实际上 updateUI 方法中要做的是 \N{\fs12}And in updateUI all we really need to do
Dialogue: 0,0:57:24.37,0:57:26.59,yin,,0,0,0,, 得到具有指定属性的字符 \N{\fs12}is get the characters with the given attribute,
Dialogue: 0,0:57:26.59,0:57:29.56,yin,,0,0,0,, 无论属性是颜色还是轮廓 \N{\fs12}whether it be color or the outline
Dialogue: 0,0:57:29.72,0:57:31.49,yin,,0,0,0,, 然后计算字符个数 \N{\fs12}and count how many characters in there.
Dialogue: 0,0:57:31.50,0:57:34.96,yin,,0,0,0,, 我们用 self–\N{\fs12}So let’s do self dot –
Dialogue: 0,0:57:35.99,0:57:39.05,yin,,0,0,0,, 先用 self.charactersWithAttribute\N{\fs12}sorry, let’s do self dot charactersWithAttribute first.
Dialogue: 0,0:57:39.06,0:57:42.73,yin,,0,0,0,, 我们先看颜色属性的情况 \N{\fs12}And let’s do the color ones first,
Dialogue: 0,0:57:42.73,0:57:47.01,yin,,0,0,0,, 对应属性是 NSForegroundColorAttributeName\N{\fs12}which the attribute there would be the ForegroundColorAttributeName.
Dialogue: 0,0:57:47.28,0:57:49.04,yin,,0,0,0,, 现在我们得到了这些字符 \N{\fs12}So now we’ve got these characters.
Dialogue: 0,0:57:49.54,0:57:51.33,yin,,0,0,0,, 看一下 \N{\fs12}And let’s see.
Dialogue: 0,0:57:51.33,0:57:54.96,yin,,0,0,0,, 得到字符后 就可以计算字符个数了 \N{\fs12}Now that we have them, we can count them.
Dialogue: 0,0:57:55.20,0:57:59.43,yin,,0,0,0,, 方法是发送字符串的长度 \N{\fs12}So let’s do that by sending length of the string.
Dialogue: 0,0:57:59.44,0:58:01.25,yin,,0,0,0,, 现在我们就知道这里有多少个字符了 \N{\fs12}So now we know how many characters there are here.
Dialogue: 0,0:58:01.40,0:58:04.53,yin,,0,0,0,, 现在我们就可以更新那个字段了 \N{\fs12}So now we can update that field,
Dialogue: 0,0:58:04.58,0:58:09.43,yin,,0,0,0,, 也就是 self.colorfulCharactersLabel.text\N{\fs12}which is our self dot colorfulCharactersLabel text.
Dialogue: 0,0:58:09.76,0:58:14.02,yin,,0,0,0,, 然后是 NSString stringWithFormat:\N{\fs12}And we’ll do that by saying NSString stringWithFormat,
Dialogue: 0,0:58:14.92,0:58:20.85,yin,,0,0,0,,@”%d colorful characters”\N{\fs12}percent D colorful characters,
Dialogue: 0,0:58:22.30,0:58:25.16,yin,,0,0,0,, 参数就是刚才写好的这个计算结果 \N{\fs12}and the argument is this thing we just calculated right here.
Dialogue: 0,0:58:26.53,0:58:27.73,yin,,0,0,0,, 这个写好了 \N{\fs12}Okay? So we got that.
Dialogue: 0,0:58:27.73,0:58:29.40,yin,,0,0,0,, 再做一次 \N{\fs12}And let’s do the exact same thing here
Dialogue: 0,0:58:29.66,0:58:33.25,yin,,0,0,0,, 带有轮廓字符的情况 \N{\fs12}with the outlined characters.
Dialogue: 0,0:58:33.46,0:58:36.80,yin,,0,0,0,, 这里改成 outlined characters\N{\fs12}And these are outlined characters.
Dialogue: 0,0:58:36.82,0:58:42.56,yin,,0,0,0,, 这里改成 NSStrokeWidthAttributeName\N{\fs12}And this is the NSStrokeWidthAttributeName.
Dialogue: 0,0:58:43.86,0:58:47.58,yin,,0,0,0,, 我们找到了具有该属性的字符 \N{\fs12}Okay? So we’ve went and found the characters that have that attribute,
Dialogue: 0,0:58:47.66,0:58:49.13,yin,,0,0,0,, 计算了它们的数量 \N{\fs12}found out how many there are,
Dialogue: 0,0:58:49.88,0:58:52.35,yin,,0,0,0,, 然后创建了一个格式化字符串 \N{\fs12}and then we created a string with format
Dialogue: 0,0:58:52.40,0:58:54.18,yin,,0,0,0,, 显示在标签上 \N{\fs12}that displayed that into the label.
Dialogue: 0,0:58:55.48,0:58:57.46,yin,,0,0,0,, 这样并不是完全正确的 \N{\fs12}Okay. This is not 100% correct,
Dialogue: 0,0:58:57.46,0:59:01.51,yin,,0,0,0,, 如果设置的颜色是黑色呢 \N{\fs12}because what if the color set on something is black?
Dialogue: 0,0:59:02.12,0:59:03.67,yin,,0,0,0,, 并不是彩色的字符 \N{\fs12}It’s not a very colorful character.
Dialogue: 0,0:59:03.78,0:59:06.31,yin,,0,0,0,, 或者如果设置了描边宽度 \N{\fs12}Or what if the stroke width is set,
Dialogue: 0,0:59:06.31,0:59:07.42,yin,,0,0,0,, 但是宽度设为 0 呢 \N{\fs12}but it’s set to zero,
Dialogue: 0,0:59:07.44,0:59:12.47,yin,,0,0,0,, 所以这并不是一个很好的实现方法 但是很简单 \N{\fs12}so this is not a great implementation, but it’s simple.
Dialogue: 0,0:59:12.53,0:59:13.50,yin,,0,0,0,, 能够给你一种思路 \N{\fs12}It gives you the idea.
Dialogue: 0,0:59:14.38,0:59:18.43,yin,,0,0,0,, 有时 我喜欢在新建 MVC 时测试一下 \N{\fs12}Now one thing I like to do when I build a new MVC sometimes is test it.
Dialogue: 0,0:59:18.91,0:59:23.09,yin,,0,0,0,, 测试的方法是添加一个简单的 viewDidLoad 方法 \N{\fs12}Okay. So I’m going to test this by adding a little viewDidLoad.
Dialogue: 0,0:59:24.02,0:59:26.51,yin,,0,0,0,, 这是 viewDidLoad\N{\fs12}Okay. So here’s viewDidLoad,
Dialogue: 0,0:59:28.41,0:59:32.72,yin,,0,0,0,, 这里要写的是 self.textToAnalyze=\N{\fs12}and what I’m going to do is self dot textToAnalyze equals
Dialogue: 0,0:59:32.97,0:59:40.80,yin,,0,0,0,,[NSAttributedString alloc] initWithString:@”test” attributes:\N{\fs12}NSAttributedString alloc initWithString test attributes,
Dialogue: 0,0:59:40.82,0:59:42.36,yin,,0,0,0,, 后面我要加上某些测试属性 \N{\fs12}and I’m going to put some test attributes in here
Dialogue: 0,0:59:42.36,0:59:45.72,yin,,0,0,0,, 比如前景色为绿色 \N{\fs12}like NSForegroundColor, green,
Dialogue: 0,0:59:47.33,0:59:49.88,yin,,0,0,0,, 再加上描边宽度属性 \N{\fs12}and also let’s put NSStrokeWidth –
Dialogue: 0,0:59:51.18,0:59:53.75,yin,,0,0,0,, 比如 -3 之类的 \N{\fs12}call it minus three, or something like that.
Dialogue: 0,0:59:55.24,0:59:56.61,yin,,0,0,0,, 好了 我写好了 \N{\fs12}Right. So I have this.
Dialogue: 0,0:59:56.61,0:59:59.62,yin,,0,0,0,, 现在 当这个 MVC 出现时 \N{\fs12}So now, when this MVC appears,
Dialogue: 0,0:59:59.63,1:00:01.67,yin,,0,0,0,, 它的 viewDidLoad 方法会设置它的模型 \N{\fs12}its viewDidLoad is going to set its own model,
Dialogue: 0,1:00:02.19,1:00:03.65,yin,,0,0,0,, 是一种很好的测试方法 \N{\fs12}which is kind of a good testing thing,
Dialogue: 0,1:00:04.05,1:00:05.68,yin,,0,0,0,, 我们回去做一下 \N{\fs12}so let’s go back and do that.
Dialogue: 0,1:00:05.83,1:00:06.95,yin,,0,0,0,, 我们如何做这个测试呢 \N{\fs12}And how would we do that test?
Dialogue: 0,1:00:06.95,1:00:08.39,yin,,0,0,0,, 这里是我们的 storyboard\N{\fs12}So we got our storyboard here,
Dialogue: 0,1:00:08.39,1:00:11.26,yin,,0,0,0,, 我们直接把这个箭头移到这里 \N{\fs12}what if we just pick this guy up and put it over here?
Dialogue: 0,1:00:12.33,1:00:13.55,yin,,0,0,0,, 现在我再运行这个应用 \N{\fs12}Now when I run this app,
Dialogue: 0,1:00:13.55,1:00:16.48,yin,,0,0,0,, 就会直接来到这个 MVC 跳过左边这个 \N{\fs12}it’s going to go straight to this MVC and just bypass –
Dialogue: 0,1:00:16.49,1:00:18.70,yin,,0,0,0,, 不会用到左边这个 \N{\fs12}this is not even going to be used right now,
Dialogue: 0,1:00:18.70,1:00:19.88,yin,,0,0,0,, 因为我只是测试右边这个 MVC\N{\fs12}because I’m just going to test this guy.
Dialogue: 0,1:00:19.88,1:00:21.39,yin,,0,0,0,, 我们试试 \N{\fs12}So let’s try that.
Dialogue: 0,1:00:21.39,1:00:22.73,yin,,0,0,0,, 看看我有没有忘记什么 \N{\fs12}See if I forgot anything.
Dialogue: 0,1:00:28.15,1:00:31.52,yin,,0,0,0,, 不是模拟器 我换一下 \N{\fs12}Oops, simulator. I’ll do this on the –
Dialogue: 0,1:00:35.57,1:00:37.33,yin,,0,0,0,, 我们在设备上运行 \N{\fs12}Let’s go put it on the device.
Dialogue: 0,1:00:44.48,1:00:47.46,yin,,0,0,0,,test 这个词中有四个字符 \N{\fs12}Okay. So the word test has four characters in it,
Dialogue: 0,1:00:47.46,1:00:48.83,yin,,0,0,0,, 希望运行出来显示的是 \N{\fs12}so hopefully this is going to come up and say
Dialogue: 0,1:00:48.83,1:00:50.92,yin,,0,0,0,,4 个彩色字符 4 个带有轮廓字符 \N{\fs12}four colorful characters and four outline characters,
Dialogue: 0,1:00:51.09,1:00:51.81,yin,,0,0,0,, 是运行正常的 \N{\fs12}so it’s working.
Dialogue: 0,1:00:52.17,1:00:55.03,yin,,0,0,0,, 我可以删掉一个属性 \N{\fs12}And I could go delete one of those attributes,
Dialogue: 0,1:00:55.03,1:00:56.18,yin,,0,0,0,, 检查数量是否显示为 0\N{\fs12}make sure it says zero.
Dialogue: 0,1:00:56.18,1:00:57.90,yin,,0,0,0,, 还可以换一个比 test 长的单词 \N{\fs12}I could change the word to be longer than test
Dialogue: 0,1:00:57.90,1:00:58.97,yin,,0,0,0,, 检查显示数量是否大于 4\N{\fs12}to make sure it says more than four.
Dialogue: 0,1:00:58.97,1:00:59.56,yin,,0,0,0,, 明白吗 \N{\fs12}You see what I mean?
Dialogue: 0,1:00:59.56,1:01:01.79,yin,,0,0,0,, 明白我是如何测试这个 MVC 检查它是否正常运行的吗 \N{\fs12}See how I can kind of test this MVC to make sure it’s working?
Dialogue: 0,1:01:02.17,1:01:04.14,yin,,0,0,0,, 但我们现在就相信它 \N{\fs12}So, we’re going to take our word for it though
Dialogue: 0,1:01:04.14,1:01:06.06,yin,,0,0,0,, 这样测试就够了 它运行正常 \N{\fs12}that’s enough testing and that it’s working,
Dialogue: 0,1:01:06.47,1:01:08.22,yin,,0,0,0,, 删掉 viewDidLoad\N{\fs12}so I’m going to get rid of viewDidLoad.
Dialogue: 0,1:01:08.39,1:01:10.01,yin,,0,0,0,, 这些也可以放到 \N{\fs12}This is something you might put this in
Dialogue: 0,1:01:10.01,1:01:12.88,yin,,0,0,0,,ifdef 之类的测试中 \N{\fs12}some sort of ifdef testing or something like that.
Dialogue: 0,1:01:12.88,1:01:13.91,yin,,0,0,0,, 大家都知道怎么做 \N{\fs12}You know how to do all that,
Dialogue: 0,1:01:14.39,1:01:15.45,yin,,0,0,0,, 也可以那样做 \N{\fs12}so you could do that as well,
Dialogue: 0,1:01:15.45,1:01:17.46,yin,,0,0,0,, 我就直接删掉 viewDidLoad 了 \N{\fs12}but I’m just going to delete viewDidLoad,
Dialogue: 0,1:01:18.23,1:01:21.94,yin,,0,0,0,, 现在这里我有了一个非常好用的 MVC\N{\fs12}but I have a really nice working MVC right here
Dialogue: 0,1:01:22.05,1:01:25.23,yin,,0,0,0,, 能告诉我某段给定文本中 \N{\fs12}that tells how many characters are colored and outlined
Dialogue: 0,1:01:25.25,1:01:26.20,yin,,0,0,0,, 有多少彩色和带有轮廓的字符 \N{\fs12}in a given piece of text.
Dialogue: 0,1:01:26.20,1:01:28.95,yin,,0,0,0,, 显然 现在应用可以从这里开始了 \N{\fs12}Well now, obviously, I could use if from this guy –
Dialogue: 0,1:01:28.95,1:01:30.14,yin,,0,0,0,, 我们把箭头移回去 \N{\fs12}let’s move this guy back.
Dialogue: 0,1:01:30.54,1:01:35.89,yin,,0,0,0,, 我要把它们放到一个导航控制器中 \N{\fs12}And I’m going to put these inside of a navigation controller,
Dialogue: 0,1:01:36.05,1:01:37.53,yin,,0,0,0,, 我还要在导航控制器顶栏上 \N{\fs12}and I’m going to actually add a button
Dialogue: 0,1:01:37.53,1:01:39.47,yin,,0,0,0,, 添加一个按钮 \N{\fs12}to the navigation controller’s bar,
Dialogue: 0,1:01:39.69,1:01:41.03,yin,,0,0,0,, 在这个 MVC 显示时出现 \N{\fs12}when this one’s visible,
Dialogue: 0,1:01:41.15,1:01:43.46,yin,,0,0,0,, 用来 segue 到这个 MVC\N{\fs12}that will segue over to this guy.
Dialogue: 0,1:01:43.90,1:01:44.77,yin,,0,0,0,, 我们做一下 \N{\fs12}Okay. So let’s do that.
Dialogue: 0,1:01:44.77,1:01:46.65,yin,,0,0,0,, 先把它加到导航控制器中 \N{\fs12}Let’s put it in navigation controller first.
Dialogue: 0,1:01:47.16,1:01:48.25,yin,,0,0,0,, 腾出更大空间 \N{\fs12}More space here.
Dialogue: 0,1:01:48.46,1:01:51.81,yin,,0,0,0,, 我只要选择嵌入导航控制器 \N{\fs12}so I’m just going to embed in navigation controller. Right.
Dialogue: 0,1:01:52.45,1:01:54.69,yin,,0,0,0,, 放进去了 上面自动添加了一栏 \N{\fs12}Boom, puts it in. Okay. It got a bar.
Dialogue: 0,1:01:54.75,1:01:56.43,yin,,0,0,0,, 注意这个 MVC 并没有顶栏 \N{\fs12}Notice that this one did not get a bar.
Dialogue: 0,1:01:56.80,1:01:59.58,yin,,0,0,0,, 为什么 因为还没有元素能够 segue 到它这里 \N{\fs12}Why? Because there’s nothing that segues to this yet,
Dialogue: 0,1:01:59.70,1:02:01.44,yin,,0,0,0,, 导航控制器中没有 \N{\fs12}that’s inside this navigation controller.
Dialogue: 0,1:02:01.90,1:02:03.55,yin,,0,0,0,, 还发生了一件不太好的事 \N{\fs12}Another bad thing happened though.
Dialogue: 0,1:02:03.58,1:02:06.02,yin,,0,0,0,,CS193p Rocks 不见了 \N{\fs12}I lost my CS193P rocks.
Dialogue: 0,1:02:06.43,1:02:09.08,yin,,0,0,0,, 我们知道 CS193p 确实很棒 \N{\fs12}Okay. And we know that CS193P does rock,
Dialogue: 0,1:02:09.08,1:02:11.47,yin,,0,0,0,, 所以我们不希望这句话被遮掉 \N{\fs12}so we do not want it blocked like that,
Dialogue: 0,1:02:11.74,1:02:14.78,yin,,0,0,0,, 如果某个元素像这样被遮掉了 \N{\fs12}so one thing you can do is if something gets blocked like this,
Dialogue: 0,1:02:14.78,1:02:16.74,yin,,0,0,0,, 你想着 我得把它改好 \N{\fs12}you know like, oh no, I’ve got to go fix that,
Dialogue: 0,1:02:16.80,1:02:19.20,yin,,0,0,0,, 你可以直接删除导航控制器 \N{\fs12}you can just delete the navigation controller
Dialogue: 0,1:02:19.21,1:02:20.40,yin,,0,0,0,, 就会回到之前的状态 \N{\fs12}and you’ll be back where you were,
Dialogue: 0,1:02:20.40,1:02:21.43,yin,,0,0,0,, 或者点击撤消 \N{\fs12}or you can hit undo.
Dialogue: 0,1:02:21.66,1:02:23.70,yin,,0,0,0,, 实际上 我要删掉它 \N{\fs12}So I’m actually going to get rid of this
Dialogue: 0,1:02:23.70,1:02:26.18,yin,,0,0,0,, 将它放到灰栏上 \N{\fs12}and put it in that gray bar instead.
Dialogue: 0,1:02:26.51,1:02:28.88,yin,,0,0,0,, 放在那里很合适 \N{\fs12}It’s a perfectly reasonable place for it to go.
Dialogue: 0,1:02:28.88,1:02:30.06,yin,,0,0,0,, 也许我应该把上边界降低一点 \N{\fs12}Maybe I’ll move this down a little bit
Dialogue: 0,1:02:30.06,1:02:31.82,yin,,0,0,0,, 确保等下大小合适 \N{\fs12}to make sure it fits on there.
Dialogue: 0,1:02:31.87,1:02:34.81,yin,,0,0,0,, 现在再选中它 \N{\fs12}So now let’s go back and select this again
Dialogue: 0,1:02:35.15,1:02:36.38,yin,,0,0,0,, 选择嵌入 \N{\fs12}and embed it.
Dialogue: 0,1:02:38.33,1:02:39.99,yin,,0,0,0,, 现在又回到了导航控制器中 \N{\fs12}Okay. So now we’re back in here.
Dialogue: 0,1:02:40.25,1:02:44.82,yin,,0,0,0,, 现在我可以把 CS193p Rocks 放在这里 \N{\fs12}All right. And now I can put my CS193p rocks here.
Dialogue: 0,1:02:45.66,1:02:47.55,yin,,0,0,0,, 放在这里很合适 \N{\fs12}Okay. Perfectly reasonable place to put it.
Dialogue: 0,1:02:48.04,1:02:48.92,yin,,0,0,0,, 得到了这个界面 \N{\fs12}And I’ve got this.
Dialogue: 0,1:02:48.92,1:02:51.27,yin,,0,0,0,, 还可以往上拉一点 \N{\fs12}Maybe I would line that up there or there,
Dialogue: 0,1:02:51.74,1:02:53.60,yin,,0,0,0,, 根据蓝线的指引 \N{\fs12}depends on where the blue lines say. Okay.
Dialogue: 0,1:02:53.73,1:02:54.48,yin,,0,0,0,, 得到了这个界面 \N{\fs12}So I got that.
Dialogue: 0,1:02:54.79,1:02:56.94,yin,,0,0,0,, 现在我想在这里添加一个小按钮 \N{\fs12}Now I want to put a little button right here,
Dialogue: 0,1:02:57.00,1:02:58.65,yin,,0,0,0,, 都还记得怎么做吧 \N{\fs12}so if everyone remembers how to do that.
Dialogue: 0,1:02:58.65,1:03:01.02,yin,,0,0,0,, 滚动到下面 \N{\fs12}We go all the way down to the bottom here
Dialogue: 0,1:03:01.91,1:03:04.35,yin,,0,0,0,, 找到 Bar Button Item 栏按钮项 在这里 \N{\fs12}and we find bar button item, which is right here,
Dialogue: 0,1:03:04.45,1:03:05.34,yin,,0,0,0,, 将它拖出 \N{\fs12}and we drag it up.
Dialogue: 0,1:03:05.52,1:03:06.51,yin,,0,0,0,, 放在这里 \N{\fs12}We put it right there.
Dialogue: 0,1:03:06.70,1:03:08.13,yin,,0,0,0,, 它是用来显示统计数据的 \N{\fs12}This is going to show the stats,
Dialogue: 0,1:03:08.13,1:03:09.51,yin,,0,0,0,, 我就叫它 Stats\N{\fs12}so I’m going to call this Stats.
Dialogue: 0,1:03:10.04,1:03:10.38,yin,,0,0,0,, 好的 \N{\fs12}All right.
Dialogue: 0,1:03:11.04,1:03:13.05,yin,,0,0,0,, 每次点击 Stats 时 \N{\fs12}And now, every time I click on stats,
Dialogue: 0,1:03:13.11,1:03:17.24,yin,,0,0,0,, 我想让这个 MVC 滑进来 替换掉左边的 MVC\N{\fs12}I want this MVC to slide in here and replace this one,
Dialogue: 0,1:03:17.25,1:03:20.01,yin,,0,0,0,, 在 Stats 上按住 control 键拖动到这里 \N{\fs12}so I’m going to control drag to here.
Dialogue: 0,1:03:20.47,1:03:23.57,yin,,0,0,0,, 导航控制器中的 segue 类型都是 push\N{\fs12}Okay. Inside of navigation controller it’s always push.
Dialogue: 0,1:03:24.23,1:03:26.00,yin,,0,0,0,, 这里出现了一个 segue\N{\fs12}Okay. There’s a segue right here.
Dialogue: 0,1:03:26.06,1:03:29.17,yin,,0,0,0,, 如果我们点击这个 segue 转到属性检查器 \N{\fs12}If we click on this segue and go to the attributes inspector
Dialogue: 0,1:03:29.34,1:03:30.79,yin,,0,0,0,, 可以看到它是一个 push 类型 segue\N{\fs12}and see that it’s a push segue,
Dialogue: 0,1:03:31.01,1:03:34.06,yin,,0,0,0,, 我们要叫它 Show Stats 显示统计数据 \N{\fs12}and we’re going to call this show stats
Dialogue: 0,1:03:34.14,1:03:37.76,yin,,0,0,0,, 或者换个更好的 Analyze Text 分析文本 \N{\fs12}or even maybe better, Analyze Text.
Dialogue: 0,1:03:38.44,1:03:39.98,yin,,0,0,0,, 标识符最好选择一个 \N{\fs12}Okay. So, we want to have something in there
Dialogue: 0,1:03:39.98,1:03:41.94,yin,,0,0,0,, 能够清楚说明 segue 作用的名称 \N{\fs12}that makes it clear what this segue does.
Dialogue: 0,1:03:42.03,1:03:43.80,yin,,0,0,0,, 在这里 它的作用是分析文本 \N{\fs12}It analyzes the text in this case.
Dialogue: 0,1:03:44.39,1:03:45.94,yin,,0,0,0,, 我们要做的最后一件事是 \N{\fs12}Okay. Now the last thing we need to do
Dialogue: 0,1:03:45.94,1:03:48.55,yin,,0,0,0,, 为这个 MVC 出现在屏幕上做准备 \N{\fs12}is prepare this MVC to come onscreen,
Dialogue: 0,1:03:48.59,1:03:52.36,yin,,0,0,0,, 也就是将模型设置为这个文本视图中的文本 \N{\fs12}basically, by setting its model to be the text that’s in this text view.
Dialogue: 0,1:03:52.60,1:03:54.73,yin,,0,0,0,, 要在这里实现 \N{\fs12}Right. So we do that in here.
Dialogue: 0,1:03:54.98,1:03:57.88,yin,,0,0,0,, 让右边 MVC 出现在屏幕上的准备工作是由它完成的 \N{\fs12}The preparation for this to come onscreen is done by this guy,
Dialogue: 0,1:03:57.88,1:04:02.41,yin,,0,0,0,, 因为 segue 是由它发出的 \N{\fs12}because this guy’s the guy causing the segue.
Dialogue: 0,1:04:02.74,1:04:03.65,yin,,0,0,0,, 我们转到这里 \N{\fs12}So let’s go here.
Dialogue: 0,1:04:03.65,1:04:05.20,yin,,0,0,0,, 我们是在自动模式下 \N{\fs12}As we do this we’re on automatic,
Dialogue: 0,1:04:05.20,1:04:07.57,yin,,0,0,0,, 所以我们可以看到它的代码 在这里 \N{\fs12}so we’re going to see this guy’s code. Here it is.
Dialogue: 0,1:04:07.84,1:04:10.06,yin,,0,0,0,, 希望大家还记得上次的代码 \N{\fs12}Okay. Hopefully, you remember this code from last time,
Dialogue: 0,1:04:10.55,1:04:12.71,yin,,0,0,0,, 我们来添加 prepareForSegue 方法 \N{\fs12}and let’s go ahead and put the prepareForSegue.
Dialogue: 0,1:04:12.72,1:04:15.18,yin,,0,0,0,, 放在上面 这样我更顺手 \N{\fs12}We’ll put it at the top because it works nicer for me.
Dialogue: 0,1:04:15.75,1:04:16.93,yin,,0,0,0,,prepareForSegue\N{\fs12}prepareForSegue.
Dialogue: 0,1:04:18.45,1:04:21.04,yin,,0,0,0,, 在这个 prepareForSegue 方法中 \N{\fs12}All right. And all we have to do inside this prepareForSegue
Dialogue: 0,1:04:21.12,1:04:23.32,yin,,0,0,0,, 我们只要为这个 segue 做准备 \N{\fs12}is prepare for this particular segue.
Dialogue: 0,1:04:23.32,1:04:24.52,yin,,0,0,0,, 我们只有这一个 segue\N{\fs12}It’s the only segue we have,
Dialogue: 0,1:04:24.93,1:04:27.17,yin,,0,0,0,, 把代码区拉大一点 \N{\fs12}so I’m going to make more space here,
Dialogue: 0,1:04:28.43,1:04:32.74,yin,,0,0,0,, 往这边滚动一下 这样在我们编写代码的时候 \N{\fs12}actually let’s scroll over so you can see the segue in your mind,
Dialogue: 0,1:04:32.76,1:04:33.84,yin,,0,0,0,, 大家能看到这个 segue\N{\fs12}while we’re working on this.
Dialogue: 0,1:04:34.96,1:04:37.60,yin,,0,0,0,, 再选中它 好了 \N{\fs12}Just click this back again. There we go.
Dialogue: 0,1:04:38.09,1:04:40.15,yin,,0,0,0,, 那么在 prepareForSegue 中我们做什么呢 \N{\fs12}Okay. So in prepareForSegue what do we do?
Dialogue: 0,1:04:40.15,1:04:41.82,yin,,0,0,0,, 就像我刚才说过的 我们要做的第一件事 \N{\fs12}Well, like I said, the first thing we’re going to do
Dialogue: 0,1:04:41.98,1:04:48.46,yin,,0,0,0,, 就是确保目标 segue 就是这个特定的 segue\N{\fs12}is we’re going to make sure we’re talking about this particular segue,
Dialogue: 0,1:04:48.48,1:04:53.94,yin,,0,0,0,, 也就是 Analyze Text\N{\fs12}which is the Analyze Text one.
Dialogue: 0,1:04:53.96,1:04:56.49,yin,,0,0,0,, 当然 如果你在这里输错了 \N{\fs12}Now, of course, if you mistype this here,
Dialogue: 0,1:04:56.92,1:04:59.12,yin,,0,0,0,, 不会得到任何警告之类的 \N{\fs12}you’re not going to get any warning or anything like that,
Dialogue: 0,1:04:59.13,1:05:01.66,yin,,0,0,0,, 如果这里输错了 它只是不会正常运行 \N{\fs12}or if you mistype it over there, and it’s just not going to work,
Dialogue: 0,1:05:01.85,1:05:04.46,yin,,0,0,0,, 因为不能正确准备那个 MVC\N{\fs12}because it’s not going to prepare that MVC properly,
Dialogue: 0,1:05:04.47,1:05:07.91,yin,,0,0,0,, 我觉得系统功能在这里有点缺陷 \N{\fs12}so it’s a little bit of a weakness I think of the way this system works,
Dialogue: 0,1:05:07.91,1:05:09.85,yin,,0,0,0,, 只要增加一个调试操作 \N{\fs12}but it’s just a debugging thing
Dialogue: 0,1:05:09.85,1:05:12.96,yin,,0,0,0,, 就能检查这里的文本是否与 segue 标识符一致 \N{\fs12}to make sure your text here matches the text there.
Dialogue: 0,1:05:14.12,1:05:18.09,yin,,0,0,0,, 我知道 当我在这里进行 segue 跳转时 \N{\fs12}All right. So I know that when I’m segueing here,
Dialogue: 0,1:05:18.17,1:05:22.59,yin,,0,0,0,, 需要用到这个 TextStatsViewController\N{\fs12}I need to use this TextStatsViewController.
Dialogue: 0,1:05:23.44,1:05:30.14,yin,,0,0,0,, 我可以在这里导入目标 MVC 的类 \N{\fs12}Okay. So it’s okay for me to import that MVC’s class in here,
Dialogue: 0,1:05:30.15,1:05:32.91,yin,,0,0,0,, 因为它基本算是我的视图的一部分 \N{\fs12}because it’s part of my view almost,
Dialogue: 0,1:05:33.02,1:05:34.18,yin,,0,0,0,, 所以你可以认为 \N{\fs12}so you can kind of think of it –
Dialogue: 0,1:05:34.18,1:05:36.19,yin,,0,0,0,, 统计 MVC 是另一个 MVC 视图的一部分 \N{\fs12}the stats as being part of the view of this other one,
Dialogue: 0,1:05:36.22,1:05:38.52,yin,,0,0,0,, 是下一级 \N{\fs12}because it’s sub — you know, a sub thing,
Dialogue: 0,1:05:38.54,1:05:40.05,yin,,0,0,0,, 所以可以这样做 \N{\fs12}so it’s okay to do that,
Dialogue: 0,1:05:40.06,1:05:43.52,yin,,0,0,0,, 但是我最好再确认一下我们要 segue 去的 \N{\fs12}but I better make sure that the destination view controller
Dialogue: 0,1:05:43.71,1:05:49.49,yin,,0,0,0,, 目标视图控制器属于 TextStatsViewController 类 \N{\fs12}that we’re gonna be segueing to is kind of TextStatsViewController.
Dialogue: 0,1:05:50.67,1:05:54.01,yin,,0,0,0,, 如果是的话 我就在这里创建一个局部变量 \N{\fs12}Okay. But if it is, then I’ll create a little local variable here,
Dialogue: 0,1:05:54.01,1:05:57.61,yin,,0,0,0,,tsvc=(TextStatsViewController *)\N{\fs12}text stats view controller equals TextStatsViewController.
Dialogue: 0,1:05:57.63,1:05:59.45,yin,,0,0,0,, 这个操作 \N{\fs12}This is actually not necessary,
Dialogue: 0,1:05:59.71,1:06:01.07,yin,,0,0,0,, 并不是强制要求 \N{\fs12}this one I’m doing right here,
Dialogue: 0,1:06:01.34,1:06:02.93,yin,,0,0,0,, 但是我个人喜欢这样做 \N{\fs12}but I personally like to do it,
Dialogue: 0,1:06:04.48,1:06:08.27,yin,,0,0,0,, 因为我喜欢创建一个局部变量 \N{\fs12}just because I like to have, you know, a local variable
Dialogue: 0,1:06:08.28,1:06:12.33,yin,,0,0,0,, 这样能够直接用 tsvc.textToAnalyze=\N{\fs12}that I can do things like tsvc dot textToAnalyze equals.
Dialogue: 0,1:06:12.81,1:06:14.48,yin,,0,0,0,, 现在我是在为它做准备 \N{\fs12}Okay. So here I’m preparing it.
Dialogue: 0,1:06:15.04,1:06:16.31,yin,,0,0,0,, 它需要什么呢 \N{\fs12}Okay. What does it need?
Dialogue: 0,1:06:16.31,1:06:18.98,yin,,0,0,0,, 需要我的正文文本 \N{\fs12}It needs my body text.
Dialogue: 0,1:06:20.86,1:06:22.34,yin,,0,0,0,, 还记得上次讲过的内容吗 \N{\fs12}Okay. Remember from last time?
Dialogue: 0,1:06:22.54,1:06:25.01,yin,,0,0,0,, 这个文本视图是 self.body\N{\fs12}This text view right here is self dot body,
Dialogue: 0,1:06:25.17,1:06:28.12,yin,,0,0,0,,textStorage 是一个 NSMutableAttributedString\N{\fs12}and the textStorage is the NSMutableAttributedString.
Dialogue: 0,1:06:28.23,1:06:30.09,yin,,0,0,0,, 这是一个 NSAttributedString\N{\fs12}This is an NSAttributedString,
Dialogue: 0,1:06:30.09,1:06:31.62,yin,,0,0,0,, 但是可以这样赋值 \N{\fs12}but it’s okay to assign that,
Dialogue: 0,1:06:31.62,1:06:35.05,yin,,0,0,0,, 因为可变字符串也属于属性化字符串 \N{\fs12}because a mutable string is a regular attributed string,
Dialogue: 0,1:06:35.42,1:06:36.73,yin,,0,0,0,, 所以这样是完全没问题的 \N{\fs12}so this is perfectly legal,
Dialogue: 0,1:06:37.06,1:06:38.00,yin,,0,0,0,, 就是这样了 \N{\fs12}and so that’s it.
Dialogue: 0,1:06:38.23,1:06:40.05,yin,,0,0,0,, 我们需要做的就是这些 \N{\fs12}That’s all that’s necessary for us to do.
Dialogue: 0,1:06:40.05,1:06:41.01,yin,,0,0,0,, 现在再运行一下 \N{\fs12}And now if we run,
Dialogue: 0,1:06:42.16,1:06:43.01,yin,,0,0,0,, 大家会看到 \N{\fs12}you will see
Dialogue: 0,1:06:46.37,1:06:50.61,yin,,0,0,0,, 首先 我们出现在一个导航控制器中 \N{\fs12}that first of all, we come up inside of a navigation controller.
Dialogue: 0,1:06:50.62,1:06:52.79,yin,,0,0,0,, 之前的页面还在这里 \N{\fs12}Okay. We still have our thing here.
Dialogue: 0,1:06:52.81,1:06:54.15,yin,,0,0,0,, 依旧可以选择文本 \N{\fs12}We can still select text.
Dialogue: 0,1:06:54.78,1:06:57.60,yin,,0,0,0,, 如果打开统计页面 显示的是 0 个彩色字符 \N{\fs12}If we bring up the stats, there’s zero colorful characters.
Dialogue: 0,1:06:57.60,1:06:58.90,yin,,0,0,0,, 我还没有设置颜色 \N{\fs12}I didn’t color anything.
Dialogue: 0,1:06:58.93,1:07:02.91,yin,,0,0,0,, 点击返回之后 系统释放了那个文本分析 MVC\N{\fs12}When I hit back, it just dealloc that text analyze.
Dialogue: 0,1:07:03.11,1:07:04.75,yin,,0,0,0,, 我们重新设置一下 \N{\fs12}Let’s go ahead and make a new one here.
Dialogue: 0,1:07:04.75,1:07:09.42,yin,,0,0,0,, 变为橙色 加上轮廓 加点紫色 \N{\fs12}Orange and maybe some outline, and maybe some purple,
Dialogue: 0,1:07:09.55,1:07:12.63,yin,,0,0,0,, 再看统计结果 14 个彩色字符 7 个带有轮廓字符 \N{\fs12}and now stats — 14 colorful, seven outlined,
Dialogue: 0,1:07:12.63,1:07:13.80,yin,,0,0,0,, 非常好用 \N{\fs12}okay, working like a charm.
Dialogue: 0,1:07:14.04,1:07:16.54,yin,,0,0,0,, 我们也许可以为一串字符添加轮廓 \N{\fs12}Maybe we’ll make a whole bunch of outlined here.
Dialogue: 0,1:07:16.82,1:07:18.88,yin,,0,0,0,, 再看统计结果 250 个 \N{\fs12}Okay. Stats — 250.
Dialogue: 0,1:07:19.17,1:07:20.74,yin,,0,0,0,, 就是这样 \N{\fs12}Okay. So that’s it.
Dialogue: 0,1:07:21.56,1:07:22.32,yin,,0,0,0,, 都明白了吗 \N{\fs12}Everyone got that?
Dialogue: 0,1:07:22.32,1:07:25.16,yin,,0,0,0,, 你们要在作业中完成这部分 \N{\fs12}So you will be doing this on your homework.
Dialogue: 0,1:07:25.17,1:07:26.61,yin,,0,0,0,, 实际上 你们需要将它们 \N{\fs12}In fact, you’ll be taking this
Dialogue: 0,1:07:26.69,1:07:29.98,yin,,0,0,0,, 放入一个选项卡栏控制器中 \N{\fs12}and putting it inside of a tab bar controller,
Dialogue: 0,1:07:29.98,1:07:31.18,yin,,0,0,0,, 所以你们要实现两项内容 \N{\fs12}so you’ll be doing double duty.
Dialogue: 0,1:07:31.18,1:07:31.98,yin,,0,0,0,, 剩下五分钟 \N{\fs12}So let’s talk about tab bar controller
Dialogue: 0,1:07:31.98,1:07:34.25,yin,,0,0,0,, 我们来讲一下选项卡栏控制器 \N{\fs12}in the last five minutes that we have here.
Dialogue: 0,1:07:37.59,1:07:40.13,yin,,0,0,0,, 在此之前还有什么问题吗 \N{\fs12}Any questions about that before I go on to tab bar controller?
Dialogue: 0,1:07:41.48,1:07:43.94,yin,,0,0,0,, 看了演示就能明白了吧 \N{\fs12}It all makes sense once you see it. Right?
Dialogue: 0,1:07:44.46,1:07:46.66,yin,,0,0,0,, 有许多组成部分 但是能够组合在一起 \N{\fs12}There’s a number of components to it, but they kind of fit together.
Dialogue: 0,1:07:47.65,1:07:49.30,yin,,0,0,0,, 好的 接着讲选项卡栏控制器 \N{\fs12}All right. Tab bar controller.
Dialogue: 0,1:07:50.05,1:07:54.40,yin,,0,0,0,, 这是我最喜欢的选项卡栏控制器应用示例 \N{\fs12}Here is my favorite tab bar controller application example,
Dialogue: 0,1:07:54.40,1:07:56.41,yin,,0,0,0,,iOS7 的时钟应用 \N{\fs12}which is the clock app on iOS seven.
Dialogue: 0,1:07:56.41,1:07:59.43,yin,,0,0,0,, 可以看到底部有一个选项卡栏 上面有四个选项卡 \N{\fs12}You can see it has a tab bar across the bottom there and four tabs.
Dialogue: 0,1:07:59.44,1:08:02.22,yin,,0,0,0,, 相互之间完全独立 \N{\fs12}Each of these four tabs is completely independent of the other
Dialogue: 0,1:08:02.44,1:08:05.94,yin,,0,0,0,, 选项卡栏中的 MVC 就应该是这样 \N{\fs12}and that’s the way MVCs inside a tab bar controller should be,
Dialogue: 0,1:08:06.12,1:08:07.64,yin,,0,0,0,, 相互完全独立 \N{\fs12}completely independent of each other.
Dialogue: 0,1:08:07.74,1:08:10.55,yin,,0,0,0,, 如果 MVC 间是相关的 你也许就需要用导航控制器了 \N{\fs12}If they’re dependent, you probably want a navigation controller.
Dialogue: 0,1:08:10.95,1:08:12.12,yin,,0,0,0,, 或者如果是在 iPad 上 \N{\fs12}Okay. Or if they’re in an iPad,
Dialogue: 0,1:08:12.13,1:08:14.17,yin,,0,0,0,, 也许可以用弹出窗口之类的 \N{\fs12}you might want to a popover, or something like that,
Dialogue: 0,1:08:14.17,1:08:19.02,yin,,0,0,0,, 但是 iPhone 应用中需要的是导航控制器 \N{\fs12}but on an iPhone you probably want a navigation controller
Dialogue: 0,1:08:19.03,1:08:20.17,yin,,0,0,0,, 如果 MVC 间有依赖关系的话 \N{\fs12}if you have a dependency.
Dialogue: 0,1:08:21.05,1:08:23.32,yin,,0,0,0,, 选项卡栏控制器是怎样工作的呢 \N{\fs12}All right. So how does tab bar controller work?
Dialogue: 0,1:08:23.65,1:08:25.13,yin,,0,0,0,, 它是非常简单的控制器 \N{\fs12}Very, very simply controller,
Dialogue: 0,1:08:25.13,1:08:27.82,yin,,0,0,0,, 有一个属性叫做 viewControllers\N{\fs12}it has a property called viewControllers,
Dialogue: 0,1:08:28.11,1:08:32.29,yin,,0,0,0,, 是一个 MVC 的数组 UIViewController 的数组 \N{\fs12}which is an array of MVCs — UIViewControllers,
Dialogue: 0,1:08:32.30,1:08:34.11,yin,,0,0,0,,MVC 的控制器组成的数组 \N{\fs12}basically, the controllers of the MVCs.
Dialogue: 0,1:08:34.31,1:08:36.09,yin,,0,0,0,, 数组中有多少个控制器 \N{\fs12}And how ever many you have,
Dialogue: 0,1:08:36.25,1:08:38.85,yin,,0,0,0,, 底部就有多少个小选项卡 \N{\fs12}that’s how many little tabs you’ll have on the bottom.
Dialogue: 0,1:08:39.35,1:08:43.52,yin,,0,0,0,, 而在 storyboard 中创建连接的方法 \N{\fs12}Okay. And this — to create these connections in your storyboard –
Dialogue: 0,1:08:43.52,1:08:45.03,yin,,0,0,0,, 同样是按住 control 键进行拖拽 \N{\fs12}surprise, control drag.
Dialogue: 0,1:08:45.64,1:08:48.72,yin,,0,0,0,, 你只要拖出一个 UITabBarController\N{\fs12}Okay. So you just drag a UITabBarController out
Dialogue: 0,1:08:48.85,1:08:51.30,yin,,0,0,0,, 然后按住 control 键拖动到 \N{\fs12}and then just control drag to all the controllers
Dialogue: 0,1:08:51.30,1:08:52.81,yin,,0,0,0,, 各选项卡对应的控制器上 \N{\fs12}that you want to be the various tabs.
Dialogue: 0,1:08:53.09,1:08:57.29,yin,,0,0,0,,Timer 和小图标是如何出现在上面的呢 \N{\fs12}Now, how does the word timer and the little icon there appear.
Dialogue: 0,1:08:57.44,1:09:01.37,yin,,0,0,0,,Timer 是 UIViewController 的标题 \N{\fs12}Well, the timer is going to be the UIViewController’s title,
Dialogue: 0,1:09:01.38,1:09:04.95,yin,,0,0,0,, 和分屏视图控制器顶部显示的一样 \N{\fs12}the same thing that will appear in the top of a split view controller,
Dialogue: 0,1:09:05.11,1:09:07.52,yin,,0,0,0,, 而图标呢 \N{\fs12}and the icon,
Dialogue: 0,1:09:07.52,1:09:12.01,yin,,0,0,0,,UIViewController 有一个属性叫做 tabBarItem\N{\fs12}there’s actually a UIViewController property called tabBarItem,
Dialogue: 0,1:09:12.11,1:09:14.14,yin,,0,0,0,, 里面有图标 \N{\fs12}and inside there is the icon
Dialogue: 0,1:09:14.14,1:09:15.78,yin,,0,0,0,, 还有其他元素 比如小气泡 \N{\fs12}and a few other things like the badge,
Dialogue: 0,1:09:15.87,1:09:18.67,yin,,0,0,0,, 就是一个小圆圈 里面有数字或字母 \N{\fs12}which is a little round circle with a number or a letter in it,
Dialogue: 0,1:09:18.69,1:09:20.44,yin,,0,0,0,, 可以显示在上面 \N{\fs12}which you can put on there.
Dialogue: 0,1:09:20.58,1:09:22.48,yin,,0,0,0,, 这就是设置这些元素的方法 \N{\fs12}So that’s how these things get set,
Dialogue: 0,1:09:22.58,1:09:24.11,yin,,0,0,0,, 但是在这里我就不演示了 \N{\fs12}but I’m not even showing you that here,
Dialogue: 0,1:09:24.11,1:09:25.71,yin,,0,0,0,, 因为通常是在 storyboard 中进行设置 \N{\fs12}because usually you set them in the storyboard.
Dialogue: 0,1:09:26.11,1:09:28.82,yin,,0,0,0,, 在 storyboard 中设置图标和文字 \N{\fs12}Okay. You set this icon and this text in the storyboard.
Dialogue: 0,1:09:29.04,1:09:31.19,yin,,0,0,0,, 最好在那里设置 \N{\fs12}That’s the best place to set these things.
Dialogue: 0,1:09:31.38,1:09:33.52,yin,,0,0,0,, 如果你有四个以上控制器呢 \N{\fs12}Now, what if you have more than four controllers
Dialogue: 0,1:09:33.53,1:09:34.86,yin,,0,0,0,, 五个以上呢 \N{\fs12}or more than five, actually?
Dialogue: 0,1:09:35.58,1:09:36.67,yin,,0,0,0,, 会发生什么 \N{\fs12}Then what happens?
Dialogue: 0,1:09:36.81,1:09:40.15,yin,,0,0,0,, 会出现一个 More 更多的选项卡 \N{\fs12}Then a little more tab is going to appear.
Dialogue: 0,1:09:40.56,1:09:41.76,yin,,0,0,0,, 在右下角 看到了吗 \N{\fs12}See it down there in the corner,
Dialogue: 0,1:09:41.81,1:09:42.74,yin,,0,0,0,, 点击它之后 \N{\fs12}and when you click that
Dialogue: 0,1:09:42.74,1:09:46.24,yin,,0,0,0,, 会出现一个界面显示全部控制器 \N{\fs12}there’s going to be this UI that’s presented that allows you to –
Dialogue: 0,1:09:46.28,1:09:48.71,yin,,0,0,0,, 用户可以从中选择四个显示在底部 \N{\fs12}the user to pick which four they want down there.
Dialogue: 0,1:09:49.05,1:09:50.21,yin,,0,0,0,, 可以来回交换 \N{\fs12}Swap them back and forth,
Dialogue: 0,1:09:50.47,1:09:51.53,yin,,0,0,0,, 挺好用的 \N{\fs12}okay, which is kind of cool.
Dialogue: 0,1:09:51.60,1:09:53.89,yin,,0,0,0,, 这都是自动完成的 \N{\fs12}And that happens automatically.
Dialogue: 0,1:09:53.89,1:09:55.52,yin,,0,0,0,, 将更多按钮放在那里 系统会自动执行 \N{\fs12}You put that more button on there, it just does it.
Dialogue: 0,1:09:55.52,1:09:56.34,yin,,0,0,0,, 替你完成相关操作 \N{\fs12}It does it for you.
Dialogue: 0,1:09:56.69,1:09:57.29,yin,,0,0,0,, 非常好用 \N{\fs12}So that’s really cool.
Dialogue: 0,1:09:57.95,1:10:02.49,yin,,0,0,0,, 我其实不推荐 UI 上的选项卡多于五个 \N{\fs12}Okay. So I actually don’t recommend UIs that have more than five tabs.
Dialogue: 0,1:10:02.73,1:10:05.45,yin,,0,0,0,, 我认为这样对用户来说很麻烦 \N{\fs12}I think this is a little cumbersome for users,
Dialogue: 0,1:10:05.56,1:10:07.64,yin,,0,0,0,, 但有些地方需要这样做 \N{\fs12}but there are some places it would make sense.
Dialogue: 0,1:10:08.07,1:10:10.21,yin,,0,0,0,, 这个应用就还不错 比较合理 \N{\fs12}In this app, it’s not bad. It kind of makes sense.
Dialogue: 0,1:10:10.21,1:10:13.91,yin,,0,0,0,, 这是 iPod 应用之类的 音乐应用 \N{\fs12}This is the iPod app, or whatever, your music app.
Dialogue: 0,1:10:14.13,1:10:15.91,yin,,0,0,0,, 所以这样做是有道理的 \N{\fs12}So it kind of makes some sense here.
Dialogue: 0,1:10:16.61,1:10:19.89,yin,,0,0,0,, 不管怎样 如果你确实需要五个以上 那就是这样用的 \N{\fs12}But anyway, if you do need to do that, that’s how it works.
Dialogue: 0,1:10:20.03,1:10:22.43,yin,,0,0,0,, 最后几分钟 \N{\fs12}So let’s, in the last couple of minutes here,
Dialogue: 0,1:10:22.45,1:10:26.84,yin,,0,0,0,, 我们看看在 Xcode 中如何创建选项卡栏控制器 \N{\fs12}look in Xcode and see what it looks like to make a tab bar controller.
Dialogue: 0,1:10:26.85,1:10:29.55,yin,,0,0,0,, 和几张幻灯片之前展示的一样 \N{\fs12}So this is the same thing I was just showing a few slides earlier.
Dialogue: 0,1:10:29.55,1:10:33.19,yin,,0,0,0,, 可以看到导航控制器中那个中间有按钮的 MVC\N{\fs12}You see the navigation controller with the MVC that has the button
Dialogue: 0,1:10:33.27,1:10:36.13,yin,,0,0,0,, 然后从它 segue 到下一个 MVC\N{\fs12}and then it just — you know, it segues to the next one,
Dialogue: 0,1:10:36.25,1:10:39.43,yin,,0,0,0,, 我要把它放在一个选项卡栏控制器中 \N{\fs12}so I’m actually going to put this in a tab bar controller,
Dialogue: 0,1:10:39.43,1:10:40.75,yin,,0,0,0,, 所以它会是一个选项卡 \N{\fs12}so it’s going to be one of the tabs,
Dialogue: 0,1:10:40.88,1:10:43.08,yin,,0,0,0,, 然后让另一个空白视图作为另一个选项卡 \N{\fs12}and then I’m just going to have like a blank view be the other one.
Dialogue: 0,1:10:43.12,1:10:45.27,yin,,0,0,0,, 看见右下的选项卡栏控制器了吗 \N{\fs12}Okay. So, see the tab bar controller there?
Dialogue: 0,1:10:45.28,1:10:46.65,yin,,0,0,0,, 将它拖出 \N{\fs12}I’m dragging it out.
Dialogue: 0,1:10:46.84,1:10:47.82,yin,,0,0,0,, 拖出它时 \N{\fs12}When you drag it out,
Dialogue: 0,1:10:47.82,1:10:51.11,yin,,0,0,0,, 它会自带两个空白场景 \N{\fs12}it’s going to come along with two blank ones, okay,
Dialogue: 0,1:10:51.72,1:10:53.22,yin,,0,0,0,, 两个空白无物的 \N{\fs12}two empty blank ones,
Dialogue: 0,1:10:53.35,1:10:55.99,yin,,0,0,0,, 大部分情况下 你并不需要 \N{\fs12}which very much of the time you don’t want.
Dialogue: 0,1:10:56.33,1:10:58.41,yin,,0,0,0,, 这里我会留下一个 删掉另一个 \N{\fs12}In this case, I’m going to keep one of them, get rid of the other one,
Dialogue: 0,1:10:58.41,1:10:59.63,yin,,0,0,0,, 只是为了给大家示范如何实现 \N{\fs12}just to show you how that’s done.
Dialogue: 0,1:10:59.63,1:11:03.39,yin,,0,0,0,, 当你放下它时 可能会遮挡其他 MVC\N{\fs12}So when you drop it, it might overlap other ones.
Dialogue: 0,1:11:03.45,1:11:04.61,yin,,0,0,0,, 当然 在 storyboard 中 \N{\fs12}Obviously, in the storyboard,
Dialogue: 0,1:11:04.61,1:11:07.43,yin,,0,0,0,, 为了显示效果 你可以随意移动 MVC\N{\fs12}you can drag these MVCs anyway you want to make them look nice.
Dialogue: 0,1:11:07.44,1:11:10.27,yin,,0,0,0,, 如果它们之间有 segue 等连线 \N{\fs12}If they happen to be connected by a segue or something,
Dialogue: 0,1:11:10.32,1:11:12.94,yin,,0,0,0,, 在移动时 系统会自动重绘连接线 \N{\fs12}it’ll automatically redraw that line for you as you move it.
Dialogue: 0,1:11:12.99,1:11:14.68,yin,,0,0,0,, 这是很好的 \N{\fs12}It’s really quite nice in that way.
Dialogue: 0,1:11:15.05,1:11:17.73,yin,,0,0,0,, 可以想象 storyboard 可以变得非常庞大 \N{\fs12}You can imagine that these storyboards get very large.
Dialogue: 0,1:11:17.73,1:11:20.12,yin,,0,0,0,, 比如有 100 个 storyboard 怎么操作呢 \N{\fs12}With 100 storyboards in there how does it even work.
Dialogue: 0,1:11:20.15,1:11:24.17,yin,,0,0,0,, 如果你看右下角 \N{\fs12}Well, if you look down in the lower right corner there,
Dialogue: 0,1:11:24.21,1:11:25.67,yin,,0,0,0,, 可以看到一个放大镜 \N{\fs12}you’ll see there’s a magnifying glass,
Dialogue: 0,1:11:25.67,1:11:26.87,yin,,0,0,0,, 可以用它放大或缩小 \N{\fs12}you can zoom in and out.
Dialogue: 0,1:11:27.12,1:11:28.15,yin,,0,0,0,, 可以大幅度缩小 \N{\fs12}Okay. Zoom way out.
Dialogue: 0,1:11:28.15,1:11:30.37,yin,,0,0,0,, 如果你有 100 个 MVC 可以缩小到一屏上 \N{\fs12}If you have 100, you can see all 100 at the same time.
Dialogue: 0,1:11:30.37,1:11:33.86,yin,,0,0,0,, 放大到显示某个视图控制器 \N{\fs12}Zoom in all the way to zooming in all the way in on one view controller
Dialogue: 0,1:11:33.87,1:11:35.10,yin,,0,0,0,, 然后你就可以编辑那个视图控制器 \N{\fs12}and then you can edit that view controller.
Dialogue: 0,1:11:35.10,1:11:36.70,yin,,0,0,0,, 只有将某个视图控制器放大 \N{\fs12}You can’t edit a view controller itself
Dialogue: 0,1:11:36.70,1:11:38.49,yin,,0,0,0,, 你才能对它进行编辑 \N{\fs12}unless you’ve zoomed in all the way. Okay.
Dialogue: 0,1:11:39.49,1:11:41.02,yin,,0,0,0,, 现在我有两个空白场景 \N{\fs12}So here I’ve got two blank ones.
Dialogue: 0,1:11:41.02,1:11:41.94,yin,,0,0,0,, 我并不是都想要 \N{\fs12}I don’t want them both,
Dialogue: 0,1:11:42.10,1:11:45.01,yin,,0,0,0,, 所以我只要选中其中一个 \N{\fs12}so I’m just going to select one of them,
Dialogue: 0,1:11:45.03,1:11:45.86,yin,,0,0,0,, 变为蓝色 \N{\fs12}make it blue,
Dialogue: 0,1:11:46.20,1:11:47.25,yin,,0,0,0,, 和之前讲过的一样 \N{\fs12}as we talked about before,
Dialogue: 0,1:11:47.31,1:11:48.80,yin,,0,0,0,, 点击删除 它就消失了 \N{\fs12}and hit delete, and it’s gone.
Dialogue: 0,1:11:48.80,1:11:50.60,yin,,0,0,0,, 剩下另外一个 \N{\fs12}So I’ve still got the other one. Okay.
Dialogue: 0,1:11:50.89,1:11:53.74,yin,,0,0,0,, 现在我要用 control 拖拽 \N{\fs12}And now I’m gonna hook that navigation controller in there
Dialogue: 0,1:11:53.74,1:11:55.79,yin,,0,0,0,, 将导航控制器连接起来 \N{\fs12}by control dragging.
Dialogue: 0,1:11:55.82,1:11:57.86,yin,,0,0,0,, 按住 control 键从选项卡栏控制器 \N{\fs12}So I’m control dragging from the tab bar controller
Dialogue: 0,1:11:57.86,1:11:58.77,yin,,0,0,0,, 拖动到导航控制器 \N{\fs12}to the navigation controller,
Dialogue: 0,1:11:59.14,1:12:01.92,yin,,0,0,0,, 进行 control 拖拽时 \N{\fs12}and when you do this control drag,
Dialogue: 0,1:12:01.92,1:12:03.98,yin,,0,0,0,, 会弹出这个 segue 列表 \N{\fs12}it’s going to put up this little segue thing,
Dialogue: 0,1:12:04.08,1:12:05.69,yin,,0,0,0,, 如果是一个选项卡栏控制器 \N{\fs12}but when it’s a tab bar controller,
Dialogue: 0,1:12:05.71,1:12:07.72,yin,,0,0,0,, 那这里就只能选择视图控制器 \N{\fs12}it only makes sense for this to be view controller.
Dialogue: 0,1:12:07.72,1:12:10.21,yin,,0,0,0,,Xcode 不能自动选择好 我真的很惊讶 \N{\fs12}And I’m really surprised the Xcode just doesn’t automatically do this.
Dialogue: 0,1:12:10.21,1:12:12.34,yin,,0,0,0,, 我也不知道为什么 \N{\fs12}I’m not sure exactly why, because you –
Dialogue: 0,1:12:12.45,1:12:13.96,yin,,0,0,0,, 这里选择 push 类型完全说不通 \N{\fs12}it would make no sense to pick push here,
Dialogue: 0,1:12:13.96,1:12:15.66,yin,,0,0,0,, 那为什么还要给出这个选项 我不知道 \N{\fs12}so why even offer that. I don’t know.
Dialogue: 0,1:12:16.22,1:12:17.55,yin,,0,0,0,, 总之选项卡栏控制器的 segue\N{\fs12}Anyway, you always want to one on the bottom
Dialogue: 0,1:12:17.55,1:12:18.62,yin,,0,0,0,, 要选择最下面的视图控制器 \N{\fs12}when it’s a tab bar controller,
Dialogue: 0,1:12:18.62,1:12:21.56,yin,,0,0,0,, 表示将它连接到视图控制器列表中 \N{\fs12}which means wire this up to the list of view controllers.
Dialogue: 0,1:12:22.00,1:12:25.78,yin,,0,0,0,, 这样做之后就会得到这样一条线 \N{\fs12}Okay. You do that and now it’s going to have this line drawn over there.
Dialogue: 0,1:12:25.79,1:12:28.26,yin,,0,0,0,, 这些小圆圈不是 segue\N{\fs12}Again, these little round circles are not segues,
Dialogue: 0,1:12:28.33,1:12:31.33,yin,,0,0,0,, 视图控制器中 \N{\fs12}they’re showing the outlet view controllers,
Dialogue: 0,1:12:31.33,1:12:32.84,yin,,0,0,0,, 它们是用来显示多个输出口视图控制器的 \N{\fs12}plural in the view controller case.
Dialogue: 0,1:12:32.85,1:12:35.58,yin,,0,0,0,, 在分屏视图或者导航视图控制器中 \N{\fs12}It’s root view controller in the split view
Dialogue: 0,1:12:35.59,1:12:37.76,yin,,0,0,0,, 这个位置显示的是根视图控制器 \N{\fs12}or the navigation view controller space over there.
Dialogue: 0,1:12:38.89,1:12:40.64,yin,,0,0,0,, 我将它们连好了 \N{\fs12}So I got these things wired up.
Dialogue: 0,1:12:41.69,1:12:46.44,yin,,0,0,0,, 注意 所有可能出现在这个选项卡栏中的场景 \N{\fs12}Note that on all of the scenes that might appear in this tab bar,
Dialogue: 0,1:12:46.44,1:12:47.14,yin,,0,0,0,, 即使它们 \N{\fs12}even if they’re –
Dialogue: 0,1:12:47.29,1:12:49.31,yin,,0,0,0,, 是通过导航控制器出现的 \N{\fs12}that’s happening through a navigation controller,
Dialogue: 0,1:12:49.31,1:12:51.37,yin,,0,0,0,, 都会在底部留出这一栏的位置 \N{\fs12}they’re all getting room for this little bar on the bottom.
Dialogue: 0,1:12:51.93,1:12:52.32,yin,,0,0,0,, 看到了吗 \N{\fs12}You see that?
Dialogue: 0,1:12:52.68,1:12:54.07,yin,,0,0,0,, 底部的那条栏所占的空间 \N{\fs12}Little bar space on the bottom,
Dialogue: 0,1:12:54.07,1:12:54.83,yin,,0,0,0,, 都会是这样 \N{\fs12}so that’s going to be true.
Dialogue: 0,1:12:54.83,1:12:56.03,yin,,0,0,0,, 所以聪明的做法是 \N{\fs12}So it’s smart about knowing
Dialogue: 0,1:12:56.04,1:12:57.60,yin,,0,0,0,, 确定某个场景是否最终出现在选项卡栏中 \N{\fs12}oh, this could eventually be in this tab bar,
Dialogue: 0,1:12:57.62,1:12:59.24,yin,,0,0,0,, 然后提前在底部留出空间 \N{\fs12}so I’m going to make that space down there.
Dialogue: 0,1:12:59.36,1:13:02.92,yin,,0,0,0,, 你同样需要调整 UI 以适应较小的空间 \N{\fs12}And again, you have to adjust your UI to fit in the smaller space, whatever.
Dialogue: 0,1:13:04.31,1:13:07.79,yin,,0,0,0,, 注意 我们这里是将导航控制器放入选项卡栏控制器中 \N{\fs12}Notice we have a navigation controller inside a tab bar controller,
Dialogue: 0,1:13:07.79,1:13:08.63,yin,,0,0,0,, 这是合法的 \N{\fs12}that’s legal,
Dialogue: 0,1:13:08.70,1:13:11.12,yin,,0,0,0,, 反过来就不是了 \N{\fs12}other way around, not so much. Okay.
Dialogue: 0,1:13:11.13,1:13:13.62,yin,,0,0,0,, 不要将选项卡栏控制器放入导航控制器中 \N{\fs12}Don’t be putting a tab bar controller inside a navigation controller.
Dialogue: 0,1:13:13.62,1:13:14.04,yin,,0,0,0,, 请讲 \N{\fs12}Yeah?
Dialogue: 0,1:13:14.90,1:13:17.96,yin,,0,0,0,, 怎么知道哪个选项卡会出现在左边呢 \N{\fs12}How do you know which one shows up on the left?
Dialogue: 0,1:13:18.72,1:13:20.94,yin,,0,0,0,, 选项卡栏控制器 \N{\fs12}Well, the tab bar controller –
Dialogue: 0,1:13:20.99,1:13:23.34,yin,,0,0,0,, 选项卡栏控制器所指向的 MVC\N{\fs12}the things that the tab bar controller points to,
Dialogue: 0,1:13:23.34,1:13:25.83,yin,,0,0,0,, 会出现在各个选项卡中 \N{\fs12}those are going to show up in each tab. Okay.
Dialogue: 0,1:13:25.99,1:13:28.47,yin,,0,0,0,, 如果你将导航控制器连接到 \N{\fs12}If you wired from the navigation controller
Dialogue: 0,1:13:28.57,1:13:31.31,yin,,0,0,0,, 某个有选项卡栏控制器的场景中 \N{\fs12}to any scene that had a tab bar controller in it,
Dialogue: 0,1:13:31.31,1:13:32.14,yin,,0,0,0,, 就不对了 \N{\fs12}that would be bad.
Dialogue: 0,1:13:32.26,1:13:33.51,yin,,0,0,0,, 所以基本上 选项卡栏控制器 \N{\fs12}So basically, the tab bar controller
Dialogue: 0,1:13:33.51,1:13:37.01,yin,,0,0,0,, 不应该出现在导航控制器的下游 \N{\fs12}should not be anywhere downstream of a navigation controller.
Dialogue: 0,1:13:37.65,1:13:39.17,yin,,0,0,0,, 但我的意思是…\N{\fs12}Oh but, what I meant is…
Dialogue: 0,1:13:39.58,1:13:42.39,yin,,0,0,0,, 问题是选项卡的顺序是什么 \N{\fs12}Oh, so the question is what’s the order of the tabs?
Dialogue: 0,1:13:43.03,1:13:45.05,yin,,0,0,0,, 这是可以在 Xcode 中修改的 \N{\fs12}That can actually be changed in Xcode.
Dialogue: 0,1:13:45.24,1:13:47.86,yin,,0,0,0,, 选项卡栏控制器底部会显示出各个选项卡 \N{\fs12}If you see where the tabs are in the bottom of the tab bar controller,
Dialogue: 0,1:13:47.87,1:13:49.86,yin,,0,0,0,, 你可以拾取然后移动 \N{\fs12}you can pick those up and move them. Okay.
Dialogue: 0,1:13:51.44,1:13:52.97,yin,,0,0,0,, 现在我们有了这两个选项卡 \N{\fs12}So anyway, so we have these two tabs.
Dialogue: 0,1:13:53.77,1:13:55.39,yin,,0,0,0,, 我需要选择运行开始的位置 \N{\fs12}I’m going to make the launch point.
Dialogue: 0,1:13:55.39,1:13:57.85,yin,,0,0,0,, 我要将箭头从导航控制器 \N{\fs12}I’m moving it from being the navigation controller
Dialogue: 0,1:13:57.94,1:13:59.66,yin,,0,0,0,, 移到选项卡栏控制器上 \N{\fs12}over to be the tab bar controller. Right.
Dialogue: 0,1:13:59.66,1:14:02.69,yin,,0,0,0,, 显然 我想在运行应用时让选项卡栏控制器 \N{\fs12}Obviously, I want the tab bar controller to be showing onscreen
Dialogue: 0,1:14:02.86,1:14:04.23,yin,,0,0,0,, 首先出现在屏幕上 \N{\fs12}when it first launches,
Dialogue: 0,1:14:04.64,1:14:08.85,yin,,0,0,0,, 可以在视图控制器底部双击 \N{\fs12}and I can double click down on a view controller
Dialogue: 0,1:14:08.86,1:14:11.09,yin,,0,0,0,, 在那里修改标题文本 \N{\fs12}and change the text, right there.
Dialogue: 0,1:14:11.53,1:14:13.13,yin,,0,0,0,, 看到所指的地方了吗 在那里双击 \N{\fs12}See where I am there? Double click.
Dialogue: 0,1:14:13.23,1:14:16.01,yin,,0,0,0,, 还可以在右边设置图像 \N{\fs12}And I can also set the image over here on the right.
Dialogue: 0,1:14:16.22,1:14:18.77,yin,,0,0,0,, 可以设置为资产库中的一张图像 \N{\fs12}You can set it to an image that’s in your assets library.
Dialogue: 0,1:14:18.89,1:14:22.90,yin,,0,0,0,, 图像要求是 3030 像素的 Alpha 通道 \N{\fs12}These images need to be 30 by 30 pixels, all alpha. Okay.
Dialogue: 0,1:14:23.02,1:14:25.22,yin,,0,0,0,, 也就是说 在 30*30 的图标中 \N{\fs12}In other words, your tint color is going to
Dialogue: 0,1:14:25.24,1:14:29.08,yin,,0,0,0,, 你的色调颜色要通过 Alpha 通道显示出来 \N{\fs12}show through the alpha in that 30 by 30 icon.
Dialogue: 0,1:14:29.53,1:14:30.68,yin,,0,0,0,, 就是这么简单 \N{\fs12}Okay. It’s as simple as that.
Dialogue: 0,1:14:31.35,1:14:32.74,yin,,0,0,0,, 颜色要通过 Alpha 通道显示出来 \N{\fs12}It’s going to show through the alpha.
Dialogue: 0,1:14:32.75,1:14:35.52,yin,,0,0,0,, 如果图标除了 Alpha 之外还有别的通道 \N{\fs12}So if that icon has anything but alpha in it,
Dialogue: 0,1:14:36.66,1:14:39.16,yin,,0,0,0,, 比如不透明度 是不会显示出来的 \N{\fs12}you know, opaque and alpha, it’s not going to show. Okay.
Dialogue: 0,1:14:41.03,1:14:43.17,yin,,0,0,0,, 就是这样了 就是这些 \N{\fs12}So that’s that. That’s it.
Dialogue: 0,1:14:43.41,1:14:46.82,yin,,0,0,0,, 希望今天的内容能够帮助大家实现两种控制器 \N{\fs12}Hopefully that’s enough for you to do both kinds of controllers.
Dialogue: 0,1:14:47.27,1:14:49.26,yin,,0,0,0,, 周五没有课外辅导 \N{\fs12}Friday, no section.
Dialogue: 0,1:14:49.53,1:14:52.62,yin,,0,0,0,, 下周五帮助大家在设备上运行应用 \N{\fs12}Next Friday we’ll get you up and running on your devices.
Dialogue: 0,1:14:52.62,1:14:53.91,yin,,0,0,0,, 周一没课 \N{\fs12}Monday, no lecture.
Dialogue: 0,1:14:53.91,1:14:56.24,yin,,0,0,0,, 作业截止日期是周三 很方便 \N{\fs12}Your homework’s due on Wednesday, which is convenient,
Dialogue: 0,1:14:56.37,1:14:58.52,yin,,0,0,0,, 从下周三开始 \N{\fs12}and then starting next week, next Wednesday
Dialogue: 0,1:14:58.53,1:14:59.85,yin,,0,0,0,, 以及之后的两周 \N{\fs12}and for the two weeks after that,
Dialogue: 0,1:14:59.85,1:15:02.92,yin,,0,0,0,, 我们会讲到绘制 手势 自动布局 动画 \N{\fs12}we’ll be doing drawing and gestures and autolayout animation.
Dialogue: 0,1:15:02.92,1:15:04.47,yin,,0,0,0,, 很多有意思的内容 \N{\fs12}Lots and lots of fun stuff.
Dialogue: 0,1:15:05.01,1:15:06.57,yin,,0,0,0,, 好的 非常感谢 \N{\fs12}Okay. Thank you very much.
Dialogue: 0,1:15:08.95,1:15:12.38,yin,,0,0,0,, 更多内容 请访问斯坦福网站 \N{\fs12}For more, please visit us at stanford.edu.