[Script Info]
ScriptType: v4.00+

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,1,1,0,2,10,10,10,0,0

[Events]
Format: Layer, Start, End, Style, Text
Dialogue: 0,0:00:05.26,0:00:06.35,Default,>> Stanford University.\N
Dialogue: 0,0:00:11.51,0:00:11.74,Default,>> Paul Hegarty: Okay.\N
Dialogue: 0,0:00:11.74,0:00:15.75,Default,Well, welcome to lecture\Nnumber two of CS 193P for fall 
Dialogue: 0,0:00:15.75,0:00:20.35,Default,of 2013/2014 academic year.\N
Dialogue: 0,0:00:20.87,0:00:24.97,Default,And today we're going to have\Nsome slides at the beginning, 
Dialogue: 0,0:00:25.00,0:00:26.81,Default,little more talking,\Nand then I'm going 
Dialogue: 0,0:00:26.81,0:00:28.96,Default,to have quite a big\Ndemo that's going to try 
Dialogue: 0,0:00:28.96,0:00:31.23,Default,and hopefully synthesize all\Nthe things I've been talking 
Dialogue: 0,0:00:31.23,0:00:33.15,Default,about on the slides for\Nthe first two lectures, 
Dialogue: 0,0:00:33.15,0:00:36.86,Default,which is that we're going to\Nstart building our card game. 
Dialogue: 0,0:00:36.86,0:00:41.05,Default,Okay. This card matching game\Nis going to be our substrate 
Dialogue: 0,0:00:41.05,0:00:43.71,Default,for the first two weeks of\Nlearning some Objective-C, 
Dialogue: 0,0:00:43.71,0:00:47.88,Default,learning about Xcode,\Nlearning about how iOS hooks 
Dialogue: 0,0:00:47.88,0:00:51.75,Default,up the controller, and the view,\Nand the model to make a UI. 
Dialogue: 0,0:00:52.55,0:00:56.03,Default,So if you remember from last\Ntime, we did this card thing 
Dialogue: 0,0:00:56.52,0:00:58.96,Default,that -- we did the entire card.\N
Dialogue: 0,0:00:58.96,0:01:00.25,Default,It was a very simple class.\N
Dialogue: 0,0:01:00.25,0:01:01.31,Default,Got a couple of properties --\N
Dialogue: 0,0:01:01.31,0:01:03.91,Default,three properties there\N-- and one method. 
Dialogue: 0,0:01:04.12,0:01:05.28,Default,And that's pretty much it.\N
Dialogue: 0,0:01:05.74,0:01:08.42,Default,And so today we're going to\Ngo on and do another class, 
Dialogue: 0,0:01:08.42,0:01:09.85,Default,which is a deck, okay?\N
Dialogue: 0,0:01:09.85,0:01:10.83,Default,The deck of cards.\N
Dialogue: 0,0:01:11.37,0:01:14.83,Default,And remember, that card\Nand deck are generic; 
Dialogue: 0,0:01:14.91,0:01:17.31,Default,they're not specific to\Nplaying cards, right? 
Dialogue: 0,0:01:17.31,0:01:20.20,Default,A playing card, like the ace of\Nclubs or the king of hearts -- 
Dialogue: 0,0:01:20.20,0:01:21.45,Default,something that has\Nall that in it -- 
Dialogue: 0,0:01:21.71,0:01:22.80,Default,that's a playing card thing.\N
Dialogue: 0,0:01:22.80,0:01:24.39,Default,These are general\Ncards and decks. 
Dialogue: 0,0:01:24.39,0:01:26.67,Default,So this could be a\Ndeck of flash cards, 
Dialogue: 0,0:01:26.67,0:01:28.94,Default,a deck of foreign language\Nwords you're trying 
Dialogue: 0,0:01:28.94,0:01:30.42,Default,to learn or whatever.\N
Dialogue: 0,0:01:30.57,0:01:31.97,Default,So we're trying to\Nkeep these deck 
Dialogue: 0,0:01:31.97,0:01:33.50,Default,and card classes\Nsomewhat generic. 
Dialogue: 0,0:01:33.91,0:01:34.85,Default,So here's deck.\N
Dialogue: 0,0:01:34.85,0:01:37.69,Default,It should look familiar in terms\Nof its basic structure, right? 
Dialogue: 0,0:01:37.69,0:01:40.80,Default,We're importing our\Nsuperclasses framework there, 
Dialogue: 0,0:01:40.80,0:01:43.67,Default,and then obviously\Nimporting our own header file 
Dialogue: 0,0:01:43.67,0:01:44.71,Default,in our implementation.\N
Dialogue: 0,0:01:45.45,0:01:48.76,Default,And the interface for deck is\Ngoing to have these two kind 
Dialogue: 0,0:01:48.76,0:01:51.77,Default,of fundamental methods:\NOne adds a card to the deck 
Dialogue: 0,0:01:52.16,0:01:55.25,Default,and one draws a random\Ncard out of the deck. 
Dialogue: 0,0:01:55.60,0:02:00.83,Default,Okay? And the add a card to the\Ndeck is a little bit new to you 
Dialogue: 0,0:02:00.83,0:02:02.87,Default,because you can see\Nit has two arguments. 
Dialogue: 0,0:02:03.16,0:02:04.67,Default,Okay? This is the first\Nmethod you've seen 
Dialogue: 0,0:02:04.67,0:02:05.89,Default,that has two arguments.\N
Dialogue: 0,0:02:05.89,0:02:08.63,Default,So far you've only seen methods\Nwith no arguments or a method 
Dialogue: 0,0:02:08.63,0:02:10.64,Default,with one argument\Nlike that -- match -- 
Dialogue: 0,0:02:10.67,0:02:12.63,Default,match had one argument\Nor the setters, 
Dialogue: 0,0:02:12.63,0:02:13.69,Default,they also have one argument.\N
Dialogue: 0,0:02:13.92,0:02:17.80,Default,So notice that when you\Nhave multiple arguments 
Dialogue: 0,0:02:17.80,0:02:19.63,Default,and objectives, see\Nthey're kind of interspersed 
Dialogue: 0,0:02:19.63,0:02:22.14,Default,with the names of the methods.\N
Dialogue: 0,0:02:22.24,0:02:23.89,Default,Okay? So the name\Nof this method, 
Dialogue: 0,0:02:23.99,0:02:28.07,Default,this long method is add\Ncard colon at top colon. 
Dialogue: 0,0:02:28.21,0:02:29.46,Default,That's the name of this method.\N
Dialogue: 0,0:02:29.96,0:02:32.04,Default,Okay? So the at top\Npart is actually part 
Dialogue: 0,0:02:32.04,0:02:32.99,Default,of the name of this method.\N
Dialogue: 0,0:02:33.33,0:02:35.57,Default,And the arguments, like the\Ncard that you're going to add 
Dialogue: 0,0:02:35.57,0:02:38.20,Default,and at top -- which is a Boolean\Nwhether to add it at the top 
Dialogue: 0,0:02:38.20,0:02:40.50,Default,of the deck or at the\Nbottom of the deck -- 
Dialogue: 0,0:02:41.53,0:02:43.43,Default,okay, those arguments\Nare interspersed. 
Dialogue: 0,0:02:43.59,0:02:47.28,Default,And we'll see how you call\Nsuch a method in a moment here. 
Dialogue: 0,0:02:47.69,0:02:50.81,Default,And then draw a random\Ncard is like a, you know, 
Dialogue: 0,0:02:50.81,0:02:54.35,Default,similar to a getter in\Nthat it returns a value 
Dialogue: 0,0:02:54.35,0:02:55.15,Default,and it has no arguments.\N
Dialogue: 0,0:02:55.15,0:02:58.47,Default,But this is not a getter because\Nwe didn't make this a property. 
Dialogue: 0,0:02:58.71,0:03:00.66,Default,And it's kind of important\N
Dialogue: 0,0:03:00.66,0:03:02.63,Default,to understand you could\Nhave made this a property 
Dialogue: 0,0:03:02.63,0:03:04.98,Default,like a read-only property\Nor something that reads it, 
Dialogue: 0,0:03:04.98,0:03:08.19,Default,but since draw a random\Ncard kind of does something, 
Dialogue: 0,0:03:08.53,0:03:12.29,Default,it has kind of an algorithm\Nto it -- a mechanism -- 
Dialogue: 0,0:03:12.33,0:03:13.92,Default,you usually wouldn't\Nmake that a property. 
Dialogue: 0,0:03:13.92,0:03:16.55,Default,It's kind of an abuse\Nof a getter to do that. 
Dialogue: 0,0:03:16.55,0:03:18.82,Default,A getter is really just\Nsetting and getting a value. 
Dialogue: 0,0:03:18.82,0:03:21.53,Default,It might have side effects, like\Nsetting it might update the UI 
Dialogue: 0,0:03:21.53,0:03:24.84,Default,or getting it might make sure\Nit's initialized first -- 
Dialogue: 0,0:03:24.88,0:03:25.71,Default,those kind of things.\N
Dialogue: 0,0:03:26.17,0:03:28.03,Default,You're not going to --\Nsomething that does something 
Dialogue: 0,0:03:28.03,0:03:31.07,Default,like drawing a card is not\Ngoing to be a property. 
Dialogue: 0,0:03:31.88,0:03:33.97,Default,Now, if you want to have, like,\N
Dialogue: 0,0:03:33.97,0:03:38.34,Default,that at top argument be\Noptional, okay, the only way 
Dialogue: 0,0:03:38.34,0:03:39.38,Default,to do that in Objective-C --\N
Dialogue: 0,0:03:39.78,0:03:42.14,Default,obviously we need our\Nheader file there -- 
Dialogue: 0,0:03:42.43,0:03:44.02,Default,the only way to do\Nthat in Objective-C is 
Dialogue: 0,0:03:44.02,0:03:48.87,Default,to declare a new method, add\Ncard colon with no at top on it. 
Dialogue: 0,0:03:48.87,0:03:51.50,Default,So this is a totally different\Nmethod, totally unrelated 
Dialogue: 0,0:03:51.50,0:03:54.41,Default,to the other method except\Nfor that in its implementation 
Dialogue: 0,0:03:54.72,0:03:56.35,Default,of this other method\Nwe're just going 
Dialogue: 0,0:03:56.35,0:03:57.44,Default,to call the other one, okay?\N
Dialogue: 0,0:03:57.85,0:04:00.90,Default,So in add card we're going to\Nsay self add card at top colon, 
Dialogue: 0,0:04:00.90,0:04:02.26,Default,whatever we want\Nthe default to be, 
Dialogue: 0,0:04:02.26,0:04:03.36,Default,which I'm going to say is no.\N
Dialogue: 0,0:04:03.98,0:04:07.43,Default,Okay? So just understand that,\Nyou know, in some languages, 
Dialogue: 0,0:04:07.43,0:04:10.62,Default,like, some arguments can\Nbe optional or you can kind 
Dialogue: 0,0:04:10.62,0:04:15.58,Default,of overload things to have\Nthe same method name have 
Dialogue: 0,0:04:15.58,0:04:16.18,Default,different arguments.\N
Dialogue: 0,0:04:16.18,0:04:19.45,Default,No. In Objective-C every\Nmethod is completely distinct 
Dialogue: 0,0:04:19.78,0:04:21.16,Default,and has a distinct name.\N
Dialogue: 0,0:04:21.16,0:04:23.87,Default,And extra arguments are\Ninterspersed like that. 
Dialogue: 0,0:04:23.87,0:04:26.25,Default,Okay? So these would be\Ntwo different methods. 
Dialogue: 0,0:04:26.25,0:04:26.89,Default,That make sense?\N
Dialogue: 0,0:04:27.60,0:04:27.94,Default,All right.\N
Dialogue: 0,0:04:27.94,0:04:31.17,Default,So let's talk about our\Nimplementation of our deck. 
Dialogue: 0,0:04:31.72,0:04:34.24,Default,So our deck is just going\Nto contain a bunch of cards. 
Dialogue: 0,0:04:34.49,0:04:36.25,Default,We need some sort of\Ninternal data structure 
Dialogue: 0,0:04:36.25,0:04:37.66,Default,to store all our cards in.\N
Dialogue: 0,0:04:38.30,0:04:43.23,Default,And what we're going do is we're\Ngoing to get a mutable array. 
Dialogue: 0,0:04:43.46,0:04:45.32,Default,So you've already seen\Nthe class NS array, 
Dialogue: 0,0:04:45.32,0:04:47.60,Default,which is the foundation\Nclass array, 
Dialogue: 0,0:04:47.60,0:04:49.20,Default,which is an array of objects.\N
Dialogue: 0,0:04:49.26,0:04:51.70,Default,Those objects, by the way,\Nin array can be of any class. 
Dialogue: 0,0:04:51.70,0:04:54.77,Default,There's really no way to\Nspecify what kind of class 
Dialogue: 0,0:04:55.24,0:04:56.96,Default,of object is in an array.\N
Dialogue: 0,0:04:56.96,0:04:58.47,Default,Some languages allow\Nyou to do that. 
Dialogue: 0,0:04:58.47,0:04:59.93,Default,You can specify "This\Nis an array 
Dialogue: 0,0:04:59.93,0:05:02.68,Default,of strings" and it knows that.\N
Dialogue: 0,0:05:02.81,0:05:04.39,Default,But in Objective-C\Nyou can't do that. 
Dialogue: 0,0:05:04.39,0:05:06.68,Default,And we're going to talk\Nabout how we deal with that. 
Dialogue: 0,0:05:06.68,0:05:08.78,Default,That's a little bit of the\Nwild west of Objective-C, 
Dialogue: 0,0:05:08.78,0:05:10.37,Default,but there are ways\Nto kind of check 
Dialogue: 0,0:05:10.37,0:05:12.86,Default,and see what the\Nobjects are if you want 
Dialogue: 0,0:05:12.86,0:05:13.99,Default,to be really safe about it.\N
Dialogue: 0,0:05:14.47,0:05:16.36,Default,But in this case we just\Nhave this mutable array. 
Dialogue: 0,0:05:16.36,0:05:18.96,Default,And mutable means that we\Ncan add objects to the array. 
Dialogue: 0,0:05:18.96,0:05:21.57,Default,Normally an NS array\Nis immutable. 
Dialogue: 0,0:05:21.85,0:05:24.40,Default,Okay? Once it's created,\Nwhatever objects enter it, 
Dialogue: 0,0:05:24.40,0:05:25.63,Default,that's the objects that\Nare in it forever -- 
Dialogue: 0,0:05:25.63,0:05:27.58,Default,you can't take any out\Nand you can't put any in. 
Dialogue: 0,0:05:27.92,0:05:29.68,Default,So if we want array\Nwhere we can add stuff, 
Dialogue: 0,0:05:29.68,0:05:30.89,Default,we have to use this subclass\N
Dialogue: 0,0:05:30.89,0:05:32.64,Default,of NS array called\NNS mutable array. 
Dialogue: 0,0:05:33.32,0:05:35.32,Default,Okay? You can see\Nthat it's a property. 
Dialogue: 0,0:05:35.80,0:05:38.54,Default,It's strong because we want\Nthis array to stay in the heap 
Dialogue: 0,0:05:38.54,0:05:40.22,Default,as long as we're pointing at it.\N
Dialogue: 0,0:05:40.56,0:05:42.26,Default,And of course, we always\Nput nonatomic there. 
Dialogue: 0,0:05:42.26,0:05:45.24,Default,Okay? So this is going\Nto be an array of cards. 
Dialogue: 0,0:05:45.95,0:05:49.85,Default,Now that we have this, we could\Neasily implement add card, 
Dialogue: 0,0:05:49.85,0:05:54.24,Default,for example, by just saying,\N"If at top, then insert object," 
Dialogue: 0,0:05:54.39,0:05:56.98,Default,the card, which is the\Nargument to this method -- 
Dialogue: 0,0:05:56.98,0:05:58.95,Default,first argument --\N"add index zero." 
Dialogue: 0,0:05:59.21,0:06:03.71,Default,So insert object add index is\Na method in NS mutable array, 
Dialogue: 0,0:06:03.98,0:06:06.60,Default,not in NS array -- only\Nin NS mutable array 
Dialogue: 0,0:06:06.60,0:06:09.04,Default,because that would\Nbe mutating it -- 
Dialogue: 0,0:06:09.28,0:06:11.82,Default,that inserts the object\Nat that index in the array 
Dialogue: 0,0:06:11.82,0:06:13.68,Default,and index zero is\Ngoing to be the top 
Dialogue: 0,0:06:13.75,0:06:15.17,Default,that we're going to define.\N
Dialogue: 0,0:06:15.17,0:06:17.10,Default,And then otherwise if we're\Nnot going to put it at the top, 
Dialogue: 0,0:06:17.10,0:06:17.92,Default,we're going to put\Nit at the bottom, 
Dialogue: 0,0:06:17.92,0:06:20.40,Default,we're going to use a different\NNS mutable array method called 
Dialogue: 0,0:06:20.40,0:06:21.08,Default,add object.\N
Dialogue: 0,0:06:21.15,0:06:23.00,Default,And that just adds something\Nat the end of the array. 
Dialogue: 0,0:06:23.89,0:06:24.86,Default,So everyone cool with that?\N
Dialogue: 0,0:06:25.37,0:06:27.54,Default,So I mostly just put\Nthis method in here just 
Dialogue: 0,0:06:27.54,0:06:29.33,Default,to show you there's a\Ncouple of different methods 
Dialogue: 0,0:06:29.33,0:06:32.98,Default,on mutable array and, you know,\Nhow we can use the arguments. 
Dialogue: 0,0:06:32.98,0:06:36.57,Default,It's no big thing here; it's\Njust kind of to get more used 
Dialogue: 0,0:06:36.57,0:06:37.51,Default,to what's going on here.\N
Dialogue: 0,0:06:38.22,0:06:38.90,Default,All right.\N
Dialogue: 0,0:06:38.90,0:06:39.67,Default,So that's add card.\N
Dialogue: 0,0:06:39.67,0:06:40.42,Default,Very, very simple.\N
Dialogue: 0,0:06:40.98,0:06:42.99,Default,And there's a problem, though.\N
Dialogue: 0,0:06:43.15,0:06:49.13,Default,In this add cards, if\Nwe just created a deck 
Dialogue: 0,0:06:49.19,0:06:51.50,Default,and then called add\Ncard, it would not work. 
Dialogue: 0,0:06:52.24,0:06:53.24,Default,Okay? It would do nothing.\N
Dialogue: 0,0:06:53.94,0:06:54.97,Default,Why would it do nothing?\N
Dialogue: 0,0:06:55.49,0:06:58.63,Default,Because the property\Ncards, okay -- 
Dialogue: 0,0:06:58.79,0:07:01.41,Default,self.cards is how we're\Naccessing our own property -- 
Dialogue: 0,0:07:01.41,0:07:05.24,Default,its getter looks\Nlike that by default. 
Dialogue: 0,0:07:05.24,0:07:06.30,Default,If we don't give a getter,\N
Dialogue: 0,0:07:06.30,0:07:07.28,Default,that's what the getter\Nlooks like. 
Dialogue: 0,0:07:07.64,0:07:09.62,Default,It's just going to\Nreturn this underbar cards 
Dialogue: 0,0:07:09.62,0:07:10.39,Default,instance variable.\N
Dialogue: 0,0:07:10.59,0:07:12.52,Default,Well, that underbar cards\Ninstance variable's going 
Dialogue: 0,0:07:12.52,0:07:16.34,Default,to start out at zero because\Nall instance variables 
Dialogue: 0,0:07:16.63,0:07:18.53,Default,in an Objective-C\Nobject start out zero. 
Dialogue: 0,0:07:18.60,0:07:19.10,Default,All of them.\N
Dialogue: 0,0:07:19.45,0:07:21.64,Default,Okay? So including pointers.\N
Dialogue: 0,0:07:21.89,0:07:24.58,Default,So that pointer will be\Nzero, which is we call nil, 
Dialogue: 0,0:07:24.91,0:07:26.34,Default,which means it doesn't\Npoint to anything, 
Dialogue: 0,0:07:26.56,0:07:28.84,Default,which means there\Nis no array, okay? 
Dialogue: 0,0:07:29.38,0:07:31.91,Default,We got a pointer to an\Narray that doesn't point 
Dialogue: 0,0:07:31.91,0:07:32.77,Default,to anything right now.\N
Dialogue: 0,0:07:33.19,0:07:34.43,Default,Okay? So that's a problem.\N
Dialogue: 0,0:07:34.68,0:07:36.86,Default,So when we execute\Nthe code in add cards 
Dialogue: 0,0:07:36.86,0:07:41.25,Default,like self.cards add object\Ncard, that's going to not crash 
Dialogue: 0,0:07:41.90,0:07:43.34,Default,but not do anything, either.\N
Dialogue: 0,0:07:43.79,0:07:47.11,Default,Okay? Because I told you that\Nyou can send messages to nil, 
Dialogue: 0,0:07:47.45,0:07:50.65,Default,send messages to pointers, to\Nobjects where it's not pointing 
Dialogue: 0,0:07:50.65,0:07:53.08,Default,to one at the time,\Nand it will not crash. 
Dialogue: 0,0:07:53.72,0:07:55.87,Default,If you send a message\Nthat returns a value, 
Dialogue: 0,0:07:56.11,0:07:58.36,Default,that message will\Nnot execute any code 
Dialogue: 0,0:07:58.36,0:07:59.46,Default,but it will return zero.\N
Dialogue: 0,0:07:59.90,0:08:01.81,Default,Okay? So a lot of zeros\Nflying around here. 
Dialogue: 0,0:08:02.15,0:08:04.06,Default,Okay? So how are we\Ngoing to fix this? 
Dialogue: 0,0:08:04.06,0:08:06.58,Default,How are we going make it\Nso that add card works? 
Dialogue: 0,0:08:06.58,0:08:08.74,Default,Well, we could put something\Nat the beginning of add card 
Dialogue: 0,0:08:08.74,0:08:15.31,Default,that says, "If self.cards is\Nnil, then go allocate an array 
Dialogue: 0,0:08:15.31,0:08:17.66,Default,in the heap and point to\Nit, and then we'll use it." 
Dialogue: 0,0:08:17.80,0:08:20.03,Default,Okay? But that would mean\Nevery single time we have 
Dialogue: 0,0:08:20.03,0:08:22.52,Default,to use self.cards we'd\Nhave to go around and check 
Dialogue: 0,0:08:22.52,0:08:23.57,Default,and make sure it's not nil.\N
Dialogue: 0,0:08:23.57,0:08:25.26,Default,And that would be very annoying.\N
Dialogue: 0,0:08:25.36,0:08:27.64,Default,Okay? That would be very\Nerror-prone, bug-prone, 
Dialogue: 0,0:08:27.64,0:08:29.03,Default,we forget to do it somewhere.\N
Dialogue: 0,0:08:29.36,0:08:30.03,Default,All these things.\N
Dialogue: 0,0:08:30.32,0:08:32.36,Default,So a great place\Nto do that little 
Dialogue: 0,0:08:32.36,0:08:35.33,Default,if check is in the getter, okay?\N
Dialogue: 0,0:08:35.33,0:08:37.23,Default,That getter that we have\Nright there for cards -- 
Dialogue: 0,0:08:37.23,0:08:39.84,Default,that's the getter for our\Nprivate property cards -- 
Dialogue: 0,0:08:40.28,0:08:43.81,Default,instead of just returning the\Ncards, let's put a line right 
Dialogue: 0,0:08:43.81,0:08:46.74,Default,in front that says,\N"If the cards is nil, 
Dialogue: 0,0:08:47.27,0:08:50.27,Default,then let's go allocate one\Nin the heap and assign it 
Dialogue: 0,0:08:50.44,0:08:51.52,Default,to the instance variable."\N
Dialogue: 0,0:08:52.20,0:08:55.84,Default,Okay? So the way you\Nallocate an array 
Dialogue: 0,0:08:55.84,0:09:00.40,Default,in the heap is you use NS\Nmutable array alloc init. 
Dialogue: 0,0:09:00.40,0:09:03.88,Default,So that's two message calls\Nnested inside of each other. 
Dialogue: 0,0:09:04.18,0:09:05.93,Default,The alloc allocates\Nthe member in the heap, 
Dialogue: 0,0:09:06.27,0:09:08.79,Default,and init initializes that\Nmemory so that it's a, 
Dialogue: 0,0:09:09.08,0:09:10.55,Default,you know, sensible array.\N
Dialogue: 0,0:09:10.55,0:09:13.50,Default,And we're going to see how\Nwe build our own initializer 
Dialogue: 0,0:09:13.72,0:09:14.65,Default,in a couple slides here.\N
Dialogue: 0,0:09:15.30,0:09:18.67,Default,So this way every single\Ntime you call self.cards, 
Dialogue: 0,0:09:18.67,0:09:20.71,Default,you can be sure that\Nit's not nil; 
Dialogue: 0,0:09:20.98,0:09:22.28,Default,it's at least going\Nto be an empty array. 
Dialogue: 0,0:09:22.28,0:09:24.91,Default,Does everyone understand\Nthis code? 
Dialogue: 0,0:09:25.92,0:09:27.54,Default,It's important to\Nunderstand this. 
Dialogue: 0,0:09:27.70,0:09:27.77,Default,Yeah.\N
Dialogue: 0,0:09:28.52,0:09:36.99,Default,[ Inaudible ]\N
Dialogue: 0,0:09:37.49,0:09:37.72,Default,>> Paul Hegarty: Okay.\N
Dialogue: 0,0:09:37.72,0:09:39.97,Default,So the question is: Instead\N
Dialogue: 0,0:09:39.97,0:09:42.50,Default,of having this initialization\Ncode be in this getter, 
Dialogue: 0,0:09:42.91,0:09:47.07,Default,why don't I make an initializer\Nlike an init for deck 
Dialogue: 0,0:09:47.43,0:09:48.54,Default,and put this inside deck?\N
Dialogue: 0,0:09:48.98,0:09:50.50,Default,Okay? And that is\Nanother option. 
Dialogue: 0,0:09:50.64,0:09:52.68,Default,And again, we're going\Nto see initializer 
Dialogue: 0,0:09:52.68,0:09:54.99,Default,for playing card deck, we're\Ngoing to make an initializer. 
Dialogue: 0,0:09:55.45,0:09:57.17,Default,And we could do that.\N
Dialogue: 0,0:09:57.46,0:10:01.03,Default,But having the initialization\Nof this thing be closer 
Dialogue: 0,0:10:01.11,0:10:04.78,Default,to the actual getting of\Nthe property is more -- 
Dialogue: 0,0:10:04.83,0:10:08.98,Default,it makes your init less full\Nof a bunch of junk like that. 
Dialogue: 0,0:10:08.98,0:10:11.61,Default,And this is called\Nlazy instantiation, 
Dialogue: 0,0:10:11.61,0:10:13.02,Default,by the way, doing it this way.\N
Dialogue: 0,0:10:13.02,0:10:14.51,Default,We are lazily waiting\N
Dialogue: 0,0:10:14.51,0:10:17.15,Default,to the last second\Nuntil we instantiate. 
Dialogue: 0,0:10:18.19,0:10:19.77,Default,This pattern is something\Neveryone 
Dialogue: 0,0:10:19.77,0:10:21.08,Default,in Objective-C is used to,\N
Dialogue: 0,0:10:21.26,0:10:22.62,Default,and you should definitely\Nuse it rather 
Dialogue: 0,0:10:22.62,0:10:23.86,Default,than doing things in your init.\N
Dialogue: 0,0:10:23.94,0:10:27.21,Default,In init you want to, you know,\Nset things, set values that, 
Dialogue: 0,0:10:27.54,0:10:30.20,Default,you know, can't easily\Nbe defaulted like this. 
Dialogue: 0,0:10:30.30,0:10:32.33,Default,Okay? But that's a\Nvery good question. 
Dialogue: 0,0:10:32.48,0:10:33.89,Default,And we'll see init\Nin a couple slides. 
Dialogue: 0,0:10:34.73,0:10:37.71,Default,Okay? So this way we're\Nguaranteed self.cards is 
Dialogue: 0,0:10:38.27,0:10:40.37,Default,never nil.\N
Dialogue: 0,0:10:40.47,0:10:40.57,Default,Yeah?\N
Dialogue: 0,0:10:40.57,0:10:40.63,Default,>> [Inaudible]\N
Dialogue: 0,0:10:40.63,0:10:40.80,Default,>> Paul Hegarty: Yeah.\N
Dialogue: 0,0:10:40.86,0:10:42.94,Default,So the underscore is\Nfrom last lecture. 
Dialogue: 0,0:10:43.19,0:10:46.23,Default,Remember that when\Nwe create a property, 
Dialogue: 0,0:10:46.54,0:10:49.92,Default,Objective-C automatically does\Nthis thing, assign synthesize: 
Dialogue: 0,0:10:49.96,0:10:51.63,Default,Cards equals underbar cards.\N
Dialogue: 0,0:10:51.86,0:10:54.61,Default,So in other words, it assigns\Nan instance variable called 
Dialogue: 0,0:10:54.61,0:10:56.31,Default,underbar name of property\N
Dialogue: 0,0:10:56.52,0:10:58.58,Default,to be the storage space\Nfor that property. 
Dialogue: 0,0:10:58.58,0:11:00.69,Default,So that's why underbar cards\Nare automatically created 
Dialogue: 0,0:11:00.74,0:11:02.56,Default,for us there behind the scenes.\N
Dialogue: 0,0:11:03.00,0:11:05.38,Default,That at sign synthesizes\Na pop up in our code, 
Dialogue: 0,0:11:05.38,0:11:06.86,Default,but it's there behind\Nthe scenes. 
Dialogue: 0,0:11:06.86,0:11:08.08,Default,That's a very good question.\N
Dialogue: 0,0:11:09.19,0:11:11.67,Default,Any other questions about this?\N
Dialogue: 0,0:11:11.87,0:11:16.06,Default,Okay. So let's collapse down\Nsome of this stuff and look 
Dialogue: 0,0:11:16.06,0:11:17.97,Default,at draw a random card, okay?\N
Dialogue: 0,0:11:18.15,0:11:22.38,Default,So draw a random card, all it\Nwants to do is get a random card 
Dialogue: 0,0:11:22.56,0:11:24.53,Default,out of that self.cards, okay?\N
Dialogue: 0,0:11:24.53,0:11:27.10,Default,So that code is very\Nsimple as well. 
Dialogue: 0,0:11:27.34,0:11:30.26,Default,So we just get a random integer.\N
Dialogue: 0,0:11:30.26,0:11:32.61,Default,That's what arc 4 random\Ndoes if you don't know. 
Dialogue: 0,0:11:32.61,0:11:34.05,Default,It's just a C library function.\N
Dialogue: 0,0:11:34.05,0:11:35.15,Default,It gets a random integer.\N
Dialogue: 0,0:11:35.54,0:11:37.72,Default,Then that little percent\Nafter it means mod -- 
Dialogue: 0,0:11:38.04,0:11:42.53,Default,okay, integer modulo -- and then\Nself.cards.count is the number 
Dialogue: 0,0:11:42.53,0:11:44.70,Default,of cards in our self.cards.\N
Dialogue: 0,0:11:44.88,0:11:48.67,Default,Okay? So we're just going to get\Na random index into self.cards, 
Dialogue: 0,0:11:49.18,0:11:51.09,Default,then assign a random card\N
Dialogue: 0,0:11:51.46,0:11:55.12,Default,to be self.cards square\Nbrackets index, okay? 
Dialogue: 0,0:11:55.40,0:11:57.60,Default,So this is that same\Nsquare brackets 
Dialogue: 0,0:11:57.60,0:12:01.24,Default,to access an array\Nkind of syntax. 
Dialogue: 0,0:12:01.49,0:12:02.16,Default,And it's interesting,\N
Dialogue: 0,0:12:02.16,0:12:05.06,Default,that self.cards square\Nbrackets index, actually, 
Dialogue: 0,0:12:05.06,0:12:07.07,Default,that's a message send\Nbelieve it or not. 
Dialogue: 0,0:12:07.30,0:12:12.29,Default,That's same as self.cards\Nobject at index index. 
Dialogue: 0,0:12:12.46,0:12:15.67,Default,Okay? It's just some special\Nsyntax and syntactic sugar 
Dialogue: 0,0:12:15.94,0:12:16.76,Default,to make it so that\Nyou don't have 
Dialogue: 0,0:12:16.76,0:12:18.46,Default,to have long object add index.\N
Dialogue: 0,0:12:18.46,0:12:21.31,Default,It's actually object at\Nsubscripted index or something 
Dialogue: 0,0:12:21.31,0:12:22.47,Default,with a real long method name.\N
Dialogue: 0,0:12:22.47,0:12:25.83,Default,So this is just a beautiful,\Nlittle simple syntax. 
Dialogue: 0,0:12:26.11,0:12:29.45,Default,But that is a message\Nsend to get the card 
Dialogue: 0,0:12:29.45,0:12:30.83,Default,at that index out of the array.\N
Dialogue: 0,0:12:30.83,0:12:33.47,Default,And then we're also\Ngoing to remove that card 
Dialogue: 0,0:12:33.47,0:12:37.87,Default,out of the array because this\Nis draw a random card, okay? 
Dialogue: 0,0:12:37.87,0:12:39.79,Default,It's draw the card\Nout of the deck. 
Dialogue: 0,0:12:40.22,0:12:41.76,Default,So it's not in the\Ndeck anymore, right? 
Dialogue: 0,0:12:42.46,0:12:45.67,Default,Now, there's a problem with\Nthis code as well, which is: 
Dialogue: 0,0:12:45.67,0:12:47.22,Default,What if the deck is empty?\N
Dialogue: 0,0:12:48.51,0:12:52.55,Default,Okay? If the deck is empty, then\Nthat unsigned index is going 
Dialogue: 0,0:12:52.55,0:12:54.29,Default,to be zero, right,\Nbecause it's going 
Dialogue: 0,0:12:54.29,0:12:56.92,Default,to be arc 4 random mod zero.\N
Dialogue: 0,0:12:56.92,0:12:58.39,Default,That's going to be zero.\N
Dialogue: 0,0:12:58.39,0:12:59.48,Default,And so you're going to say,\N
Dialogue: 0,0:12:59.48,0:13:01.65,Default,"Random card equals\Nself.card sub zero." 
Dialogue: 0,0:13:02.19,0:13:04.63,Default,Well, that's going\Nto crash your program 
Dialogue: 0,0:13:05.15,0:13:07.58,Default,because if self.cards\Nis an empty array, 
Dialogue: 0,0:13:07.95,0:13:10.37,Default,then there's no object at\Nindex zero and you're going 
Dialogue: 0,0:13:10.37,0:13:11.63,Default,to get array index\Nout of bounds. 
Dialogue: 0,0:13:12.39,0:13:14.31,Default,Okay? So be careful of that.\N
Dialogue: 0,0:13:14.48,0:13:16.80,Default,The index -- you\Ncannot get the index -- 
Dialogue: 0,0:13:16.90,0:13:18.72,Default,if an array doesn't\Nhave an object 
Dialogue: 0,0:13:18.72,0:13:20.65,Default,of that index, you can't get it.\N
Dialogue: 0,0:13:20.99,0:13:22.56,Default,So that's easy to fix, though.\N
Dialogue: 0,0:13:22.72,0:13:26.99,Default,We're just going to say,\N"If self.cards count," 
Dialogue: 0,0:13:26.99,0:13:28.09,Default,in other words if\Nthere are things 
Dialogue: 0,0:13:28.09,0:13:29.51,Default,in the array, "then\Nwe'll do that. 
Dialogue: 0,0:13:29.77,0:13:31.86,Default,Otherwise we're just going\Nto return random card," 
Dialogue: 0,0:13:31.86,0:13:34.25,Default,which I happily initialized\Nto nil 
Dialogue: 0,0:13:34.25,0:13:35.09,Default,at the beginning of my method.\N
Dialogue: 0,0:13:35.09,0:13:38.28,Default,And that's why I kind of like\Nthis thing of initialize it 
Dialogue: 0,0:13:38.28,0:13:41.78,Default,to the default value you want,\Nthen set it, and then return. 
Dialogue: 0,0:13:41.84,0:13:44.11,Default,And that way if the setting\Nfails for some reason 
Dialogue: 0,0:13:44.11,0:13:46.13,Default,like this -- it fails because\Nthere's no cards in the deck -- 
Dialogue: 0,0:13:46.13,0:13:47.83,Default,it will return the\Nreasonable default. 
Dialogue: 0,0:13:48.34,0:13:50.36,Default,That's just kind of\Na coding style thing. 
Dialogue: 0,0:13:50.62,0:13:52.79,Default,Okay? We did that same\Nthing with score and match. 
Dialogue: 0,0:13:53.61,0:13:56.56,Default,Okay? Any questions about that?\N
Dialogue: 0,0:13:57.06,0:13:57.21,Default,Yeah?\N
Dialogue: 0,0:13:58.52,0:14:03.09,Default,[ Inaudible ]\N
Dialogue: 0,0:14:03.59,0:14:04.71,Default,>> Paul Hegarty: Great question.\N
Dialogue: 0,0:14:04.97,0:14:09.59,Default,So the question is: When do I\Nuse NS integer or NSU integer 
Dialogue: 0,0:14:11.18,0:14:14.32,Default,versus int or even NS\Nnumber, which is an object 
Dialogue: 0,0:14:14.32,0:14:15.38,Default,which we haven't\Ntalked about yet? 
Dialogue: 0,0:14:15.79,0:14:17.43,Default,And the answer is it's\Na matter of style. 
Dialogue: 0,0:14:17.63,0:14:19.31,Default,And we'll talk a little\Nbit about that style 
Dialogue: 0,0:14:19.31,0:14:20.75,Default,and when to use these things.\N
Dialogue: 0,0:14:20.93,0:14:24.02,Default,Here I don't really want to use\Nan NS number which is an object 
Dialogue: 0,0:14:24.02,0:14:25.44,Default,when I'm just using\Nit, you know, 
Dialogue: 0,0:14:25.44,0:14:27.82,Default,as a little local\Nthing like that. 
Dialogue: 0,0:14:27.82,0:14:28.64,Default,You would never do that.\N
Dialogue: 0,0:14:28.64,0:14:30.28,Default,You're using NS numbers\Nbasically 
Dialogue: 0,0:14:30.28,0:14:32.37,Default,to pass them to methods.\N
Dialogue: 0,0:14:32.37,0:14:35.56,Default,And even then you could pass\Nints, you know, and floats. 
Dialogue: 0,0:14:35.56,0:14:39.56,Default,So it will be become obvious\Nas I talk about NS number, 
Dialogue: 0,0:14:39.56,0:14:40.51,Default,which we'll do next week.\N
Dialogue: 0,0:14:41.82,0:14:43.44,Default,Okay. So that's it for deck.\N
Dialogue: 0,0:14:43.61,0:14:45.71,Default,Deck, very simple class as well.\N
Dialogue: 0,0:14:45.71,0:14:48.71,Default,So let's move onto another\Nclass, which is playing card. 
Dialogue: 0,0:14:49.09,0:14:50.66,Default,Okay? The reason I'm\Nshowing you playing cards, 
Dialogue: 0,0:14:50.66,0:14:52.73,Default,I just want to show you what it\Nlooks like to make a subclass 
Dialogue: 0,0:14:52.73,0:14:54.15,Default,of another class\Nthat you've written. 
Dialogue: 0,0:14:54.15,0:14:56.51,Default,So playing card is\Na subclass of card. 
Dialogue: 0,0:14:56.75,0:14:59.92,Default,And this is the specific\Ncard like king of hearts, 
Dialogue: 0,0:14:59.92,0:15:02.42,Default,three of diamonds, that\Nkind of card, okay? 
Dialogue: 0,0:15:02.99,0:15:06.68,Default,Now, it has properties that\Nare specific to a playing card, 
Dialogue: 0,0:15:06.68,0:15:08.03,Default,which is the suit and rank.\N
Dialogue: 0,0:15:08.59,0:15:09.98,Default,Okay? The rank being\Nlike a three, 
Dialogue: 0,0:15:09.98,0:15:11.55,Default,four, a jack, king, right?\N
Dialogue: 0,0:15:11.85,0:15:14.03,Default,And the suit being\Nhearts, diamonds, clubs. 
Dialogue: 0,0:15:14.27,0:15:17.69,Default,And I'm going to represent the\Nsuit as a single character -- 
Dialogue: 0,0:15:17.69,0:15:19.51,Default,the hearts characters,\Nthe clubs character. 
Dialogue: 0,0:15:19.51,0:15:22.25,Default,Remember I typed the\Nclubs character I think 
Dialogue: 0,0:15:22.25,0:15:23.35,Default,in the card we might\Nhave shown that. 
Dialogue: 0,0:15:23.35,0:15:23.68,Default,I don't know.\N
Dialogue: 0,0:15:23.68,0:15:25.20,Default,But you can type a\Nsingle character. 
Dialogue: 0,0:15:25.20,0:15:27.30,Default,Unicode has a character\Nfor each of the four suits. 
Dialogue: 0,0:15:27.30,0:15:28.76,Default,So that's what my\Nsuit is going to be. 
Dialogue: 0,0:15:28.76,0:15:30.09,Default,And then the rank is\Ngoing to be a number 
Dialogue: 0,0:15:30.09,0:15:33.08,Default,between zero and thirteen.\N
Dialogue: 0,0:15:33.08,0:15:34.10,Default,Is that king?\N
Dialogue: 0,0:15:34.65,0:15:36.42,Default,Yeah. Representing the rank.\N
Dialogue: 0,0:15:36.63,0:15:38.84,Default,So that's how I'm going to\Nrepresent in my public API. 
Dialogue: 0,0:15:38.84,0:15:43.61,Default,And here I'm using notice NSU\Ninteger instead of unsigned int. 
Dialogue: 0,0:15:43.95,0:15:46.80,Default,So NSU integer and unsigned\Nint are almost exactly the 
Dialogue: 0,0:15:46.80,0:15:47.28,Default,same thing.\N
Dialogue: 0,0:15:47.28,0:15:50.13,Default,The only thing about NSU\Ninteger is it's typedef. 
Dialogue: 0,0:15:50.13,0:15:52.55,Default,It might be a little different\Non different platforms. 
Dialogue: 0,0:15:52.55,0:15:56.17,Default,For example, the new iPhone\N5s are 64-bit processers. 
Dialogue: 0,0:15:56.53,0:15:59.05,Default,So NSU integer is going\Nto be a 64-bit int, 
Dialogue: 0,0:15:59.49,0:16:01.56,Default,unsigned int on an iPhone 5.\N
Dialogue: 0,0:16:01.56,0:16:03.65,Default,And it might only\Nabout a 32-bit one back 
Dialogue: 0,0:16:03.65,0:16:05.05,Default,on an iPhone 4 and before.\N
Dialogue: 0,0:16:05.33,0:16:08.23,Default,Okay? So that's a\Nlittle bit different. 
Dialogue: 0,0:16:08.69,0:16:10.44,Default,So a minor int.\N
Dialogue: 0,0:16:10.44,0:16:12.48,Default,We were probably not\Nrepresenting integers. 
Dialogue: 0,0:16:12.48,0:16:14.13,Default,Certainly here we're only\Ngoing zero to thirteen. 
Dialogue: 0,0:16:14.42,0:16:15.81,Default,Probably doesn't matter.\N
Dialogue: 0,0:16:15.81,0:16:18.30,Default,But, you know, we're not\Nrepresenting integers that are 
Dialogue: 0,0:16:18.30,0:16:20.78,Default,so gigantic that we're going\Nto be using the 33rd bit. 
Dialogue: 0,0:16:21.64,0:16:26.27,Default,So notice that in playing\Ncard we're overriding card 
Dialogue: 0,0:16:26.27,0:16:28.19,Default,method contents.\N
Dialogue: 0,0:16:28.33,0:16:30.77,Default,Okay? We inherit contents\Nfrom our superclass. 
Dialogue: 0,0:16:30.99,0:16:33.72,Default,And by default contents\Njust returns the value 
Dialogue: 0,0:16:34.01,0:16:35.98,Default,of whatever the contents\Nproperty is. 
Dialogue: 0,0:16:36.32,0:16:39.56,Default,But here in the playing card\Nwe're going to override contents 
Dialogue: 0,0:16:39.56,0:16:41.52,Default,to actually calculate\Nour contents, 
Dialogue: 0,0:16:41.72,0:16:43.69,Default,based on these other\Ntwo properties. 
Dialogue: 0,0:16:43.93,0:16:46.54,Default,Okay? So we're overriding\Nthe getter of contents 
Dialogue: 0,0:16:46.54,0:16:49.18,Default,so that it always\Nreturns a string -- 
Dialogue: 0,0:16:49.44,0:16:50.95,Default,the contents of this\Nplaying card -- 
Dialogue: 0,0:16:51.24,0:16:52.93,Default,that is calculated\Nfrom the suit and rank. 
Dialogue: 0,0:16:53.55,0:16:54.44,Default,You see what we're doing here?\N
Dialogue: 0,0:16:54.69,0:16:57.33,Default,So we're basically taking\Nthe storage of contents -- 
Dialogue: 0,0:16:57.33,0:16:59.96,Default,underbar contents -- from our\Nsuperclass and ignoring it 
Dialogue: 0,0:17:00.32,0:17:01.62,Default,because we're overriding\Nits getter. 
Dialogue: 0,0:17:01.62,0:17:05.97,Default,Okay? So this is a perfectly\Nvalid reason why we do these 
Dialogue: 0,0:17:05.97,0:17:08.06,Default,properties as well because\Nwe might have a better way 
Dialogue: 0,0:17:08.06,0:17:09.80,Default,to do things than the storage.\N
Dialogue: 0,0:17:10.07,0:17:11.71,Default,Now, here's a way we\Ncould implement it: 
Dialogue: 0,0:17:11.71,0:17:13.64,Default,We can just return\Na string, okay? 
Dialogue: 0,0:17:13.64,0:17:16.59,Default,NS string, string with format\Njust like printf-ing a string. 
Dialogue: 0,0:17:17.12,0:17:19.30,Default,Don't worry about\Nthat syntax too much. 
Dialogue: 0,0:17:19.79,0:17:22.96,Default,And I'm printf-ing a string with\Npercent D and percent at sign. 
Dialogue: 0,0:17:22.96,0:17:26.40,Default,So percent D means integer;\Npercent at sign means an object. 
Dialogue: 0,0:17:26.71,0:17:28.43,Default,Okay? A string representation\Nof an object. 
Dialogue: 0,0:17:28.43,0:17:30.55,Default,And then I'm just using\Nthe rank and suit. 
Dialogue: 0,0:17:31.04,0:17:32.81,Default,So this would be one\Nway to do my contents. 
Dialogue: 0,0:17:32.85,0:17:35.39,Default,It's not a very good way\Nbecause, for example, 
Dialogue: 0,0:17:35.39,0:17:38.58,Default,the jack of hearts would\Nsay 11 hearts, okay? 
Dialogue: 0,0:17:38.58,0:17:42.46,Default,It's not going to say J at\Nleast; we want to say J, not 11. 
Dialogue: 0,0:17:42.88,0:17:44.05,Default,So this is not a very good way.\N
Dialogue: 0,0:17:44.33,0:17:47.36,Default,So instead I'm going\Nto make an array 
Dialogue: 0,0:17:47.46,0:17:50.97,Default,that has all the right\Nthings like an A for a one, 
Dialogue: 0,0:17:51.32,0:17:55.39,Default,and a J for 11, and a Q for\N12, and a K for 13, right? 
Dialogue: 0,0:17:55.39,0:17:57.29,Default,So I'm just making\Nthis array here. 
Dialogue: 0,0:17:57.76,0:18:01.20,Default,In the middle there I had to\Ncut out to make it fit, right? 
Dialogue: 0,0:18:01.20,0:18:03.22,Default,And I even made zero\Nbe question mark. 
Dialogue: 0,0:18:03.22,0:18:05.47,Default,So if your rank is zero,\Nit's going to be, like, 
Dialogue: 0,0:18:05.64,0:18:07.23,Default,question mark, like, unset.\N
Dialogue: 0,0:18:07.23,0:18:09.18,Default,You know, your rank\Nis basically not set. 
Dialogue: 0,0:18:09.58,0:18:14.33,Default,And then I return a string,\Nwhich is taking the rank out of 
Dialogue: 0,0:18:14.33,0:18:18.29,Default,that array and appending onto\Nit the little suit string, 
Dialogue: 0,0:18:18.35,0:18:19.97,Default,the heart, or the\Nclub, or the diamond. 
Dialogue: 0,0:18:20.74,0:18:21.67,Default,Everyone understand this?\N
Dialogue: 0,0:18:22.09,0:18:25.02,Default,I'm kind of giving you this so\Nyou can see how we're mixing 
Dialogue: 0,0:18:25.02,0:18:28.19,Default,in the array notation, and\Nmessage sending, and it all kind 
Dialogue: 0,0:18:28.19,0:18:31.02,Default,of seamlessly mixes in there.\N
Dialogue: 0,0:18:31.76,0:18:35.19,Default,Okay? So now contents\Nreturns J hearts, 
Dialogue: 0,0:18:35.19,0:18:38.31,Default,or 5 diamonds, or whatever.\N
Dialogue: 0,0:18:38.93,0:18:41.97,Default,Notice that our rank\Nis really nice 
Dialogue: 0,0:18:41.97,0:18:44.29,Default,because if our rank is zero,\Nwhich it starts out being 
Dialogue: 0,0:18:44.29,0:18:45.79,Default,when we say new playing card --\N
Dialogue: 0,0:18:45.79,0:18:48.01,Default,all the instance variables are\Nzero so rank would be zero -- 
Dialogue: 0,0:18:48.01,0:18:49.12,Default,we get this nice question mark.\N
Dialogue: 0,0:18:49.37,0:18:52.48,Default,But our suit starts out as\Nnil, and it would be nice 
Dialogue: 0,0:18:52.48,0:18:54.66,Default,if the suit also\Nreturned question mark 
Dialogue: 0,0:18:54.66,0:18:56.37,Default,if it was unsaid, if it was nil.\N
Dialogue: 0,0:18:56.80,0:18:59.13,Default,So here I'm just overriding\Nthe getter of suit to say, 
Dialogue: 0,0:18:59.36,0:19:04.33,Default,"If return, if my suit is nil,\Nthen return the question mark, 
Dialogue: 0,0:19:04.33,0:19:05.77,Default,otherwise when my\Nsuit's not nil, 
Dialogue: 0,0:19:05.77,0:19:06.97,Default,then return what the suit is."\N
Dialogue: 0,0:19:07.67,0:19:10.52,Default,Okay? So I'm just kind\Nof protecting my API 
Dialogue: 0,0:19:10.79,0:19:12.45,Default,to make sure I always\Nreturn question mark 
Dialogue: 0,0:19:12.45,0:19:15.45,Default,when the rank or\Nsuit is not set. 
Dialogue: 0,0:19:17.24,0:19:17.53,Default,Yeah.\N
Dialogue: 0,0:19:17.53,0:19:18.76,Default,>> [Inaudible]\N
Dialogue: 0,0:19:18.76,0:19:19.47,Default,>> Paul Hegarty: Sorry.\N
Dialogue: 0,0:19:19.47,0:19:22.39,Default,All little at signs -- the\Nred at signs, you mean? 
Dialogue: 0,0:19:22.66,0:19:26.07,Default,Yeah. Guess we didn't\Nget to that in card. 
Dialogue: 0,0:19:26.55,0:19:27.39,Default,But we might have.\N
Dialogue: 0,0:19:27.61,0:19:30.35,Default,But remember that all strings\Nthat we're going to work 
Dialogue: 0,0:19:30.35,0:19:32.62,Default,with in this class\Nare string objects, 
Dialogue: 0,0:19:32.86,0:19:35.11,Default,not const care stars, right?\N
Dialogue: 0,0:19:35.24,0:19:36.27,Default,They're string objects.\N
Dialogue: 0,0:19:36.27,0:19:39.07,Default,And the compiler, if you put an\Nat sign in front of a string, 
Dialogue: 0,0:19:39.07,0:19:41.61,Default,it will make a string\Nobject for you, okay? 
Dialogue: 0,0:19:42.01,0:19:43.07,Default,So that's what those\Nat signs do, 
Dialogue: 0,0:19:43.07,0:19:45.11,Default,they make all those\Nstrings be string objects 
Dialogue: 0,0:19:45.36,0:19:47.91,Default,because we can't put a const\Ncare star in an NS array. 
Dialogue: 0,0:19:47.91,0:19:49.82,Default,NS array is for objects,\Nso we have to put objects 
Dialogue: 0,0:19:49.82,0:19:51.28,Default,in there like NS strings.\N
Dialogue: 0,0:19:51.28,0:19:52.10,Default,Those are objects.\N
Dialogue: 0,0:19:52.38,0:19:53.32,Default,Okay? Good question.\N
Dialogue: 0,0:19:53.68,0:19:53.81,Default,Yeah?\N
Dialogue: 0,0:19:55.52,0:20:09.05,Default,[ Inaudible ]\N
Dialogue: 0,0:20:09.55,0:20:09.78,Default,>> Paul Hegarty: Yes.\N
Dialogue: 0,0:20:10.02,0:20:11.09,Default,Okay. That's a good question.\N
Dialogue: 0,0:20:11.83,0:20:16.19,Default,If we had used that getter\Nequals notation that we used 
Dialogue: 0,0:20:16.19,0:20:18.73,Default,for is chosen and is\Nmatched to change the name, 
Dialogue: 0,0:20:18.92,0:20:21.56,Default,then when we override we\Nhave to use the new name. 
Dialogue: 0,0:20:21.83,0:20:23.22,Default,We'd have to is whatever.\N
Dialogue: 0,0:20:23.22,0:20:25.18,Default,Now, this is not the case here.\N
Dialogue: 0,0:20:25.18,0:20:26.30,Default,But I know what you're\Nsaying, and yes, 
Dialogue: 0,0:20:26.30,0:20:29.12,Default,you would have to\Nuse the new name. 
Dialogue: 0,0:20:29.53,0:20:30.14,Default,Great question.\N
Dialogue: 0,0:20:30.24,0:20:31.81,Default,Any other questions about this?\N
Dialogue: 0,0:20:32.30,0:20:35.79,Default,Okay. So that helps the suit\Nalways return question mark 
Dialogue: 0,0:20:35.79,0:20:37.48,Default,if the suit is nil or not set.\N
Dialogue: 0,0:20:37.86,0:20:40.94,Default,Let's also protect\Npeople setting the suit 
Dialogue: 0,0:20:40.94,0:20:41.80,Default,to something wrong.\N
Dialogue: 0,0:20:42.55,0:20:46.54,Default,Okay? Let's only let people set\Nthe suit using this property, 
Dialogue: 0,0:20:46.54,0:20:48.02,Default,the public setter\Nof the property. 
Dialogue: 0,0:20:48.47,0:20:50.19,Default,We'll only let people\Nset the suit 
Dialogue: 0,0:20:50.49,0:20:52.56,Default,to be one of the four suits.\N
Dialogue: 0,0:20:53.21,0:20:55.08,Default,So I just on the fly\N
Dialogue: 0,0:20:55.15,0:20:57.45,Default,in the middle there created\Nan array of those four suits. 
Dialogue: 0,0:20:57.65,0:20:59.71,Default,And then I use this\Nmethod contains object; 
Dialogue: 0,0:20:59.71,0:21:03.12,Default,what class do you think contains\Nobject is from that bit on? 
Dialogue: 0,0:21:04.56,0:21:04.86,Default,Anyone? [Inaudible]\N
Dialogue: 0,0:21:04.86,0:21:05.24,Default,>> [Inaudible]\N
Dialogue: 0,0:21:05.24,0:21:10.01,Default,>> Paul Hegarty: It's an\NNS array method, exactly. 
Dialogue: 0,0:21:10.29,0:21:12.25,Default,So contains object is\Nan NS array method. 
Dialogue: 0,0:21:12.25,0:21:15.04,Default,I'm sending it to the array that\NI create right in place there. 
Dialogue: 0,0:21:15.04,0:21:16.56,Default,The array that has\Nhearts, diamonds, 
Dialogue: 0,0:21:16.76,0:21:17.93,Default,spades, and clubs in it.\N
Dialogue: 0,0:21:18.45,0:21:20.44,Default,And I'm just asking: Do\Nyou contain this string? 
Dialogue: 0,0:21:20.76,0:21:23.77,Default,And that contains object is\Ngoing to compare the contents 
Dialogue: 0,0:21:23.77,0:21:27.18,Default,of this string against all\Nthese using a method is equal. 
Dialogue: 0,0:21:27.30,0:21:29.21,Default,Actually, it's going to say\Nis equal to all four of them 
Dialogue: 0,0:21:29.21,0:21:31.09,Default,with the suit as the\Nargument; not is equal 
Dialogue: 0,0:21:31.09,0:21:32.14,Default,to string -- is equal.\N
Dialogue: 0,0:21:32.77,0:21:35.58,Default,And in string is equal is\Nimplemented by calling is equal 
Dialogue: 0,0:21:35.58,0:21:36.89,Default,to string if the\Nargument's a string. 
Dialogue: 0,0:21:37.56,0:21:39.93,Default,Anyway, more detail than\Nyou need probably there. 
Dialogue: 0,0:21:39.93,0:21:41.40,Default,But this is obviously\Nprotecting it. 
Dialogue: 0,0:21:41.40,0:21:44.54,Default,So there's no way we can set our\Ninternal suit storage variable 
Dialogue: 0,0:21:44.80,0:21:46.51,Default,to anything except\Nfor those four suits. 
Dialogue: 0,0:21:47.71,0:21:47.88,Default,Yeah?\N
Dialogue: 0,0:21:48.52,0:21:59.33,Default,[ Inaudible ]\N
Dialogue: 0,0:21:59.83,0:22:00.60,Default,>> Paul Hegarty: Great question.\N
Dialogue: 0,0:22:00.60,0:22:01.77,Default,You guys are right on top of it.\N
Dialogue: 0,0:22:02.00,0:22:04.84,Default,So every time I use the at\Nsign open square bracket -- 
Dialogue: 0,0:22:04.84,0:22:07.08,Default,the blue one -- to\Ncreate an array, 
Dialogue: 0,0:22:07.22,0:22:09.94,Default,that's actually creating\Na new array every time. 
Dialogue: 0,0:22:10.18,0:22:13.09,Default,Okay? Because I told you that\Nthat at sign square bracket 
Dialogue: 0,0:22:13.09,0:22:15.66,Default,and all this array stuff is\Nreally just calling methods? 
Dialogue: 0,0:22:15.80,0:22:19.21,Default,Well, that's calling a method\Nlike alloc init with array 
Dialogue: 0,0:22:19.21,0:22:20.82,Default,with objects or something\Nlike that. 
Dialogue: 0,0:22:20.82,0:22:21.84,Default,Right? So it is creating it.\N
Dialogue: 0,0:22:21.84,0:22:25.02,Default,So it would be nice to move it\Nout, and we're going to do that. 
Dialogue: 0,0:22:25.26,0:22:28.39,Default,Although, again, be\Ncareful not to preoptimize. 
Dialogue: 0,0:22:28.39,0:22:29.88,Default,It probably wouldn't\Nmake any different. 
Dialogue: 0,0:22:29.88,0:22:31.82,Default,I'm only going to move it\Nout to make my code cleaner; 
Dialogue: 0,0:22:31.82,0:22:37.40,Default,I'm not going to move it out\Nfor any performance reason. 
Dialogue: 0,0:22:37.95,0:22:38.34,Default,Yeah?\N
Dialogue: 0,0:22:38.34,0:22:38.40,Default,>> [Inaudible]\N
Dialogue: 0,0:22:38.40,0:22:38.49,Default,>> Paul Hegarty: Yeah.\N
Dialogue: 0,0:22:38.49,0:22:38.55,Default,>> [Inaudible]\N
Dialogue: 0,0:22:38.55,0:22:40.24,Default,>> Paul Hegarty: The question\Nis: Would LLVM just take care 
Dialogue: 0,0:22:40.24,0:22:41.44,Default,of that, optimize\Nthat out for you? 
Dialogue: 0,0:22:41.44,0:22:44.01,Default,And it probably wouldn't\Nbecause that's a message send; 
Dialogue: 0,0:22:44.01,0:22:45.91,Default,it's not sure what there\Nmight be side effects of it. 
Dialogue: 0,0:22:45.91,0:22:47.79,Default,But in any case, we're\Njust going to do it just 
Dialogue: 0,0:22:47.79,0:22:48.78,Default,to make our code look cleaner.\N
Dialogue: 0,0:22:49.00,0:22:51.41,Default,And the performance\Nwould be negligible here. 
Dialogue: 0,0:22:51.55,0:22:52.20,Default,We're talking about UI.\N
Dialogue: 0,0:22:52.20,0:22:53.56,Default,It's not even close.\N
Dialogue: 0,0:22:54.25,0:22:56.77,Default,One thing to note, though,\Nbefore we do that is 
Dialogue: 0,0:22:56.91,0:22:59.94,Default,since we've implemented both the\Nsetter and the getter of suit, 
Dialogue: 0,0:23:00.28,0:23:03.24,Default,we are now required to do\Nthe at sign synthesize. 
Dialogue: 0,0:23:04.45,0:23:06.85,Default,Okay? In other words,\Nnormally we don't have 
Dialogue: 0,0:23:06.85,0:23:08.14,Default,to do this at sign synthesize.\N
Dialogue: 0,0:23:08.14,0:23:08.89,Default,It gets done for us.\N
Dialogue: 0,0:23:09.08,0:23:10.55,Default,But if we implement\Nboth the setter 
Dialogue: 0,0:23:10.55,0:23:12.04,Default,and the getter, now we do.\N
Dialogue: 0,0:23:12.68,0:23:15.48,Default,It's easy to do because it's\Nalways of this exact same form. 
Dialogue: 0,0:23:15.88,0:23:17.51,Default,But we do have to do it.\N
Dialogue: 0,0:23:18.62,0:23:21.31,Default,Okay. So here's -- let's\Ndo what we were saying. 
Dialogue: 0,0:23:21.31,0:23:24.98,Default,Let's take that little array\Nof suits we have in there 
Dialogue: 0,0:23:25.32,0:23:26.83,Default,and put it in another method.\N
Dialogue: 0,0:23:26.83,0:23:29.88,Default,Now, again, I'm not getting any\Nperformance by doing this, okay? 
Dialogue: 0,0:23:29.88,0:23:32.03,Default,I'm just getting code\Ncleanliness by doing this 
Dialogue: 0,0:23:32.03,0:23:33.94,Default,because I'm still -- every\Ntime I call valid suits, 
Dialogue: 0,0:23:33.94,0:23:34.91,Default,it's going to create it again.\N
Dialogue: 0,0:23:35.18,0:23:37.01,Default,Now, I could use\Na static variable. 
Dialogue: 0,0:23:37.01,0:23:39.09,Default,This is C. I could\Nstore this array. 
Dialogue: 0,0:23:39.33,0:23:40.53,Default,Started out being nil.\N
Dialogue: 0,0:23:40.72,0:23:42.99,Default,If it's nil, set\Nit to this array, 
Dialogue: 0,0:23:42.99,0:23:44.22,Default,and then it would\Nonly create it once. 
Dialogue: 0,0:23:44.25,0:23:45.48,Default,But be careful.\N
Dialogue: 0,0:23:45.48,0:23:47.21,Default,Again, code cleanliness\N
Dialogue: 0,0:23:47.21,0:23:48.81,Default,and understandably ten\Ntimes more important 
Dialogue: 0,0:23:48.81,0:23:49.85,Default,than performance like this.\N
Dialogue: 0,0:23:49.85,0:23:51.14,Default,So unless you're going\Nto call valid suits 
Dialogue: 0,0:23:51.14,0:23:52.81,Default,in the inner loop\Nthousands of times, 
Dialogue: 0,0:23:52.86,0:23:53.88,Default,it's not really going to matter.\N
Dialogue: 0,0:23:54.43,0:23:57.80,Default,But once I move that up\Ninto a different method, 
Dialogue: 0,0:23:57.80,0:24:00.49,Default,this kind of method that I moved\Nit to is a little different. 
Dialogue: 0,0:24:00.73,0:24:02.14,Default,Notice it has a plus.\N
Dialogue: 0,0:24:02.51,0:24:05.69,Default,You see a plus there instead\Nof a minus starting it? 
Dialogue: 0,0:24:06.09,0:24:08.08,Default,Plus NS array valid suits?\N
Dialogue: 0,0:24:08.39,0:24:10.70,Default,Okay. A plus method\Nis a class method. 
Dialogue: 0,0:24:11.10,0:24:13.35,Default,Okay? That means you\Nsend it to the class, 
Dialogue: 0,0:24:13.60,0:24:16.18,Default,not to an instance of an object.\N
Dialogue: 0,0:24:17.14,0:24:17.49,Default,All right?\N
Dialogue: 0,0:24:17.86,0:24:19.60,Default,So since you're not\Nsending it to an instance, 
Dialogue: 0,0:24:19.60,0:24:22.65,Default,you can't use any instance\Nvariables or anything like that. 
Dialogue: 0,0:24:23.03,0:24:25.26,Default,You can only just kind\Nof do generic stuff. 
Dialogue: 0,0:24:25.26,0:24:28.61,Default,So the only thing we really use\Nplus methods for, class methods, 
Dialogue: 0,0:24:28.61,0:24:31.51,Default,is two things really:\NCreating things 
Dialogue: 0,0:24:31.82,0:24:35.66,Default,like in the previous slide when\Nwe had string with format -- 
Dialogue: 0,0:24:36.02,0:24:38.47,Default,that's a class method that\Nwas creating a string for us; 
Dialogue: 0,0:24:38.92,0:24:41.43,Default,and then also utility\Nmethods like this, 
Dialogue: 0,0:24:41.89,0:24:45.12,Default,like the return constants\Nand things that, you know, 
Dialogue: 0,0:24:45.12,0:24:46.82,Default,our class wants and\Nutility methods. 
Dialogue: 0,0:24:47.22,0:24:48.27,Default,But here's an example.\N
Dialogue: 0,0:24:48.27,0:24:50.26,Default,And the way we call\Nthe class method -- 
Dialogue: 0,0:24:50.26,0:24:52.17,Default,you've already seen me\Ncall a few of them -- 
Dialogue: 0,0:24:52.17,0:24:55.18,Default,but here's calling it here is\Nwe put open square bracket, 
Dialogue: 0,0:24:55.26,0:24:57.66,Default,the name of the class,\Nthe name of the method. 
Dialogue: 0,0:24:58.11,0:24:59.39,Default,And again, it could\Nhave arguments. 
Dialogue: 0,0:24:59.39,0:25:00.37,Default,It's just like any other method.\N
Dialogue: 0,0:25:00.37,0:25:02.41,Default,But everyone understand this?\N
Dialogue: 0,0:25:02.92,0:25:05.64,Default,Okay. And if you go back\Nand look a couple slides 
Dialogue: 0,0:25:05.64,0:25:08.56,Default,and you see open square bracket\NNS string, string with format, 
Dialogue: 0,0:25:08.74,0:25:11.58,Default,same exact type of syntax.\N
Dialogue: 0,0:25:12.04,0:25:13.73,Default,Okay? So that's what a\Nclass method looks like. 
Dialogue: 0,0:25:13.73,0:25:16.54,Default,Again, for creating\Nthings basically 
Dialogue: 0,0:25:17.13,0:25:19.36,Default,and for utility methods.\N
Dialogue: 0,0:25:19.36,0:25:20.47,Default,And we'll talk about\Nthe difference of: 
Dialogue: 0,0:25:20.47,0:25:21.50,Default,When do we create something\N
Dialogue: 0,0:25:21.50,0:25:23.53,Default,with a class method\Nversus alloc init? 
Dialogue: 0,0:25:23.89,0:25:24.99,Default,We'll talk about that soon.\N
Dialogue: 0,0:25:25.67,0:25:28.98,Default,I'm also going to make\Nvalid suits public. 
Dialogue: 0,0:25:28.98,0:25:31.90,Default,And that way people who are\Nusing my playing card know what 
Dialogue: 0,0:25:31.90,0:25:32.87,Default,the valid suits are.\N
Dialogue: 0,0:25:33.37,0:25:35.24,Default,And all I need to do is\Nput it in the header file. 
Dialogue: 0,0:25:35.30,0:25:36.16,Default,Boom, it's public now.\N
Dialogue: 0,0:25:36.78,0:25:39.54,Default,Okay? So let's do a\Nsimilar thing here 
Dialogue: 0,0:25:39.76,0:25:41.16,Default,with those rank strings.\N
Dialogue: 0,0:25:41.43,0:25:43.62,Default,Okay? So I'm going to take\Nthose ranks strings -- 
Dialogue: 0,0:25:43.62,0:25:45.55,Default,that array of rank\Nstrings right up there -- 
Dialogue: 0,0:25:45.80,0:25:48.30,Default,and I'm going to put\Nthat in a class method. 
Dialogue: 0,0:25:49.42,0:25:50.63,Default,Okay? And again, this is\N
Dialogue: 0,0:25:50.63,0:25:52.29,Default,for readability,\Nnot for performance. 
Dialogue: 0,0:25:52.29,0:25:53.98,Default,Because every time I call\Nrank strings, it's still going 
Dialogue: 0,0:25:53.98,0:25:56.04,Default,to create that thing again.\N
Dialogue: 0,0:25:56.69,0:26:00.00,Default,And then I call it\Ninstead up there. 
Dialogue: 0,0:26:00.37,0:26:03.40,Default,And I'm not going to make\Nrank strings itself public, 
Dialogue: 0,0:26:03.71,0:26:06.63,Default,but I am going to make another\Nclass method called max rank, 
Dialogue: 0,0:26:06.89,0:26:09.61,Default,which just looks at how many\Nstrings are in rank strings. 
Dialogue: 0,0:26:09.72,0:26:12.71,Default,And I'm going to return\Nthat as a public method. 
Dialogue: 0,0:26:13.09,0:26:16.52,Default,So there's three class methods\Nfor you to sink your teeth 
Dialogue: 0,0:26:16.52,0:26:19.11,Default,into -- two of them\Npublic, one not. 
Dialogue: 0,0:26:19.89,0:26:20.10,Default,All right.\N
Dialogue: 0,0:26:20.10,0:26:22.07,Default,And so they're all\Nutility methods, right? 
Dialogue: 0,0:26:22.12,0:26:24.63,Default,We're not accessing any\Ninstance variables in any 
Dialogue: 0,0:26:24.63,0:26:26.51,Default,of those methods, okay?\N
Dialogue: 0,0:26:27.25,0:26:28.66,Default,That's the only reason\NI'm showing those, 
Dialogue: 0,0:26:28.71,0:26:30.53,Default,is just so you see what a\Nclass method looks like. 
Dialogue: 0,0:26:31.04,0:26:35.89,Default,We also could override\Nthe setter of rank just 
Dialogue: 0,0:26:35.89,0:26:38.22,Default,to be complete here to make\Nsure it doesn't allow you 
Dialogue: 0,0:26:38.22,0:26:40.91,Default,to set a wrong rank\Nlike set rank 15 -- 
Dialogue: 0,0:26:41.00,0:26:42.33,Default,there's no such card as 15.\N
Dialogue: 0,0:26:42.33,0:26:45.03,Default,So let's make sure that the\Nrank is less than the max rank, 
Dialogue: 0,0:26:45.83,0:26:47.37,Default,which is the utility\Nmethod we just did. 
Dialogue: 0,0:26:47.62,0:26:50.82,Default,Okay? Does that all come\Ntogether for you, make sense? 
Dialogue: 0,0:26:50.94,0:26:52.59,Default,So this is kind of\Nreference material. 
Dialogue: 0,0:26:53.04,0:26:55.55,Default,You have these slides that\Nhave all the annotations 
Dialogue: 0,0:26:55.55,0:26:56.51,Default,of all the things I'm saying.\N
Dialogue: 0,0:26:56.51,0:26:58.89,Default,So feel free to go back and\Nlook at it and remind yourself 
Dialogue: 0,0:26:59.22,0:27:01.96,Default,about all these NS\Narray, syntax, 
Dialogue: 0,0:27:01.96,0:27:03.70,Default,and all the class\Nmethods, all that stuff. 
Dialogue: 0,0:27:04.50,0:27:05.98,Default,Okay. The last thing\Nwe're going to look 
Dialogue: 0,0:27:06.51,0:27:08.52,Default,at is the init method business.\N
Dialogue: 0,0:27:08.52,0:27:10.79,Default,Okay? So we're going to have\Nanother class here called 
Dialogue: 0,0:27:10.79,0:27:11.84,Default,playing card deck.\N
Dialogue: 0,0:27:12.09,0:27:12.45,Default,All right?\N
Dialogue: 0,0:27:12.45,0:27:14.35,Default,And a playing card deck\Nis a subclass of deck. 
Dialogue: 0,0:27:14.35,0:27:15.44,Default,All right?\N
Dialogue: 0,0:27:15.86,0:27:17.95,Default,And it has no public API.\N
Dialogue: 0,0:27:18.98,0:27:21.58,Default,It's just going to\Noverride a method 
Dialogue: 0,0:27:21.58,0:27:25.08,Default,that it inherits\Nindirectly from NS object -- 
Dialogue: 0,0:27:25.35,0:27:27.99,Default,okay, NS object through deck,\Nwhich doesn't touch it -- 
Dialogue: 0,0:27:28.26,0:27:29.28,Default,all the way to playing\Ncard deck. 
Dialogue: 0,0:27:29.28,0:27:31.45,Default,And that method is called init.\N
Dialogue: 0,0:27:32.12,0:27:35.80,Default,Okay? So this is the same\Ninit, same kind of method 
Dialogue: 0,0:27:36.02,0:27:37.92,Default,that when we created\Nthat array -- 
Dialogue: 0,0:27:37.92,0:27:41.06,Default,that mutable array we said\NNS mutable array alloc init. 
Dialogue: 0,0:27:41.29,0:27:44.37,Default,So someone is going to call this\Nplaying card deck init method -- 
Dialogue: 0,0:27:45.01,0:27:48.23,Default,namely you in your homework\Nare going to call this 
Dialogue: 0,0:27:48.37,0:27:50.22,Default,by doing playing\Ncard deck alloc, 
Dialogue: 0,0:27:50.45,0:27:51.99,Default,and then on the outside, init.\N
Dialogue: 0,0:27:52.79,0:27:53.86,Default,Okay? And that's\Nhow you're going 
Dialogue: 0,0:27:53.86,0:27:55.39,Default,to create a playing card deck.\N
Dialogue: 0,0:27:55.39,0:27:59.24,Default,And that is how we create most\Ninstances of objects -- not all. 
Dialogue: 0,0:27:59.24,0:28:01.65,Default,Sometimes we do things like the\NNS string, string with format. 
Dialogue: 0,0:28:02.15,0:28:04.08,Default,But most of the time --\Nmore than half the time -- 
Dialogue: 0,0:28:04.08,0:28:06.30,Default,we do alloc and then\Non the outside init. 
Dialogue: 0,0:28:06.65,0:28:10.31,Default,Okay. Listen carefully:\NNever call that alloc thing 
Dialogue: 0,0:28:10.51,0:28:12.48,Default,without wrapping\Nan init around it. 
Dialogue: 0,0:28:13.04,0:28:14.19,Default,Okay? Don't ever do that.\N
Dialogue: 0,0:28:14.36,0:28:16.67,Default,That makes no sense to\Nhave an object allocated 
Dialogue: 0,0:28:16.67,0:28:18.19,Default,in the heap that's\Nnever been initialized. 
Dialogue: 0,0:28:18.53,0:28:19.72,Default,Always have that nested.\N
Dialogue: 0,0:28:19.97,0:28:23.17,Default,And vice versa: Never\Ncall that init except 
Dialogue: 0,0:28:23.17,0:28:24.73,Default,for when you wrap\Nit around an alloc. 
Dialogue: 0,0:28:25.23,0:28:27.60,Default,And definitely never call\Nthat init more than once. 
Dialogue: 0,0:28:27.80,0:28:30.76,Default,Okay? And if you obey my rule\Nof only calling it wrapped 
Dialogue: 0,0:28:30.76,0:28:32.80,Default,around an alloc, you can't\Ncall it more than once. 
Dialogue: 0,0:28:32.88,0:28:35.68,Default,Okay? Init is not something\Nlike you can re-init. 
Dialogue: 0,0:28:36.18,0:28:39.16,Default,Init happens once right\Nafter alloc, and that's it. 
Dialogue: 0,0:28:39.59,0:28:42.63,Default,Okay? That is a hard and\Nfast rule we never break. 
Dialogue: 0,0:28:43.50,0:28:44.74,Default,Okay? So you heard it here.\N
Dialogue: 0,0:28:45.07,0:28:45.53,Default,Don't forget.\N
Dialogue: 0,0:28:46.12,0:28:46.90,Default,All right.\N
Dialogue: 0,0:28:46.90,0:28:50.83,Default,Let's look at the whacky return\Ntype to this init method, okay? 
Dialogue: 0,0:28:50.93,0:28:54.55,Default,You might think this init method\Nshould return a playing card 
Dialogue: 0,0:28:54.60,0:28:57.03,Default,deck star because it's\Nkind of initializing 
Dialogue: 0,0:28:57.03,0:28:58.91,Default,and maybe it returns itself.\N
Dialogue: 0,0:28:58.91,0:29:02.34,Default,And in fact, init does\Nalways return self, okay? 
Dialogue: 0,0:29:02.54,0:29:04.44,Default,So init is always\Ngoing to return self. 
Dialogue: 0,0:29:04.77,0:29:06.66,Default,Okay. More whackiness there,\Nwhich I'm going to describe. 
Dialogue: 0,0:29:07.04,0:29:10.33,Default,Just for convenience, it always\Nreturns self so that you can do, 
Dialogue: 0,0:29:10.33,0:29:13.75,Default,like, playing card deck alloc\Ninit, sent it a message. 
Dialogue: 0,0:29:14.33,0:29:16.93,Default,Okay? So it's just convenience\Nthat it returns self. 
Dialogue: 0,0:29:17.34,0:29:20.33,Default,But it can't really have its\Nreturn type being playing card 
Dialogue: 0,0:29:20.33,0:29:23.49,Default,deck star because it\Ninherited this from NS object. 
Dialogue: 0,0:29:23.49,0:29:27.98,Default,And NS object already\Ndefined it as NS object star. 
Dialogue: 0,0:29:28.49,0:29:30.53,Default,You see? So it's kind of weird\N
Dialogue: 0,0:29:30.53,0:29:32.80,Default,that you're inheriting a method\Nwhose return value would have 
Dialogue: 0,0:29:32.80,0:29:36.88,Default,to change every time you,\Nyou know, overrode it. 
Dialogue: 0,0:29:36.88,0:29:39.74,Default,So they invented this new\Nthing -- this is new for iOS 7, 
Dialogue: 0,0:29:39.74,0:29:41.57,Default,by the way -- called\Ninstance type. 
Dialogue: 0,0:29:42.02,0:29:43.95,Default,And what instance type\Nmeans is this is going 
Dialogue: 0,0:29:43.95,0:29:46.44,Default,to return an object that\Nis of the same instance -- 
Dialogue: 0,0:29:47.33,0:29:49.23,Default,same type, same class type --\N
Dialogue: 0,0:29:49.50,0:29:51.64,Default,as the object you\Nsent this message to. 
Dialogue: 0,0:29:52.19,0:29:54.41,Default,Okay? Which makes\Nperfect sense for inits. 
Dialogue: 0,0:29:54.76,0:29:56.34,Default,And in this class that's\Nprobably all you're going 
Dialogue: 0,0:29:56.34,0:29:57.89,Default,to use this for right here.\N
Dialogue: 0,0:29:58.15,0:29:59.86,Default,So if you don't really\Nunderstand what I just said -- 
Dialogue: 0,0:29:59.86,0:30:00.81,Default,it's explained in the slides --\N
Dialogue: 0,0:30:00.81,0:30:01.85,Default,but if you don't\Nreally understand it, 
Dialogue: 0,0:30:02.06,0:30:04.09,Default,just know that whenever\Nyou do an initializer, 
Dialogue: 0,0:30:04.09,0:30:07.53,Default,it's going to return instance\Ntype as its return type 
Dialogue: 0,0:30:07.69,0:30:09.08,Default,and you're always\Ngoing to return self. 
Dialogue: 0,0:30:10.03,0:30:14.50,Default,Okay? Now, also just\Ntake my word for it. 
Dialogue: 0,0:30:14.50,0:30:16.62,Default,We're going to do these\Nnext lines of codes as well 
Dialogue: 0,0:30:16.62,0:30:18.22,Default,because they are really strange.\N
Dialogue: 0,0:30:18.29,0:30:21.70,Default,That first line, self equals\Nsuper init, that is weird. 
Dialogue: 0,0:30:21.89,0:30:22.88,Default,That is super weird.\N
Dialogue: 0,0:30:23.12,0:30:26.40,Default,Okay? Assigning something\Nto self in Objective-C -- 
Dialogue: 0,0:30:26.90,0:30:28.93,Default,just never do that,\Nexcept for this one time 
Dialogue: 0,0:30:28.93,0:30:30.12,Default,and that's in your init.\N
Dialogue: 0,0:30:30.31,0:30:33.33,Default,Okay? You take self\Nand you assign it 
Dialogue: 0,0:30:33.41,0:30:35.89,Default,to calling your superclasses\Ninitializer 
Dialogue: 0,0:30:35.89,0:30:37.70,Default,so that your superclass\Ngets initialized. 
Dialogue: 0,0:30:37.96,0:30:40.34,Default,Why do we assign\Nthe result to self? 
Dialogue: 0,0:30:41.00,0:30:43.00,Default,It's kind of ancient history\N
Dialogue: 0,0:30:43.00,0:30:45.09,Default,as to why this has been\Ndone for a long time. 
Dialogue: 0,0:30:45.45,0:30:48.86,Default,Basically we're checking the\Nreturn of our superclasses init 
Dialogue: 0,0:30:48.86,0:30:50.68,Default,to make sure it properly\Ninitialized. 
Dialogue: 0,0:30:50.68,0:30:54.24,Default,Because at any time if your\Ninitializer cannot initialize 
Dialogue: 0,0:30:54.31,0:30:55.91,Default,itself, it should return nil.\N
Dialogue: 0,0:30:57.00,0:31:00.32,Default,Okay? And that lets everybody\Nknow any of your subclasses 
Dialogue: 0,0:31:00.32,0:31:02.21,Default,or anyone trying to\Nalloc and initialize you, 
Dialogue: 0,0:31:02.68,0:31:04.89,Default,you could not create\Na well-formed object. 
Dialogue: 0,0:31:05.10,0:31:07.55,Default,Okay? So you can see how this\Ncode, strange as it is -- 
Dialogue: 0,0:31:07.55,0:31:09.57,Default,self equals super\Ninit, and then if self, 
Dialogue: 0,0:31:09.57,0:31:12.06,Default,I'm going to initialize\Nmyself, return self -- 
Dialogue: 0,0:31:12.51,0:31:14.33,Default,that's going to ensure\Nthat I don't even try 
Dialogue: 0,0:31:14.33,0:31:16.53,Default,to initialize myself\Nif my superclass, 
Dialogue: 0,0:31:16.81,0:31:20.72,Default,when I call its init, you\Nknow, can't initialize itself. 
Dialogue: 0,0:31:21.38,0:31:23.71,Default,Okay? So just do it.\N
Dialogue: 0,0:31:24.28,0:31:26.79,Default,If you don't understand it,\Ndon't worry about it too much. 
Dialogue: 0,0:31:27.01,0:31:27.51,Default,Just do it.\N
Dialogue: 0,0:31:27.74,0:31:29.67,Default,Now, one thing here\Nis we're talking 
Dialogue: 0,0:31:29.67,0:31:31.15,Default,about init with no arguments.\N
Dialogue: 0,0:31:31.15,0:31:33.75,Default,It is possible to have\Ninitializers with arguments 
Dialogue: 0,0:31:33.75,0:31:35.13,Default,because sometimes\Nyou need arguments 
Dialogue: 0,0:31:35.13,0:31:36.69,Default,to properly initialize a class.\N
Dialogue: 0,0:31:36.95,0:31:39.59,Default,And we're going to talk about\Nthat a little more on Monday. 
Dialogue: 0,0:31:40.06,0:31:42.41,Default,Okay? So today we're just going\Nto kind of bare bones init. 
Dialogue: 0,0:31:43.06,0:31:45.05,Default,So what does this\Ninit need to do? 
Dialogue: 0,0:31:45.34,0:31:48.09,Default,What do I need to do to have a\Nwell-formed initialized playing 
Dialogue: 0,0:31:48.09,0:31:48.57,Default,card deck?\N
Dialogue: 0,0:31:48.57,0:31:51.08,Default,Well, a playing card\Ndeck has 52 cards in it, 
Dialogue: 0,0:31:51.36,0:31:52.46,Default,one of each kind of card.\N
Dialogue: 0,0:31:53.31,0:31:57.42,Default,Okay? King of clubs, three of\Ndiamonds -- all 52 of them. 
Dialogue: 0,0:31:57.76,0:32:01.84,Default,So I just need to iterate to\Nall the suits, and then iterate 
Dialogue: 0,0:32:01.84,0:32:02.89,Default,through all the ranks,\N
Dialogue: 0,0:32:03.17,0:32:05.81,Default,and create a card,\Nand add it to myself. 
Dialogue: 0,0:32:06.25,0:32:08.21,Default,So here's me iterating\Nthrough the suits, 
Dialogue: 0,0:32:08.47,0:32:09.69,Default,iterating through the ranks.\N
Dialogue: 0,0:32:09.82,0:32:11.31,Default,Everyone cool with that?\N
Dialogue: 0,0:32:12.39,0:32:16.66,Default,Then I'm going to import\Nplaying card because I'm going 
Dialogue: 0,0:32:16.66,0:32:19.78,Default,to create a playing card,\Nplaying card alloc init. 
Dialogue: 0,0:32:20.53,0:32:21.28,Default,Then I'm going to set\N
Dialogue: 0,0:32:21.28,0:32:23.24,Default,that card's rank,\Nset that card's suit. 
Dialogue: 0,0:32:23.84,0:32:27.89,Default,Rank and suit are my little\Niteration variables there. 
Dialogue: 0,0:32:28.41,0:32:30.68,Default,And then I'm going\Nto add it to myself. 
Dialogue: 0,0:32:31.06,0:32:33.67,Default,I'm a deck, so that's\Nperfectly fine. 
Dialogue: 0,0:32:35.51,0:32:37.36,Default,Everybody cool with that code?\N
Dialogue: 0,0:32:39.37,0:32:42.94,Default,So now I'm a well-formed playing\Ncard deck and I can be used 
Dialogue: 0,0:32:42.94,0:32:45.91,Default,to draw random cards and all\Nthat stuff, which you will need 
Dialogue: 0,0:32:45.91,0:32:46.69,Default,to do for your homework.\N
Dialogue: 0,0:32:47.46,0:32:50.04,Default,Okay? And in fact, for your\Nhomework you're going to have 
Dialogue: 0,0:32:50.04,0:32:51.67,Default,to type all four of\Nthese classes in. 
Dialogue: 0,0:32:51.67,0:32:53.67,Default,I want you to get\Nexperience entering classes, 
Dialogue: 0,0:32:53.67,0:32:56.46,Default,typing a thing, watching\Nas Xcode complains at you 
Dialogue: 0,0:32:56.46,0:32:59.79,Default,as you mistype things,\Nand stuff like that. 
Dialogue: 0,0:32:59.79,0:33:00.39,Default,And then you're going\N
Dialogue: 0,0:33:00.39,0:33:03.16,Default,to be using playing card\Ndeck and playing card. 
Dialogue: 0,0:33:03.53,0:33:06.23,Default,Well, playing card deck and card\Nreally are the two main ones 
Dialogue: 0,0:33:06.23,0:33:07.76,Default,you're going to be using\Nto do your homework. 
Dialogue: 0,0:33:08.41,0:33:10.89,Default,Okay? Questions about that?\N
Dialogue: 0,0:33:11.89,0:33:14.23,Default,Okay. So that's it\Nfor the slides. 
Dialogue: 0,0:33:14.23,0:33:16.70,Default,So now I'm going to\Ndo a big old demo. 
Dialogue: 0,0:33:16.98,0:33:18.06,Default,And this demo is going\N
Dialogue: 0,0:33:18.06,0:33:21.02,Default,to integrate everything\Nyou've seen so far, okay? 
Dialogue: 0,0:33:21.30,0:33:23.69,Default,Most notably that MVC\Nstuff we talked about, 
Dialogue: 0,0:33:23.69,0:33:25.65,Default,like target action, you\Nknow, dropping the target 
Dialogue: 0,0:33:25.65,0:33:28.58,Default,and shooting the action\Nor the green arrow outlet 
Dialogue: 0,0:33:28.77,0:33:29.90,Default,that points the other way.\N
Dialogue: 0,0:33:30.08,0:33:32.05,Default,Okay? We're going\Nto show you what 
Dialogue: 0,0:33:32.05,0:33:34.18,Default,that actually looks\Nlike in Xcode. 
Dialogue: 0,0:33:34.23,0:33:37.20,Default,I think when I asked who\Nof you have done Xcode, 
Dialogue: 0,0:33:37.20,0:33:39.25,Default,almost every single one\Nof you raised your hands. 
Dialogue: 0,0:33:39.25,0:33:40.75,Default,So I'm not going to spend\Ntoo much time talking 
Dialogue: 0,0:33:40.75,0:33:42.17,Default,about all the buttons in Xcode.\N
Dialogue: 0,0:33:42.17,0:33:44.40,Default,I think I'll quickly\Npass over those. 
Dialogue: 0,0:33:44.69,0:33:48.87,Default,But if you haven't used Xcode,\Nit's in very much detail 
Dialogue: 0,0:33:48.87,0:33:49.76,Default,in the lecture slides.\N
Dialogue: 0,0:33:49.76,0:33:51.26,Default,There's kind of this\Nwalkthrough. 
Dialogue: 0,0:33:51.45,0:33:53.94,Default,By the way, if you're following\Nalong in the lecture slides, 
Dialogue: 0,0:33:54.20,0:33:55.47,Default,my demo's not going\Nto be exactly 
Dialogue: 0,0:33:55.47,0:33:56.74,Default,like what's in the slides.\N
Dialogue: 0,0:33:57.08,0:33:59.20,Default,The slides cover a little\Nbit more than I can cover 
Dialogue: 0,0:33:59.20,0:34:00.36,Default,in forty minutes here.\N
Dialogue: 0,0:34:00.87,0:34:02.93,Default,And it's also reference\Nmaterial. 
Dialogue: 0,0:34:03.49,0:34:07.16,Default,Okay? So if I do something today\Nin this demo and you're like, 
Dialogue: 0,0:34:07.34,0:34:08.32,Default,"Oh, how did he do that?"\N
Dialogue: 0,0:34:08.44,0:34:10.20,Default,if you go look in those\Nslides, it will tell you. 
Dialogue: 0,0:34:10.71,0:34:13.04,Default,So do not feel like, "I\Ngot to furiously write 
Dialogue: 0,0:34:13.04,0:34:14.82,Default,down every button\Nclick he's going to do 
Dialogue: 0,0:34:14.82,0:34:15.64,Default,in the next forty minutes."\N
Dialogue: 0,0:34:15.64,0:34:16.37,Default,No way. Okay?\N
Dialogue: 0,0:34:16.69,0:34:19.25,Default,Follow along in those\Nslides if you want, 
Dialogue: 0,0:34:19.25,0:34:22.65,Default,or just close your laptop,\Nand watch, and let it sink 
Dialogue: 0,0:34:22.65,0:34:26.13,Default,in because you're going to have\Nto reproduce what I'm doing 
Dialogue: 0,0:34:26.13,0:34:27.89,Default,in the next forty\Nminutes for your homework. 
Dialogue: 0,0:34:28.41,0:34:29.49,Default,And those slides are\Ngoing to walk you 
Dialogue: 0,0:34:29.49,0:34:31.35,Default,through step by step\Nhow to do it. 
Dialogue: 0,0:34:31.35,0:34:33.75,Default,So do not feel like you need\Nto do anything right now 
Dialogue: 0,0:34:34.03,0:34:35.31,Default,but let this all sink in.\N
Dialogue: 0,0:34:35.31,0:34:37.13,Default,Get a feel for what's going on.\N
Dialogue: 0,0:34:37.70,0:34:40.64,Default,Okay? And then when\Nyou sit down to do it, 
Dialogue: 0,0:34:40.64,0:34:43.51,Default,you'll be guided through it.\N
Dialogue: 0,0:34:43.51,0:34:46.23,Default,Next week we're going to talk\Na lot more about Objective-C, 
Dialogue: 0,0:34:46.23,0:34:47.80,Default,answer some of these\Nmore detailed questions 
Dialogue: 0,0:34:47.80,0:34:50.42,Default,like NS number and some of these\Nother things people are asking. 
Dialogue: 0,0:34:50.42,0:34:53.67,Default,And we'll talk about some\Nof the specific things 
Dialogue: 0,0:34:53.67,0:34:57.75,Default,about Objective-C like\Ndynamic binding, and protocols, 
Dialogue: 0,0:34:57.75,0:35:00.04,Default,and things that you don't\Ngenerally see as much 
Dialogue: 0,0:35:00.04,0:35:02.85,Default,in other languages or don't\Nexist in other languages. 
Dialogue: 0,0:35:02.85,0:35:04.07,Default,So we'll try and cover all that.\N
Dialogue: 0,0:35:04.07,0:35:05.71,Default,So by the end of\Nnext week you're 
Dialogue: 0,0:35:05.71,0:35:07.24,Default,up to speed in Objective-C.\N
Dialogue: 0,0:35:07.45,0:35:10.04,Default,You're starting to\Nreally run with Xcode. 
Dialogue: 0,0:35:10.18,0:35:13.62,Default,And so the week after that we\Ncan really start doing some, 
Dialogue: 0,0:35:13.78,0:35:18.02,Default,you know, high power\NiOS 7 stuff. 
Dialogue: 0,0:35:18.09,0:35:20.40,Default,Okay. So demo here.\N
Dialogue: 0,0:35:21.92,0:35:22.45,Default,[Inaudible] that.\N
Dialogue: 0,0:35:22.45,0:35:22.66,Default,All right.\N
Dialogue: 0,0:35:23.15,0:35:25.80,Default,So the demo I'm going\Nto run in Xcode. 
Dialogue: 0,0:35:25.80,0:35:27.43,Default,So I'm just going\Nto launch Xcode. 
Dialogue: 0,0:35:27.76,0:35:32.50,Default,So Xcode you get by running --\Ngoing to your Mac app store. 
Dialogue: 0,0:35:32.50,0:35:34.59,Default,That's this thing\Ndown here, right? 
Dialogue: 0,0:35:34.94,0:35:36.19,Default,Get the app store on your Mac,\N
Dialogue: 0,0:35:36.19,0:35:37.68,Default,and you just search\Nfor Xcode, find it. 
Dialogue: 0,0:35:37.68,0:35:38.03,Default,It's free.\N
Dialogue: 0,0:35:38.03,0:35:39.21,Default,You download it and you run it.\N
Dialogue: 0,0:35:39.33,0:35:40.37,Default,Okay? It's as simple as that.\N
Dialogue: 0,0:35:40.37,0:35:44.62,Default,This is what it's going to look\Nlike when you first bring it up, 
Dialogue: 0,0:35:44.88,0:35:45.97,Default,this splash screen here.\N
Dialogue: 0,0:35:45.97,0:35:48.46,Default,As the quarter goes\Non, this will fill 
Dialogue: 0,0:35:48.46,0:35:50.10,Default,up with all the projects\Nthat you're doing. 
Dialogue: 0,0:35:50.10,0:35:51.87,Default,You're probably used to\Nthat if you know Xcode. 
Dialogue: 0,0:35:52.26,0:35:55.03,Default,And what we're going to do\Ntoday is create a new project. 
Dialogue: 0,0:35:55.03,0:35:59.52,Default,You can either check an existing\Nproject out of source control 
Dialogue: 0,0:35:59.52,0:36:00.47,Default,or you can create a new one.\N
Dialogue: 0,0:36:00.47,0:36:01.81,Default,And so we're going\Nto create a new one. 
Dialogue: 0,0:36:02.29,0:36:06.28,Default,So when we create a new one, it\Nwants to give us a little bit 
Dialogue: 0,0:36:06.28,0:36:09.74,Default,of help by offering to create\Na template for different kinds 
Dialogue: 0,0:36:09.77,0:36:11.87,Default,of applications like\Nan openGL game. 
Dialogue: 0,0:36:11.87,0:36:16.50,Default,Okay. It will create some\Nframework for that for you. 
Dialogue: 0,0:36:16.50,0:36:18.83,Default,Master detail applications,\Nsomething we're going 
Dialogue: 0,0:36:18.83,0:36:20.12,Default,to do later in the quarter,\Nalthough we're going 
Dialogue: 0,0:36:20.12,0:36:21.52,Default,to build all the code ourselves;\N
Dialogue: 0,0:36:21.52,0:36:23.02,Default,we're not going to\Nuse this template. 
Dialogue: 0,0:36:23.47,0:36:27.93,Default,And this single view application\None right here is basically a 
Dialogue: 0,0:36:27.93,0:36:31.17,Default,single MVC, which is how\Nwe're going it start all 
Dialogue: 0,0:36:31.17,0:36:33.34,Default,of our applications in this\Nclassroom -- with a single MVC. 
Dialogue: 0,0:36:33.34,0:36:35.33,Default,Then we're going to add\Nmore MVCs and build up. 
Dialogue: 0,0:36:35.65,0:36:39.11,Default,Okay? So this is your\Nbasic single MVC app. 
Dialogue: 0,0:36:39.11,0:36:40.59,Default,So I'm going to click that.\N
Dialogue: 0,0:36:40.59,0:36:43.61,Default,And here it's going to ask\Nfor some information about it 
Dialogue: 0,0:36:43.61,0:36:45.82,Default,like what do you want\Nto call this app? 
Dialogue: 0,0:36:45.82,0:36:47.83,Default,This is a card matching\Ngame I have decided 
Dialogue: 0,0:36:47.83,0:36:49.87,Default,to call Machismo, okay?\N
Dialogue: 0,0:36:49.87,0:36:53.31,Default,So that's going to be the\Nname of our app just for fun. 
Dialogue: 0,0:36:53.69,0:36:55.76,Default,And organization name\Ncan be anything you want. 
Dialogue: 0,0:36:55.76,0:36:57.43,Default,It's going to appear\Nin the headers 
Dialogue: 0,0:36:57.43,0:36:59.81,Default,of all the classes\Nthat you create. 
Dialogue: 0,0:37:00.00,0:37:01.75,Default,So I make mine be\NStanford University. 
Dialogue: 0,0:37:01.75,0:37:05.47,Default,You can make yours be Bob's\NGame House or whatever. 
Dialogue: 0,0:37:05.62,0:37:09.19,Default,This identifier should\Nbe unique to you. 
Dialogue: 0,0:37:09.51,0:37:13.10,Default,So I have\Nedu.Stanford.cs193p.instructor. 
Dialogue: 0,0:37:13.32,0:37:15.94,Default,You might have\Nedu.Stanford.cs193p dot your 
Dialogue: 0,0:37:16.00,0:37:16.42,Default,SUNet ID.\N
Dialogue: 0,0:37:16.42,0:37:18.79,Default,That will be completely unique.\N
Dialogue: 0,0:37:19.29,0:37:21.72,Default,These reverse DNS\Nis a really good way 
Dialogue: 0,0:37:21.72,0:37:22.73,Default,to create a unique name.\N
Dialogue: 0,0:37:23.34,0:37:25.86,Default,And it's going to create\Na unique name for this app 
Dialogue: 0,0:37:26.02,0:37:28.44,Default,by combining this\Nwith the names. 
Dialogue: 0,0:37:28.44,0:37:30.78,Default,So you can see it's done that\Nhere, this bundle identifier. 
Dialogue: 0,0:37:31.46,0:37:32.89,Default,And then this class prefix --\N
Dialogue: 0,0:37:32.99,0:37:38.04,Default,this template is going to create\Na view and a controller for us. 
Dialogue: 0,0:37:38.41,0:37:40.71,Default,And this is saying, "What\Ndo you want the name 
Dialogue: 0,0:37:40.71,0:37:42.18,Default,of your controller class to be?"\N
Dialogue: 0,0:37:42.18,0:37:45.31,Default,By default it's going to be\Ncalled "view controller," okay? 
Dialogue: 0,0:37:45.65,0:37:49.13,Default,But if you type something here\Nlike "card game," now it's going 
Dialogue: 0,0:37:49.13,0:37:50.89,Default,to be called "card\Ngame view controller," 
Dialogue: 0,0:37:51.28,0:37:53.01,Default,which is a little\Nbetter name for us. 
Dialogue: 0,0:37:53.16,0:37:55.51,Default,So that's just the prefix\Nit's going to put on the name 
Dialogue: 0,0:37:55.51,0:37:56.91,Default,of your controller that\Nit creates for you. 
Dialogue: 0,0:37:56.91,0:38:00.19,Default,And then finally here we\Ncan create an app here just 
Dialogue: 0,0:38:00.19,0:38:03.58,Default,for iPad, or just for\NiPhone, or a universal app 
Dialogue: 0,0:38:03.92,0:38:05.46,Default,that will run on both platforms.\N
Dialogue: 0,0:38:05.46,0:38:07.92,Default,Now, when you create a\Nuniversal app, you still have 
Dialogue: 0,0:38:07.92,0:38:09.96,Default,to design your UI's separately\N
Dialogue: 0,0:38:10.19,0:38:12.19,Default,because if you have more\Nscreen rules, you're just going 
Dialogue: 0,0:38:12.19,0:38:13.15,Default,to design a different UI.\N
Dialogue: 0,0:38:13.47,0:38:15.56,Default,Okay? iPad is not\Njust a big iPhone. 
Dialogue: 0,0:38:15.56,0:38:16.70,Default,You can do a lot more stuff\N
Dialogue: 0,0:38:16.80,0:38:18.31,Default,if you have more\Nscreen real estate. 
Dialogue: 0,0:38:18.83,0:38:23.02,Default,But you still might have a lot\Nof your MVC's shared, right, 
Dialogue: 0,0:38:23.07,0:38:26.34,Default,because that iPad might have\Nlittle subareas that are in MVC 
Dialogue: 0,0:38:26.62,0:38:29.24,Default,that are exactly the same as on\Nan iPhone or very, very similar. 
Dialogue: 0,0:38:29.53,0:38:33.17,Default,So totally supported\Nin iOS 7 to build apps 
Dialogue: 0,0:38:33.17,0:38:35.53,Default,that target both platforms\Nand has great tools 
Dialogue: 0,0:38:35.53,0:38:38.27,Default,for letting you build\Nyour two UI's separately 
Dialogue: 0,0:38:38.27,0:38:40.09,Default,and share all the\NMVCs underneath. 
Dialogue: 0,0:38:40.48,0:38:42.60,Default,Okay? We're going to do\NiPhone only here just 
Dialogue: 0,0:38:42.60,0:38:44.59,Default,because it keeps the\Nscreen small and I only have 
Dialogue: 0,0:38:44.59,0:38:45.52,Default,so much real estate here.\N
Dialogue: 0,0:38:46.52,0:38:51.66,Default,[ Inaudible ]\N
Dialogue: 0,0:38:52.16,0:38:52.40,Default,>> Paul Hegarty: Yeah.\N
Dialogue: 0,0:38:52.40,0:38:54.40,Default,So the question is:\NIf I'm on my iPad 
Dialogue: 0,0:38:54.40,0:38:56.66,Default,and I run an app\Nthat's iPhone only, yes, 
Dialogue: 0,0:38:56.71,0:39:00.68,Default,there's an emulation mode\Nessentially that will kind 
Dialogue: 0,0:39:00.89,0:39:03.84,Default,of make a big iPhone-shaped\Nthing on the iPad screen. 
Dialogue: 0,0:39:04.21,0:39:05.90,Default,So we're going to\Ndo iPhone here. 
Dialogue: 0,0:39:05.90,0:39:06.36,Default,So that's it.\N
Dialogue: 0,0:39:06.36,0:39:07.21,Default,I'm going to hit next.\N
Dialogue: 0,0:39:07.58,0:39:08.76,Default,Next it wants to know,\N
Dialogue: 0,0:39:08.76,0:39:10.01,Default,"Where are you going\Nit put this project?" 
Dialogue: 0,0:39:10.25,0:39:13.67,Default,I strongly recommend putting\Nit in your home directory -- 
Dialogue: 0,0:39:13.67,0:39:15.33,Default,in a directory called\N"developer" 
Dialogue: 0,0:39:15.57,0:39:16.52,Default,in your home directory.\N
Dialogue: 0,0:39:17.13,0:39:19.68,Default,Okay? Unless maybe we're\Nworking on different class. 
Dialogue: 0,0:39:19.68,0:39:21.41,Default,Maybe you have the CS 193P\N
Dialogue: 0,0:39:21.41,0:39:22.99,Default,in your home directory\Nand then other class. 
Dialogue: 0,0:39:23.07,0:39:26.09,Default,But bottom line: Put it in your\Nhome directory; do not put it, 
Dialogue: 0,0:39:26.09,0:39:28.06,Default,like, in root or\Nsomewhere like that. 
Dialogue: 0,0:39:28.06,0:39:31.36,Default,That has in the past\Ncaused problems. 
Dialogue: 0,0:39:31.36,0:39:32.43,Default,But a great place\Nto put it here. 
Dialogue: 0,0:39:32.43,0:39:34.69,Default,This is my home directory,\NCS 193P there. 
Dialogue: 0,0:39:34.69,0:39:36.72,Default,I see home directory, developer.\N
Dialogue: 0,0:39:37.04,0:39:38.22,Default,This is where I'm\Ngoing to put it. 
Dialogue: 0,0:39:38.22,0:39:39.52,Default,I don't have any projects yet.\N
Dialogue: 0,0:39:39.52,0:39:41.66,Default,This little thing down\Nhere, source control, 
Dialogue: 0,0:39:41.66,0:39:43.06,Default,we will be talking about that.\N
Dialogue: 0,0:39:43.06,0:39:46.09,Default,It's really nicely integrated\Ninto Xcode, but we're not going 
Dialogue: 0,0:39:46.09,0:39:46.82,Default,to talk about it today.\N
Dialogue: 0,0:39:47.08,0:39:48.61,Default,So leave that unclicked.\N
Dialogue: 0,0:39:51.59,0:39:53.75,Default,And so here's our new project.\N
Dialogue: 0,0:39:53.79,0:39:56.62,Default,You can see it shows us\Nthis screen, which you get 
Dialogue: 0,0:39:56.62,0:39:58.64,Default,to by clicking on this\Nvery top thing up here. 
Dialogue: 0,0:39:58.64,0:40:00.48,Default,So this is kind of like\Nour project settings. 
Dialogue: 0,0:40:00.48,0:40:02.03,Default,And there's a whole\Nbunch of settings here. 
Dialogue: 0,0:40:02.32,0:40:04.60,Default,We'll be talk being all this\Nstuff as the quarter goes on. 
Dialogue: 0,0:40:04.60,0:40:07.90,Default,But today we're not going\Nto talk about any of it 
Dialogue: 0,0:40:07.90,0:40:10.55,Default,because we want to\Nfocus on our MVC. 
Dialogue: 0,0:40:10.55,0:40:14.75,Default,And our MVC, this right here,\Nmain.storyboard, is our view. 
Dialogue: 0,0:40:15.87,0:40:17.66,Default,Okay? That's our\Nview of our MVC. 
Dialogue: 0,0:40:17.66,0:40:20.91,Default,And then you see this card\Ngame view controller M and H? 
Dialogue: 0,0:40:21.17,0:40:22.01,Default,That's our controller.\N
Dialogue: 0,0:40:23.02,0:40:24.12,Default,There's no model here.\N
Dialogue: 0,0:40:24.45,0:40:27.05,Default,Your model is going to\Nbe those four classes -- 
Dialogue: 0,0:40:27.05,0:40:29.47,Default,deck, card, playing card,\Nplaying card deck -- 
Dialogue: 0,0:40:29.47,0:40:31.13,Default,that's going to be your model.\N
Dialogue: 0,0:40:31.13,0:40:32.45,Default,So you'll have to enter that in.\N
Dialogue: 0,0:40:32.45,0:40:34.73,Default,I'll show you at the\Nend how to do that. 
Dialogue: 0,0:40:35.11,0:40:38.52,Default,This little thing here, card\Ngame [inaudible] dot H and M, 
Dialogue: 0,0:40:38.78,0:40:42.50,Default,we'll talk about that briefly,\Nespecially when we start talking 
Dialogue: 0,0:40:42.50,0:40:44.47,Default,about things like multitasking.\N
Dialogue: 0,0:40:44.47,0:40:46.87,Default,But I like to just move\Nthose out of the way. 
Dialogue: 0,0:40:46.87,0:40:49.93,Default,So I often put them down here\Nin this supporting files folder. 
Dialogue: 0,0:40:49.93,0:40:51.60,Default,And you can just pick\Nup any file, by the way, 
Dialogue: 0,0:40:51.60,0:40:53.84,Default,and move them anywhere\Nyou want here to kind 
Dialogue: 0,0:40:53.84,0:40:55.27,Default,of clean up your view.\N
Dialogue: 0,0:40:55.27,0:41:00.79,Default,So here I've got my view and my\Ncontroller only showing here. 
Dialogue: 0,0:41:00.79,0:41:03.11,Default,Okay? So let's go\Nstraight to the view 
Dialogue: 0,0:41:03.66,0:41:04.78,Default,and see what that looks like.\N
Dialogue: 0,0:41:04.78,0:41:05.40,Default,So here's my view.\N
Dialogue: 0,0:41:05.40,0:41:09.15,Default,It's a blank iPhone\N5 sized, right? 
Dialogue: 0,0:41:09.24,0:41:12.85,Default,A tall and thin view.\N
Dialogue: 0,0:41:13.10,0:41:13.86,Default,And it's blank.\N
Dialogue: 0,0:41:14.12,0:41:14.58,Default,Nothing new.\N
Dialogue: 0,0:41:14.58,0:41:15.82,Default,It's white.\N
Dialogue: 0,0:41:15.82,0:41:18.75,Default,This area on the left, by\Nthe way, where we clicked 
Dialogue: 0,0:41:18.75,0:41:20.42,Default,on these files, that's\Ncalled the "navigator." 
Dialogue: 0,0:41:20.92,0:41:23.04,Default,And you can not only\Nnavigate all your files here, 
Dialogue: 0,0:41:23.04,0:41:27.12,Default,but you can navigate your break\Npoints, and build problems, 
Dialogue: 0,0:41:27.12,0:41:28.21,Default,and your class hierarchies.\N
Dialogue: 0,0:41:28.21,0:41:29.16,Default,All that stuff up here.\N
Dialogue: 0,0:41:29.16,0:41:30.70,Default,So again, most of\Nyou know Xcode, 
Dialogue: 0,0:41:30.70,0:41:32.53,Default,so you probably know\Nmost of this stuff. 
Dialogue: 0,0:41:32.61,0:41:35.26,Default,We'll be demoing all this\Nas the quarter goes on. 
Dialogue: 0,0:41:35.71,0:41:38.59,Default,And this area over here is\Ncalled the "utilities area." 
Dialogue: 0,0:41:38.96,0:41:42.00,Default,And this is where you\Nbasically find out detail 
Dialogue: 0,0:41:42.00,0:41:43.21,Default,about what's going on here.\N
Dialogue: 0,0:41:43.64,0:41:48.63,Default,So inspectors for attributes,\Nand dimensions, and connections, 
Dialogue: 0,0:41:48.63,0:41:50.26,Default,and things like that go here.\N
Dialogue: 0,0:41:50.26,0:41:53.44,Default,And this is also where you\Ncan drag out the things 
Dialogue: 0,0:41:53.44,0:41:55.96,Default,that you're going to use to\Nbuild your user interface 
Dialogue: 0,0:41:56.08,0:41:59.16,Default,because we're going to build\Nour view entirely graphically. 
Dialogue: 0,0:41:59.62,0:42:00.95,Default,Okay? We're not going\Nto write code, 
Dialogue: 0,0:42:00.95,0:42:02.41,Default,for the most part,\Nto build our view. 
Dialogue: 0,0:42:02.78,0:42:04.91,Default,As the quarter goes on, we'll\Nlearn a little more about how 
Dialogue: 0,0:42:04.91,0:42:06.97,Default,to build our view in code,\Nbut we're going to start 
Dialogue: 0,0:42:06.97,0:42:11.60,Default,out just purely doing our view\Nby graphically dragging things 
Dialogue: 0,0:42:11.60,0:42:12.40,Default,out and wiring them up.\N
Dialogue: 0,0:42:12.40,0:42:14.06,Default,And we'll put our code\Nin our controller. 
Dialogue: 0,0:42:14.68,0:42:20.70,Default,This two sides can be hidden and\Nshown with these two buttons. 
Dialogue: 0,0:42:21.16,0:42:24.66,Default,See? You can hide those.\N
Dialogue: 0,0:42:24.66,0:42:27.64,Default,[Inaudible] This might appear\Nalso, this area right here, 
Dialogue: 0,0:42:27.64,0:42:28.80,Default,this little button down here.\N
Dialogue: 0,0:42:29.04,0:42:30.58,Default,This is called the\N"document outline." 
Dialogue: 0,0:42:30.58,0:42:32.11,Default,This is really handy dandy.\N
Dialogue: 0,0:42:32.37,0:42:33.93,Default,But again, we're not going\Nit talk about that today. 
Dialogue: 0,0:42:33.93,0:42:35.46,Default,We can only talk\Nabout so much at once. 
Dialogue: 0,0:42:35.79,0:42:37.37,Default,The document outline.\N
Dialogue: 0,0:42:37.37,0:42:40.19,Default,This just shows you all\Nthe instances of objects 
Dialogue: 0,0:42:40.23,0:42:42.39,Default,in your view in a\Ncommon outline form. 
Dialogue: 0,0:42:42.45,0:42:44.00,Default,So you can really\Neasily find them 
Dialogue: 0,0:42:44.00,0:42:45.21,Default,and their relationships\Nto each other. 
Dialogue: 0,0:42:45.71,0:42:50.31,Default,The other thing you can do is I\Ndon't want this iPhone 5 sized 
Dialogue: 0,0:42:50.31,0:42:52.50,Default,thing because my screen\Nis low resolution here 
Dialogue: 0,0:42:52.50,0:42:54.70,Default,so it works on the projector.\N
Dialogue: 0,0:42:54.70,0:42:56.87,Default,So I'm going to click this\Nlittle button down here, 
Dialogue: 0,0:42:57.02,0:42:59.90,Default,which reduces me down\Nto iPhone 4 size. 
Dialogue: 0,0:42:59.90,0:43:01.11,Default,Okay? Or iPhone 4S.\N
Dialogue: 0,0:43:01.78,0:43:03.03,Default,Now I'm tall and thin.\N
Dialogue: 0,0:43:03.67,0:43:06.76,Default,But you can click back and\Nforth and move them back forth. 
Dialogue: 0,0:43:06.76,0:43:09.72,Default,And I'm just trying to make\Neverything fit on screen here. 
Dialogue: 0,0:43:11.00,0:43:14.50,Default,Okay. So let's just dive right\Ninto building our view here. 
Dialogue: 0,0:43:14.71,0:43:18.14,Default,What our view is going to\Nbe today is a single card 
Dialogue: 0,0:43:18.74,0:43:20.65,Default,with an ace of clubs\Nwritten on it. 
Dialogue: 0,0:43:21.31,0:43:23.16,Default,Okay? That's going to be it.\N
Dialogue: 0,0:43:23.23,0:43:25.15,Default,And I'm going to be able\Nto click on the card 
Dialogue: 0,0:43:25.15,0:43:27.78,Default,and it will flip over, show the\Nback of the card, and then click 
Dialogue: 0,0:43:27.78,0:43:29.34,Default,on it again, it will flip\Nback to show me the ace 
Dialogue: 0,0:43:29.34,0:43:31.39,Default,of club again -- back and\Nforth, back and forth. 
Dialogue: 0,0:43:31.39,0:43:33.64,Default,Okay? And your homework\Nis going to be to make it 
Dialogue: 0,0:43:33.64,0:43:36.03,Default,so when the card flips up it\Ndoesn't show the ace of clubs, 
Dialogue: 0,0:43:36.27,0:43:38.07,Default,it shows a random card\Ndrawn from the deck. 
Dialogue: 0,0:43:38.07,0:43:41.16,Default,Okay? That's going to be your\Nentire homework that's due 
Dialogue: 0,0:43:41.16,0:43:41.55,Default,on Monday.\N
Dialogue: 0,0:43:42.50,0:43:43.70,Default,Okay. So let's do this.\N
Dialogue: 0,0:43:43.82,0:43:44.57,Default,Really simple.\N
Dialogue: 0,0:43:44.72,0:43:47.52,Default,We go to this area right\Nhere, this object library. 
Dialogue: 0,0:43:47.52,0:43:50.30,Default,Okay? That's the third button\Nover here, show object library. 
Dialogue: 0,0:43:50.30,0:43:52.11,Default,And this is where\Nall our objects are. 
Dialogue: 0,0:43:52.11,0:43:54.40,Default,If you look in here and you\Ndon't see these objects, 
Dialogue: 0,0:43:54.65,0:43:56.40,Default,it might be worth\Nclicking on your view. 
Dialogue: 0,0:43:56.63,0:44:00.53,Default,Sometimes Xcode wants to\Nknow what the destination is 
Dialogue: 0,0:44:00.53,0:44:02.35,Default,that you're going to be\Ndragging things into. 
Dialogue: 0,0:44:02.77,0:44:04.56,Default,So if you click on it, then\Nyou'll see these things. 
Dialogue: 0,0:44:04.80,0:44:06.96,Default,And we're just going to grab\None of these buttons right here. 
Dialogue: 0,0:44:06.96,0:44:09.46,Default,So I'm going to pick this\Nbutton up and drag it out. 
Dialogue: 0,0:44:09.74,0:44:11.32,Default,And notice, as I drag it out,\N
Dialogue: 0,0:44:11.42,0:44:13.88,Default,these little blue lines\Nappear -- these guidelines. 
Dialogue: 0,0:44:13.88,0:44:16.70,Default,Okay. These guidelines\Nare super important. 
Dialogue: 0,0:44:16.79,0:44:18.44,Default,They seem just like\Na convenience 
Dialogue: 0,0:44:18.44,0:44:20.61,Default,for helping you put it\Nright in the middle or right 
Dialogue: 0,0:44:20.61,0:44:21.76,Default,in the right-hand corner.\N
Dialogue: 0,0:44:21.90,0:44:25.65,Default,And they are, but they're\Nreally important for making sure 
Dialogue: 0,0:44:25.82,0:44:27.75,Default,that all the things in your\Nview are kind of, like, 
Dialogue: 0,0:44:27.75,0:44:30.03,Default,standard space apart, right?\N
Dialogue: 0,0:44:30.18,0:44:31.62,Default,And lined up against edges.\N
Dialogue: 0,0:44:31.62,0:44:34.11,Default,So that as the users go\Nfrom one app to another, 
Dialogue: 0,0:44:34.31,0:44:37.36,Default,things will all be separated\Nby predictable spaces 
Dialogue: 0,0:44:37.36,0:44:38.62,Default,and everything will\Nbe consistent. 
Dialogue: 0,0:44:38.62,0:44:39.42,Default,It's really important.\N
Dialogue: 0,0:44:39.66,0:44:41.97,Default,And there's a mechanism -- you\Ncan see this switch right here, 
Dialogue: 0,0:44:42.20,0:44:44.99,Default,use auto layout, which\Nwas introduced in iOS 6 
Dialogue: 0,0:44:45.22,0:44:48.15,Default,and vastly improved in iOS\N7, especially in Xcode -- 
Dialogue: 0,0:44:48.47,0:44:52.77,Default,that allows when your user\Ninterface changes size, 
Dialogue: 0,0:44:52.77,0:44:55.20,Default,like it goes from being an\NiPhone 4 to an iPhone 5, 
Dialogue: 0,0:44:55.38,0:44:59.21,Default,or it rotates from being\Nvertical to being horizontal, 
Dialogue: 0,0:44:59.34,0:45:02.12,Default,or it's on an iPad\Nin a bigger space. 
Dialogue: 0,0:45:02.24,0:45:04.70,Default,For all the buttons and\Neverything to kind of move 
Dialogue: 0,0:45:04.82,0:45:06.47,Default,to a new position\Nthat makes sense 
Dialogue: 0,0:45:06.47,0:45:07.97,Default,or at least most of them, right?\N
Dialogue: 0,0:45:08.13,0:45:10.08,Default,And then maybe you might have\Nto move a few of them by hand, 
Dialogue: 0,0:45:10.42,0:45:11.38,Default,depending on what's going on.\N
Dialogue: 0,0:45:11.38,0:45:14.01,Default,But it mostly automatically\Nlays it out. 
Dialogue: 0,0:45:14.01,0:45:15.06,Default,And this is really important\N
Dialogue: 0,0:45:15.06,0:45:18.02,Default,because I'm sure devices will\Ncontinue to be differing sizes 
Dialogue: 0,0:45:18.02,0:45:20.68,Default,as new, you know, devices\Ncome out over the years. 
Dialogue: 0,0:45:20.68,0:45:23.13,Default,So doing auto layout\Nis important, 
Dialogue: 0,0:45:23.13,0:45:25.87,Default,and these blue guidelines are\Nthe number one most important 
Dialogue: 0,0:45:25.87,0:45:26.57,Default,thing for auto layout.\N
Dialogue: 0,0:45:26.57,0:45:28.67,Default,We're going to cover\Nauto layout in detail, 
Dialogue: 0,0:45:28.67,0:45:29.83,Default,and there's a lot to it.\N
Dialogue: 0,0:45:29.83,0:45:32.92,Default,All these buttons down here\Nhave to do with auto layout. 
Dialogue: 0,0:45:33.34,0:45:35.27,Default,But getting those\Nblue guidelines, 
Dialogue: 0,0:45:35.27,0:45:36.54,Default,making sure you drop things\N
Dialogue: 0,0:45:36.54,0:45:39.68,Default,with at least one blue guideline\Nsomewhere is really important 
Dialogue: 0,0:45:39.68,0:45:41.79,Default,to kind get you going\Ndown the right path 
Dialogue: 0,0:45:41.79,0:45:43.59,Default,with the properly\Nauto laid out UI. 
Dialogue: 0,0:45:43.80,0:45:45.70,Default,So we have this button here.\N
Dialogue: 0,0:45:45.70,0:45:48.00,Default,But before -- and of\Ncourse, we can go over here 
Dialogue: 0,0:45:48.00,0:45:50.83,Default,to this is the attributes\Ninspector and click on it. 
Dialogue: 0,0:45:50.83,0:45:52.70,Default,And we'll see all\Nkinds of attributes. 
Dialogue: 0,0:45:52.70,0:45:54.98,Default,In fact, if I hide\Nthis, tons and tons 
Dialogue: 0,0:45:54.98,0:45:56.26,Default,of attributes for this button.\N
Dialogue: 0,0:45:56.41,0:45:58.14,Default,Okay? Not just the\Nbutton itself, 
Dialogue: 0,0:45:58.14,0:46:00.90,Default,but actually its\Nsuperclass has attributes. 
Dialogue: 0,0:46:00.90,0:46:02.06,Default,Control is its superclass,\N
Dialogue: 0,0:46:02.10,0:46:04.25,Default,and then view is\Ncontrol's superclass 
Dialogue: 0,0:46:04.25,0:46:05.62,Default,and it has attributes.\N
Dialogue: 0,0:46:05.62,0:46:08.20,Default,Okay. So this is an\Nobjective-oriented inspector 
Dialogue: 0,0:46:08.41,0:46:11.79,Default,that will show all the\Nattributes of all the things 
Dialogue: 0,0:46:11.92,0:46:13.35,Default,through the inheritance\Nhierarchy. 
Dialogue: 0,0:46:14.01,0:46:17.91,Default,And what's happening here\Nis we're actually editing an 
Dialogue: 0,0:46:17.91,0:46:19.37,Default,instance of a button here.\N
Dialogue: 0,0:46:20.16,0:46:21.58,Default,So we are not -- and I know\N
Dialogue: 0,0:46:21.58,0:46:24.12,Default,in some systems you layout\Nthe button, you set the size, 
Dialogue: 0,0:46:24.12,0:46:25.00,Default,and you set the attributes.\N
Dialogue: 0,0:46:25.00,0:46:27.36,Default,And then, you know,\Nbehind the scenes a bunch 
Dialogue: 0,0:46:27.36,0:46:30.57,Default,of code is being generated\Nto create the button. 
Dialogue: 0,0:46:30.80,0:46:31.63,Default,That's not what we're\Ndoing here. 
Dialogue: 0,0:46:31.78,0:46:33.46,Default,We're actually editing\Nlive objects. 
Dialogue: 0,0:46:33.68,0:46:35.26,Default,They're essentially\Ngoing to be freeze dried. 
Dialogue: 0,0:46:35.26,0:46:39.51,Default,And then when your app runs, add\Nwater, they come to life, okay, 
Dialogue: 0,0:46:39.57,0:46:42.05,Default,with their attributes set, and\Nall their sizes and positions, 
Dialogue: 0,0:46:42.05,0:46:44.99,Default,and all their auto layout\Ninformation in the object. 
Dialogue: 0,0:46:44.99,0:46:47.34,Default,Okay? So it's a little\Ndifferent than you might be used 
Dialogue: 0,0:46:47.34,0:46:49.41,Default,to in some other systems.\N
Dialogue: 0,0:46:50.04,0:46:52.66,Default,So anyway, before we edit the\Nattributes of this button, 
Dialogue: 0,0:46:52.66,0:46:54.52,Default,though, let's change\Nour background 
Dialogue: 0,0:46:54.52,0:46:56.08,Default,because this is a card game.\N
Dialogue: 0,0:46:56.26,0:46:59.11,Default,And most card games are on,\Nlike, green felt, right? 
Dialogue: 0,0:46:59.46,0:47:01.66,Default,So let's make our background\Nbe more like a green felt. 
Dialogue: 0,0:47:01.66,0:47:03.28,Default,So I'm just going to\Nclick on the background, 
Dialogue: 0,0:47:03.59,0:47:06.69,Default,which is this view right here,\Nand you can see its properties. 
Dialogue: 0,0:47:06.82,0:47:08.26,Default,So I'm going to change\Na couple -- 
Dialogue: 0,0:47:08.26,0:47:10.50,Default,or just one of its properties\N-- which is the background. 
Dialogue: 0,0:47:10.50,0:47:12.95,Default,You see this background\Nwhite color right here? 
Dialogue: 0,0:47:12.95,0:47:15.96,Default,So if I click on this, I have\Nsome recently used colors. 
Dialogue: 0,0:47:15.96,0:47:18.00,Default,I have all these kind of\Nblack and white colors. 
Dialogue: 0,0:47:18.16,0:47:19.32,Default,And I also have other.\N
Dialogue: 0,0:47:19.50,0:47:22.45,Default,And I bring up other,\Nbrings up the crayons, okay? 
Dialogue: 0,0:47:22.58,0:47:24.52,Default,It also brings up other\Nways to choose colors, 
Dialogue: 0,0:47:24.77,0:47:25.99,Default,but I like the crayons.\N
Dialogue: 0,0:47:26.15,0:47:29.85,Default,Okay? And so where\Nare my crayons? 
Dialogue: 0,0:47:29.94,0:47:30.29,Default,There they are.\N
Dialogue: 0,0:47:30.78,0:47:34.46,Default,So let's pick a green,\Nlike, moss is a good green. 
Dialogue: 0,0:47:34.46,0:47:36.04,Default,Clover. I kind of\Nlike moss better. 
Dialogue: 0,0:47:36.04,0:47:38.80,Default,So that's kind of a\Ncard game background. 
Dialogue: 0,0:47:39.14,0:47:39.82,Default,And that's it.\N
Dialogue: 0,0:47:39.82,0:47:43.28,Default,So we've set the background\Ncolor of our views. 
Dialogue: 0,0:47:43.39,0:47:45.35,Default,Okay? And all the attribute\Nsetting is just like this: 
Dialogue: 0,0:47:45.35,0:47:47.61,Default,You just set it and forget it.\N
Dialogue: 0,0:47:48.15,0:47:50.63,Default,So let's go back to the\Nbutton and its properties. 
Dialogue: 0,0:47:50.99,0:47:52.99,Default,Okay. The button I want\Nto look like a card. 
Dialogue: 0,0:47:53.25,0:47:56.75,Default,Well, a button in iOS\N7 basically looks a lot 
Dialogue: 0,0:47:56.75,0:47:58.64,Default,like a hyperlink on a web page,\N
Dialogue: 0,0:47:58.74,0:48:00.14,Default,just like that button\Ndoes right there. 
Dialogue: 0,0:48:00.51,0:48:02.06,Default,Okay? That blue button.\N
Dialogue: 0,0:48:02.15,0:48:04.50,Default,That's not really\Nappropriate for what we want. 
Dialogue: 0,0:48:04.50,0:48:06.83,Default,We want it to look like a card\Nwith a little rounded rect 
Dialogue: 0,0:48:06.83,0:48:08.28,Default,and a white background, right?\N
Dialogue: 0,0:48:08.28,0:48:10.16,Default,And I want the back of\Nthe card to look the same 
Dialogue: 0,0:48:10.16,0:48:13.25,Default,but have some kind of design\Non it or something like that. 
Dialogue: 0,0:48:13.52,0:48:15.38,Default,So the way I'm going\Nto do that is I'm going 
Dialogue: 0,0:48:15.38,0:48:17.72,Default,to set a background\Nimage for my button. 
Dialogue: 0,0:48:18.24,0:48:20.06,Default,Okay? A background image\Nthat's like a rounded rect. 
Dialogue: 0,0:48:20.37,0:48:22.20,Default,So let's take a little\Naside here and talk about: 
Dialogue: 0,0:48:22.29,0:48:25.18,Default,How do we get images\Ninto our app? 
Dialogue: 0,0:48:25.49,0:48:27.41,Default,Okay. We want to use images\Nin our app; it's very common 
Dialogue: 0,0:48:27.41,0:48:28.95,Default,to want to use images\N
Dialogue: 0,0:48:28.95,0:48:30.96,Default,in a graphical application\Nlike on a phone. 
Dialogue: 0,0:48:31.17,0:48:31.87,Default,So how do you do it?\N
Dialogue: 0,0:48:32.03,0:48:35.82,Default,And the answer is you go down\Nhere to this place called the 
Dialogue: 0,0:48:35.82,0:48:37.05,Default,"image asset library" --\N
Dialogue: 0,0:48:37.05,0:48:40.07,Default,images.xc assets\Nor Xcode assets. 
Dialogue: 0,0:48:40.07,0:48:41.53,Default,And you can see there's\Nalready a couple 
Dialogue: 0,0:48:41.53,0:48:43.10,Default,of slots for icons here.\N
Dialogue: 0,0:48:43.10,0:48:45.73,Default,They're not set, but\Nthis is the app icon. 
Dialogue: 0,0:48:45.73,0:48:48.10,Default,And also you can have a launch\Nimage that will appear instantly 
Dialogue: 0,0:48:48.10,0:48:49.56,Default,when someone launches your app.\N
Dialogue: 0,0:48:49.56,0:48:53.01,Default,And then as you're initializing,\Nhaving behind the launch image, 
Dialogue: 0,0:48:53.01,0:48:54.40,Default,and then it will show\Nyou are actual UI. 
Dialogue: 0,0:48:54.40,0:48:55.91,Default,So it's kind of quick\Nlaunch image. 
Dialogue: 0,0:48:56.46,0:48:58.18,Default,And we'll talk about\Nthis on Monday. 
Dialogue: 0,0:48:58.18,0:49:00.51,Default,We'll set the app\Nbackground for Machismo here. 
Dialogue: 0,0:49:00.82,0:49:04.83,Default,But I'm going to actually\Ndrag in some other image. 
Dialogue: 0,0:49:04.83,0:49:05.98,Default,So I have some images here.\N
Dialogue: 0,0:49:05.98,0:49:11.63,Default,And for example, I've got\Nthis Stanford logo right here. 
Dialogue: 0,0:49:11.77,0:49:13.60,Default,So I'm going to drag\Nthat Stanford logo 
Dialogue: 0,0:49:13.60,0:49:15.47,Default,in because I want to use it.\N
Dialogue: 0,0:49:15.47,0:49:16.84,Default,And that's it; you\Njust drag it in here. 
Dialogue: 0,0:49:16.84,0:49:17.59,Default,It says Stanford.\N
Dialogue: 0,0:49:17.92,0:49:19.05,Default,But notice that it kind\N
Dialogue: 0,0:49:19.05,0:49:21.50,Default,of has this weird thing\Nhere, this 1X and 2X. 
Dialogue: 0,0:49:21.50,0:49:21.95,Default,You see that?\N
Dialogue: 0,0:49:21.95,0:49:25.94,Default,And that's because every\Nimage that you're going to use 
Dialogue: 0,0:49:26.04,0:49:30.19,Default,in iOS wants to have a normal\Nresolution version that's going 
Dialogue: 0,0:49:30.19,0:49:33.49,Default,to be used like on the iPhone 4\N-- nonretina displays basically. 
Dialogue: 0,0:49:33.73,0:49:36.50,Default,And then a 2X, twice\Nas high resolution -- 
Dialogue: 0,0:49:36.50,0:49:37.90,Default,one that will be used on retina.\N
Dialogue: 0,0:49:38.15,0:49:40.02,Default,And it will automatically\Npick the right one, 
Dialogue: 0,0:49:40.02,0:49:41.18,Default,depending on what\Nyou're running on. 
Dialogue: 0,0:49:41.52,0:49:43.01,Default,Okay? You don't have to\Ndo anything about it. 
Dialogue: 0,0:49:43.35,0:49:45.76,Default,But you do want to provide\Nthese higher res ones. 
Dialogue: 0,0:49:45.76,0:49:49.35,Default,And these higher res ones aren't\Njust necessarily the same exact 
Dialogue: 0,0:49:49.35,0:49:52.96,Default,image, just, you know,\Nmade more high resolution. 
Dialogue: 0,0:49:53.22,0:49:54.24,Default,They might allow you to do --\N
Dialogue: 0,0:49:54.24,0:49:55.82,Default,for example, here I've\Ngot a Stanford logo 
Dialogue: 0,0:49:55.82,0:49:56.76,Default,with the little tree.\N
Dialogue: 0,0:49:57.33,0:49:58.56,Default,See? See the tree in there?\N
Dialogue: 0,0:49:58.96,0:50:00.58,Default,So maybe this is\Ntoo low resolution 
Dialogue: 0,0:50:00.58,0:50:01.94,Default,to really get a good-looking\Ntree. 
Dialogue: 0,0:50:01.94,0:50:04.11,Default,But I can get the tree in\Nat a higher resolution, 
Dialogue: 0,0:50:04.11,0:50:04.80,Default,so I put it in there.\N
Dialogue: 0,0:50:05.13,0:50:07.89,Default,So it's not that common that\Nthe two ones would be actually 
Dialogue: 0,0:50:07.89,0:50:09.18,Default,different-looking\Nbut they could be. 
Dialogue: 0,0:50:09.54,0:50:10.90,Default,Certainly allowed they could be.\N
Dialogue: 0,0:50:11.41,0:50:13.71,Default,I also don't want to\Nreally call this "Stanford." 
Dialogue: 0,0:50:14.12,0:50:16.80,Default,I'm going to use this\Nas my backup card. 
Dialogue: 0,0:50:17.30,0:50:19.62,Default,Instead of having, you\Nknow, some kind of design, 
Dialogue: 0,0:50:19.62,0:50:21.90,Default,I'm going to have the Stanford\Nlogo be the back of my card. 
Dialogue: 0,0:50:21.90,0:50:23.42,Default,When my card's flipped\Ndown and I see the back, 
Dialogue: 0,0:50:23.42,0:50:24.36,Default,I'm going to see\Nthe standard logo. 
Dialogue: 0,0:50:24.36,0:50:26.08,Default,So I'm going to call\Nthis "card back." 
Dialogue: 0,0:50:27.00,0:50:29.08,Default,I can call it anything I want.\N
Dialogue: 0,0:50:29.61,0:50:31.64,Default,I also have things\Nfor the front here. 
Dialogue: 0,0:50:32.07,0:50:32.87,Default,This one right here.\N
Dialogue: 0,0:50:33.46,0:50:35.94,Default,This is blank card\Nwith a rounded corner. 
Dialogue: 0,0:50:35.94,0:50:36.49,Default,There it is.\N
Dialogue: 0,0:50:36.49,0:50:37.77,Default,You can't see it.\N
Dialogue: 0,0:50:38.02,0:50:40.11,Default,Because it's a white\Ncard so you can't see it. 
Dialogue: 0,0:50:40.11,0:50:41.06,Default,But I'm going to use that.\N
Dialogue: 0,0:50:41.06,0:50:42.94,Default,I'm going to call\Nthis "card front." 
Dialogue: 0,0:50:43.44,0:50:45.13,Default,And I'm also going to\Nhave a high-res version 
Dialogue: 0,0:50:45.51,0:50:47.92,Default,of that as well.\N
Dialogue: 0,0:50:48.82,0:50:50.43,Default,Okay. So that's good.\N
Dialogue: 0,0:50:50.63,0:50:52.87,Default,So as much as we can see of it.\N
Dialogue: 0,0:50:53.52,0:50:55.89,Default,Okay. So now I got some images.\N
Dialogue: 0,0:50:56.15,0:50:58.32,Default,And now I want to\Nuse them in my view. 
Dialogue: 0,0:50:58.32,0:51:00.90,Default,I kind of want to set\Nthis card to use this. 
Dialogue: 0,0:51:00.90,0:51:04.43,Default,So I'm going to start with\Nmy card here being face 
Dialogue: 0,0:51:04.43,0:51:05.83,Default,up when it runs.\N
Dialogue: 0,0:51:05.83,0:51:08.37,Default,When my app runs, the card's\Ngoing to start face up. 
Dialogue: 0,0:51:08.75,0:51:11.12,Default,In your app when you get your\Nhomework you're probably going 
Dialogue: 0,0:51:11.12,0:51:12.26,Default,to want to start it facedown.\N
Dialogue: 0,0:51:12.60,0:51:15.81,Default,The reason for that is my\Napp only shows one card: 
Dialogue: 0,0:51:15.81,0:51:16.70,Default,Ace of clubs.\N
Dialogue: 0,0:51:16.89,0:51:18.90,Default,So it's fine if it comes\Nup with ace of clubs. 
Dialogue: 0,0:51:19.12,0:51:21.87,Default,But you don't want your card to\Ncome up ace of clubs for sure. 
Dialogue: 0,0:51:22.15,0:51:25.37,Default,And it might be a little\Nmore work for you coding-wise 
Dialogue: 0,0:51:25.37,0:51:27.87,Default,to initialize it to come\Nup with some random card. 
Dialogue: 0,0:51:27.87,0:51:29.43,Default,So I'll just have\Nit come up facedown. 
Dialogue: 0,0:51:29.61,0:51:30.63,Default,Make it a lot easier on you.\N
Dialogue: 0,0:51:30.92,0:51:33.66,Default,Okay? So how do we set that?\N
Dialogue: 0,0:51:33.81,0:51:34.56,Default,Really simple.\N
Dialogue: 0,0:51:34.56,0:51:36.04,Default,I've got the button\Nselected here. 
Dialogue: 0,0:51:36.04,0:51:37.02,Default,Here's its properties.\N
Dialogue: 0,0:51:37.29,0:51:39.60,Default,One of its properties\Nis its background image. 
Dialogue: 0,0:51:40.14,0:51:42.51,Default,Okay? So I'm just going to\Nclick here, and you can see 
Dialogue: 0,0:51:42.51,0:51:45.10,Default,that all images that are in my\Nassets library will be here. 
Dialogue: 0,0:51:45.54,0:51:47.29,Default,Okay? And if there was\Na really lot of them, 
Dialogue: 0,0:51:47.29,0:51:48.87,Default,you can type and\Nit will match it. 
Dialogue: 0,0:51:48.87,0:51:51.12,Default,So I'm going to make\Nit be the card front. 
Dialogue: 0,0:51:51.76,0:51:53.63,Default,So it made it the card\Nfront, but I don't see -- 
Dialogue: 0,0:51:53.63,0:51:55.15,Default,where's the rounded rect?\N
Dialogue: 0,0:51:55.40,0:51:56.59,Default,Okay? I can't see\Nthe rounded rect. 
Dialogue: 0,0:51:56.59,0:51:58.09,Default,And that's because\Nit's too small 
Dialogue: 0,0:51:58.59,0:52:01.42,Default,to see the rounded\Ncorners very well here. 
Dialogue: 0,0:52:01.59,0:52:04.60,Default,So you can just take\Nthis thing and resize it. 
Dialogue: 0,0:52:04.60,0:52:07.66,Default,Okay? And I'm going\Nto make it -- 
Dialogue: 0,0:52:07.66,0:52:10.07,Default,I want it to be about\Ntwo to three [inaudible]. 
Dialogue: 0,0:52:10.18,0:52:12.92,Default,So I'm going to make\Nit 64 by 96. 
Dialogue: 0,0:52:12.92,0:52:15.92,Default,I know this happens to be a very\Ngood size, and I've resized it. 
Dialogue: 0,0:52:15.92,0:52:18.16,Default,And now you can see the\Nlittle rounded corners. 
Dialogue: 0,0:52:18.16,0:52:20.42,Default,You see? So this is\Nthat image I dragged 
Dialogue: 0,0:52:20.42,0:52:21.98,Default,in with button written\Non top of it. 
Dialogue: 0,0:52:22.29,0:52:24.36,Default,And of course, I moved it a\Nlittle so I can put it back 
Dialogue: 0,0:52:24.36,0:52:26.90,Default,in the middle using my\Nblue guidelines, right? 
Dialogue: 0,0:52:27.51,0:52:30.06,Default,And of course, I don't want\Nmy card to say "button" it; 
Dialogue: 0,0:52:30.06,0:52:31.38,Default,I want the ace of clubs on here.\N
Dialogue: 0,0:52:31.38,0:52:32.96,Default,So I'm going to just\Ndouble-click on it. 
Dialogue: 0,0:52:33.18,0:52:34.87,Default,I could also edit that up here.\N
Dialogue: 0,0:52:34.87,0:52:36.05,Default,You see right here\Nwhere it says "button"? 
Dialogue: 0,0:52:36.15,0:52:36.87,Default,Click it here.\N
Dialogue: 0,0:52:36.87,0:52:38.72,Default,I'm just going to\Ndouble-click directly on it. 
Dialogue: 0,0:52:38.72,0:52:39.63,Default,I'm going to type "ace."\N
Dialogue: 0,0:52:39.99,0:52:41.61,Default,And how do I type\Nclubs, anyone know? 
Dialogue: 0,0:52:42.19,0:52:44.19,Default,Alt something or other.\N
Dialogue: 0,0:52:44.19,0:52:45.43,Default,I like to do this way.\N
Dialogue: 0,0:52:45.43,0:52:48.41,Default,I go to edit menu,\Nspecial characters, 
Dialogue: 0,0:52:48.78,0:52:49.82,Default,get this magic thing.\N
Dialogue: 0,0:52:49.82,0:52:51.09,Default,You ever seen this,\Nkind of cool? 
Dialogue: 0,0:52:51.33,0:52:55.67,Default,Just double-click -- find\Nthe clubs and double-click. 
Dialogue: 0,0:52:55.87,0:52:56.68,Default,All right.\N
Dialogue: 0,0:52:56.68,0:52:57.75,Default,So there's my ace of clubs.\N
Dialogue: 0,0:52:58.17,0:53:00.55,Default,Now but, you know, that's\Nnot quite right, either. 
Dialogue: 0,0:53:00.55,0:53:03.67,Default,I don't really like that blue A.\NI really want the A to be black. 
Dialogue: 0,0:53:04.06,0:53:05.69,Default,And it could be a little bigger.\N
Dialogue: 0,0:53:05.69,0:53:06.76,Default,There's more room for it.\N
Dialogue: 0,0:53:06.76,0:53:09.61,Default,So I can go over here, for\Nexample, and change the font. 
Dialogue: 0,0:53:09.77,0:53:12.32,Default,I can change it by clicking this\Nlittle thing to make it bigger, 
Dialogue: 0,0:53:12.67,0:53:16.50,Default,or I can actually click on this\NT and even set which font it is. 
Dialogue: 0,0:53:16.77,0:53:18.05,Default,One thing that's\Nreally important 
Dialogue: 0,0:53:18.05,0:53:19.91,Default,in iOS 7 is the typography.\N
Dialogue: 0,0:53:20.62,0:53:24.46,Default,Okay? Picking the right\Ntext styles is really, 
Dialogue: 0,0:53:24.46,0:53:25.64,Default,really important in iOS 7.\N
Dialogue: 0,0:53:25.64,0:53:27.21,Default,And we're not going to\Nreally talk about it here; 
Dialogue: 0,0:53:27.21,0:53:28.42,Default,we're just going to\Nuse the system font. 
Dialogue: 0,0:53:28.82,0:53:31.60,Default,But that's something we'll\Ntalk about in lecture, 
Dialogue: 0,0:53:31.60,0:53:34.26,Default,is making sure you pick the\Nright fonts in the right places 
Dialogue: 0,0:53:34.26,0:53:35.61,Default,to make the UI look really nice.\N
Dialogue: 0,0:53:36.06,0:53:38.64,Default,I can change the size\Nhere, maybe 24 point 
Dialogue: 0,0:53:38.95,0:53:40.09,Default,or something like that.\N
Dialogue: 0,0:53:40.24,0:53:41.03,Default,That will still fit.\N
Dialogue: 0,0:53:41.03,0:53:44.30,Default,And then I don't want this\Nblue, so that's this text color. 
Dialogue: 0,0:53:44.30,0:53:45.60,Default,So let's go ahead\Nand make that black. 
Dialogue: 0,0:53:46.29,0:53:46.56,Default,All right.\N
Dialogue: 0,0:53:46.56,0:53:48.77,Default,So I got the card\Nlooking the way I want. 
Dialogue: 0,0:53:49.01,0:53:49.65,Default,That's good.\N
Dialogue: 0,0:53:49.90,0:53:52.16,Default,All these properties that\Nwe're setting, by the way, 
Dialogue: 0,0:53:52.78,0:53:55.46,Default,if you look at button, you see\Nthis state config right here? 
Dialogue: 0,0:53:55.58,0:53:58.98,Default,Default? We can actually set\Nall these things differently 
Dialogue: 0,0:53:58.98,0:54:00.54,Default,for the highlighted\Nstate of the button, 
Dialogue: 0,0:54:00.73,0:54:02.87,Default,or a selected state,\Nor disabled state. 
Dialogue: 0,0:54:03.02,0:54:05.15,Default,But we're setting\Nthese as the default. 
Dialogue: 0,0:54:05.32,0:54:07.43,Default,So all our buttons always going\N
Dialogue: 0,0:54:07.43,0:54:09.36,Default,to be displaying\Nthe default state. 
Dialogue: 0,0:54:09.66,0:54:11.46,Default,Okay? So buttons\Nare pretty powerful. 
Dialogue: 0,0:54:11.65,0:54:14.05,Default,You can have them look different\Nas they highlight or whatever, 
Dialogue: 0,0:54:14.05,0:54:16.02,Default,but we're going to be working\Nall in what's called the 
Dialogue: 0,0:54:16.02,0:54:18.46,Default,"normal" or "default"\Nstate of the button. 
Dialogue: 0,0:54:18.46,0:54:20.08,Default,You'll see that when\Nwe get to the code. 
Dialogue: 0,0:54:20.40,0:54:22.19,Default,So we can actually\Nrun this right now. 
Dialogue: 0,0:54:22.19,0:54:22.80,Default,So running.\N
Dialogue: 0,0:54:22.80,0:54:24.68,Default,You've all -- most,\Nagain, done Xcode. 
Dialogue: 0,0:54:24.68,0:54:25.30,Default,You know how to run.\N
Dialogue: 0,0:54:25.30,0:54:26.43,Default,It's this little play button.\N
Dialogue: 0,0:54:26.77,0:54:27.96,Default,You can actually hold it down,\N
Dialogue: 0,0:54:27.96,0:54:30.58,Default,and there's other things you\Ncan do like test and analyze. 
Dialogue: 0,0:54:30.88,0:54:31.85,Default,But we're just going to run.\N
Dialogue: 0,0:54:31.85,0:54:35.68,Default,So I click run, and it's going\Nto run this in a simulator. 
Dialogue: 0,0:54:36.12,0:54:38.53,Default,Okay? And here it is.\N
Dialogue: 0,0:54:38.53,0:54:40.46,Default,And you can see that\Nthe simulator's 
Dialogue: 0,0:54:40.46,0:54:42.37,Default,so big it doesn't\Neven fit on my screen. 
Dialogue: 0,0:54:42.37,0:54:44.52,Default,So I kind of have to\Nscroll around in it. 
Dialogue: 0,0:54:44.95,0:54:47.30,Default,And when I click it,\Nit doesn't do anything. 
Dialogue: 0,0:54:48.04,0:54:49.71,Default,Okay? So that's not good.\N
Dialogue: 0,0:54:49.71,0:54:50.25,Default,All right.\N
Dialogue: 0,0:54:50.25,0:54:53.16,Default,Because I haven't put any code\Nin my controller to respond 
Dialogue: 0,0:54:53.16,0:54:54.85,Default,to that thing being touched.\N
Dialogue: 0,0:54:54.85,0:54:57.74,Default,So that's what we're\Ngoing to do next. 
Dialogue: 0,0:54:57.74,0:55:03.26,Default,So let's go back here and stop.\N
Dialogue: 0,0:55:04.12,0:55:05.40,Default,Okay. So how do we do that?\N
Dialogue: 0,0:55:05.40,0:55:07.96,Default,Well, it's pretty interesting\Nhow we do that, actually. 
Dialogue: 0,0:55:07.96,0:55:09.45,Default,I'm going to make\Nsome more space here. 
Dialogue: 0,0:55:09.96,0:55:13.66,Default,And what we need to do is\Nconnect up to our controller. 
Dialogue: 0,0:55:14.08,0:55:17.32,Default,And we do that by putting\Nour controller's code side 
Dialogue: 0,0:55:17.32,0:55:18.42,Default,by side with our view.\N
Dialogue: 0,0:55:18.42,0:55:19.46,Default,All right?\N
Dialogue: 0,0:55:19.70,0:55:21.84,Default,So I'm going to click this\Nlittle button right here, 
Dialogue: 0,0:55:21.84,0:55:24.58,Default,this button icon, and\Nthat puts side by side. 
Dialogue: 0,0:55:25.01,0:55:27.69,Default,And by default if you have\Na view up here on the left, 
Dialogue: 0,0:55:27.83,0:55:30.83,Default,it's going to put that\Ncontroller's code on the right. 
Dialogue: 0,0:55:31.18,0:55:32.94,Default,And you can move this\Nto get more space 
Dialogue: 0,0:55:32.94,0:55:33.83,Default,for the code if you want.\N
Dialogue: 0,0:55:34.16,0:55:36.56,Default,You can also switch between\Nthe header if you want 
Dialogue: 0,0:55:36.56,0:55:39.82,Default,to do public stuff or\Nthe implementation. 
Dialogue: 0,0:55:40.28,0:55:42.83,Default,Okay? So that's good.\N
Dialogue: 0,0:55:43.15,0:55:44.82,Default,Now, this code right\Nhere is part 
Dialogue: 0,0:55:44.82,0:55:46.69,Default,of the view controller\Nlifecycle, which we're going 
Dialogue: 0,0:55:46.69,0:55:48.40,Default,to talk about in\Ntwo or three weeks. 
Dialogue: 0,0:55:48.40,0:55:52.78,Default,But today we're not\Ngoing to talk about it. 
Dialogue: 0,0:55:53.12,0:55:55.24,Default,So we can just get rid of it.\N
Dialogue: 0,0:55:55.57,0:55:59.25,Default,And let's just start by saying,\N"When this button gets touched, 
Dialogue: 0,0:55:59.49,0:56:00.82,Default,we want it to flip over."\N
Dialogue: 0,0:56:01.19,0:56:02.68,Default,So we need to make a connection\N
Dialogue: 0,0:56:02.83,0:56:04.61,Default,between our view\Nand the controller. 
Dialogue: 0,0:56:04.61,0:56:06.81,Default,And we're going to do that\Nthing where we hang the target 
Dialogue: 0,0:56:06.81,0:56:08.81,Default,out and shoot the arrow.\N
Dialogue: 0,0:56:08.99,0:56:10.04,Default,Okay? Called "target action."\N
Dialogue: 0,0:56:10.39,0:56:11.90,Default,And this is going to\Nbe kind of whacky. 
Dialogue: 0,0:56:11.90,0:56:14.20,Default,You're probably not even going\Nto believe this when you see it. 
Dialogue: 0,0:56:14.49,0:56:16.87,Default,The way to do this is you\Nhold down the control key. 
Dialogue: 0,0:56:16.87,0:56:20.88,Default,So I'm holding down the control\Nkey, and I'm dragging a line 
Dialogue: 0,0:56:21.92,0:56:25.45,Default,from the view directly\Ninto our code. 
Dialogue: 0,0:56:25.72,0:56:26.25,Default,All right?\N
Dialogue: 0,0:56:26.25,0:56:27.81,Default,Okay? And I let go.\N
Dialogue: 0,0:56:28.49,0:56:31.55,Default,And it says, "Oh, you want a\Nconnection between your view 
Dialogue: 0,0:56:31.55,0:56:33.07,Default,and your controller, do you?\N
Dialogue: 0,0:56:33.25,0:56:34.38,Default,Here's what I need to know."\N
Dialogue: 0,0:56:34.69,0:56:36.20,Default,So it's asking us,\N"What you do you want 
Dialogue: 0,0:56:36.20,0:56:37.29,Default,to call this connection?"\N
Dialogue: 0,0:56:37.34,0:56:38.68,Default,So this is going to be\Nthe name of the method. 
Dialogue: 0,0:56:38.68,0:56:40.80,Default,It's actually going to create\Na method here that gets called 
Dialogue: 0,0:56:40.80,0:56:41.72,Default,when the button gets touched.\N
Dialogue: 0,0:56:42.06,0:56:44.06,Default,I'm going to call it\N"touch card button." 
Dialogue: 0,0:56:44.32,0:56:45.30,Default,That's a good name.\N
Dialogue: 0,0:56:45.54,0:56:47.09,Default,Here it's saying, "What\Nyou do you want the type 
Dialogue: 0,0:56:47.09,0:56:48.21,Default,of the argument to be?"\N
Dialogue: 0,0:56:48.21,0:56:49.14,Default,We'll talk about this later,\N
Dialogue: 0,0:56:49.14,0:56:52.17,Default,but for now we obviously want\Nthe argument to be the button 
Dialogue: 0,0:56:52.17,0:56:54.64,Default,that is sending us\Nthis action, okay? 
Dialogue: 0,0:56:54.64,0:56:55.99,Default,Which is going to be nice\Nbecause then we're going 
Dialogue: 0,0:56:55.99,0:56:58.74,Default,to talk back to it and tell\Nit to flip itself over. 
Dialogue: 0,0:56:58.74,0:57:00.20,Default,There's other things\Nwe can set here like: 
Dialogue: 0,0:57:00.20,0:57:02.93,Default,What kind of event do you\Nwant to send this action? 
Dialogue: 0,0:57:03.27,0:57:05.77,Default,And you can actually set\Nit so there's no argument, 
Dialogue: 0,0:57:05.77,0:57:08.21,Default,it just sends touch card\Nbutton with no arguments. 
Dialogue: 0,0:57:08.54,0:57:10.67,Default,But here we want it to have\Nthe argument of the sender, 
Dialogue: 0,0:57:10.92,0:57:12.28,Default,the button sending this message.\N
Dialogue: 0,0:57:12.53,0:57:14.10,Default,You can even send the\Ntouch event along, 
Dialogue: 0,0:57:14.10,0:57:17.28,Default,but we almost never do that -- a\Ntenth of a percent of the time. 
Dialogue: 0,0:57:17.35,0:57:18.95,Default,So here I'm going\Nto have the sender. 
Dialogue: 0,0:57:18.95,0:57:21.77,Default,So when I click connect,\Nit creates a new method. 
Dialogue: 0,0:57:21.77,0:57:24.51,Default,And that method is\Nwired up to that button. 
Dialogue: 0,0:57:24.51,0:57:26.34,Default,In fact, you see this\Nlittle round circle? 
Dialogue: 0,0:57:26.51,0:57:30.20,Default,If I mouse over it, it will\Nshow you that's what it's 
Dialogue: 0,0:57:30.20,0:57:30.81,Default,connected to.\N
Dialogue: 0,0:57:31.53,0:57:34.61,Default,Okay? So this is just some\Npretty normal-looking method 
Dialogue: 0,0:57:34.61,0:57:35.15,Default,right here.\N
Dialogue: 0,0:57:35.48,0:57:39.56,Default,The return type, IB action,\Nthat's actually typedef void. 
Dialogue: 0,0:57:40.14,0:57:41.80,Default,This method actually\Nreturns void. 
Dialogue: 0,0:57:42.11,0:57:44.85,Default,The reason that Xcode\Nputs IB action there 
Dialogue: 0,0:57:45.05,0:57:48.28,Default,and typedef's IB action to void,\Nit's just so that it can tell 
Dialogue: 0,0:57:48.28,0:57:49.94,Default,which methods are target action\N
Dialogue: 0,0:57:49.94,0:57:52.26,Default,so that it can do\Nstuff like this. 
Dialogue: 0,0:57:52.90,0:57:53.97,Default,Okay? The mouse over.\N
Dialogue: 0,0:57:54.30,0:57:55.57,Default,But the compiler ignores it.\N
Dialogue: 0,0:57:55.57,0:57:58.12,Default,The compiler sees it as void\Nbecause it's typedef to void. 
Dialogue: 0,0:57:58.39,0:58:01.13,Default,It's purely an Xcode thing\Nto this IB action thing. 
Dialogue: 0,0:58:01.13,0:58:04.09,Default,And then you can see this\Nmethod has one argument, 
Dialogue: 0,0:58:04.34,0:58:05.27,Default,which is the sender.\N
Dialogue: 0,0:58:05.27,0:58:06.99,Default,That's the button\Nsending us this message. 
Dialogue: 0,0:58:06.99,0:58:09.91,Default,And it's going to send this\Nmessage every time a touch goes 
Dialogue: 0,0:58:09.91,0:58:11.67,Default,up inside the button.\N
Dialogue: 0,0:58:11.78,0:58:12.94,Default,Touch up inside, right?\N
Dialogue: 0,0:58:12.94,0:58:13.54,Default,That was the event.\N
Dialogue: 0,0:58:13.80,0:58:15.35,Default,So that's when it's going\Nto send this message. 
Dialogue: 0,0:58:15.60,0:58:16.21,Default,So that's perfect.\N
Dialogue: 0,0:58:16.21,0:58:17.04,Default,That's what we want.\N
Dialogue: 0,0:58:17.04,0:58:19.38,Default,So every time this happens,\Nwhat do we want to do? 
Dialogue: 0,0:58:19.73,0:58:21.57,Default,Well, we want to\Nflip the card over. 
Dialogue: 0,0:58:22.33,0:58:24.58,Default,Okay. So let's start by just\Nflipping it over to the back. 
Dialogue: 0,0:58:24.58,0:58:25.80,Default,And the way we're going\Nto do that is we're going 
Dialogue: 0,0:58:25.80,0:58:28.87,Default,to create a local variable\Ncalled "card image." 
Dialogue: 0,0:58:29.19,0:58:31.24,Default,Okay. And you noticed it was\Ntrying to help me type there, 
Dialogue: 0,0:58:31.24,0:58:34.52,Default,and you're going to see\Na lot of helping here. 
Dialogue: 0,0:58:34.52,0:58:37.43,Default,And UI image is another\Nclass in iOS, okay, 
Dialogue: 0,0:58:37.43,0:58:38.85,Default,just like UI button is a class.\N
Dialogue: 0,0:58:39.35,0:58:42.08,Default,UI image is the class, as you\Ncan imagine, stores an image. 
Dialogue: 0,0:58:42.26,0:58:44.70,Default,Could be a JPEG image,\Ncould be an animated GIF, 
Dialogue: 0,0:58:44.70,0:58:47.06,Default,it could be a TIFF\Nimage, whatever. 
Dialogue: 0,0:58:47.06,0:58:50.32,Default,Okay? So it's very powerful\Nimage holding class. 
Dialogue: 0,0:58:50.90,0:58:54.24,Default,And it has a class method\Ncalled "image named," 
Dialogue: 0,0:58:54.81,0:59:00.09,Default,and you give it a string like\Ncard front or card back, right? 
Dialogue: 0,0:59:00.47,0:59:03.59,Default,And it will look in the assets\Nlibrary and give an image 
Dialogue: 0,0:59:03.59,0:59:05.69,Default,of the right resolution,\Ndepending on whether it's going 
Dialogue: 0,0:59:05.69,0:59:07.78,Default,to be go on -- actually,\Nit will give you an image 
Dialogue: 0,0:59:07.78,0:59:08.71,Default,with both resolutions.\N
Dialogue: 0,0:59:08.71,0:59:11.23,Default,And then depending on where you\Ndisplay it, it will, you know, 
Dialogue: 0,0:59:11.23,0:59:13.38,Default,pick the right resolution,\Nwhether it's on a retina or not. 
Dialogue: 0,0:59:13.87,0:59:14.33,Default,So that's cool.\N
Dialogue: 0,0:59:14.33,0:59:15.21,Default,We got the image.\N
Dialogue: 0,0:59:15.39,0:59:18.38,Default,So now we're just going to\Ntell the button to set this 
Dialogue: 0,0:59:18.38,0:59:21.61,Default,as its background image instead\Nof whatever's on it right now. 
Dialogue: 0,0:59:22.00,0:59:25.44,Default,So to talk to the button, we\Ndo open square bracket sender. 
Dialogue: 0,0:59:26.11,0:59:29.65,Default,Right? You see that the sender\Nis the button sending us 
Dialogue: 0,0:59:29.65,0:59:30.38,Default,this message.\N
Dialogue: 0,0:59:30.66,0:59:32.23,Default,Okay? Set.\N
Dialogue: 0,0:59:32.23,0:59:36.14,Default,Okay, I'm going to start\Ntyping set background. 
Dialogue: 0,0:59:36.14,0:59:39.22,Default,And you see as I start to\Ntype, Xcode is suggesting 
Dialogue: 0,0:59:39.22,0:59:41.15,Default,to me what I might want.\N
Dialogue: 0,0:59:41.40,0:59:43.38,Default,Now, it knows that the\Nsender's a UI button, 
Dialogue: 0,0:59:43.65,0:59:47.87,Default,so it's only suggesting\Nbutton methods here that start 
Dialogue: 0,0:59:47.87,0:59:49.47,Default,with set B -- set\Nbackground color, 
Dialogue: 0,0:59:49.47,0:59:50.84,Default,set background image,\Nand set bounds. 
Dialogue: 0,0:59:51.56,0:59:54.18,Default,Okay? Notice I'm also getting\Nsome help at the bottom. 
Dialogue: 0,0:59:54.61,0:59:55.41,Default,See, isn't that cool?\N
Dialogue: 0,0:59:55.41,0:59:56.76,Default,A little one or two\Nlines of help? 
Dialogue: 0,0:59:57.06,0:59:58.20,Default,And I could click on this link\N
Dialogue: 0,0:59:58.20,0:59:59.67,Default,and it would take me\Nto the documentation. 
Dialogue: 0,0:59:59.67,1:00:01.53,Default,We're not going to do\Nthat for time reasons. 
Dialogue: 0,1:00:01.95,1:00:06.24,Default,But I can also just click\None and it picks that one 
Dialogue: 0,1:00:06.24,1:00:08.19,Default,and immediately selects\Nthe first argument. 
Dialogue: 0,1:00:08.31,1:00:09.98,Default,So I can take that.\N
Dialogue: 0,1:00:10.06,1:00:10.97,Default,Okay? So I'll do that.\N
Dialogue: 0,1:00:11.29,1:00:12.16,Default,Card image.\N
Dialogue: 0,1:00:12.26,1:00:15.96,Default,And notice here when I type\NCA, there's a lot of things 
Dialogue: 0,1:00:15.96,1:00:17.96,Default,that start with CA\Nthat could go there. 
Dialogue: 0,1:00:18.29,1:00:19.81,Default,But Xcode's pretty smart.\N
Dialogue: 0,1:00:20.01,1:00:23.08,Default,It knows that a local variable\Nis much more likely what you 
Dialogue: 0,1:00:23.08,1:00:25.21,Default,want here than all\Nthese other CA -- 
Dialogue: 0,1:00:25.52,1:00:27.38,Default,functions that start with CA.\N
Dialogue: 0,1:00:27.67,1:00:29.37,Default,So it automatically\Nselects that for me. 
Dialogue: 0,1:00:29.37,1:00:31.68,Default,And if I hit tab, by the way,\N
Dialogue: 0,1:00:31.84,1:00:34.34,Default,it's going to basically\Nescape complete it. 
Dialogue: 0,1:00:34.34,1:00:37.14,Default,[Inaudible] And if I hit\Nanother tab, it goes over here. 
Dialogue: 0,1:00:37.42,1:00:39.88,Default,This little four state thing\Nis just what I was talking 
Dialogue: 0,1:00:39.88,1:00:43.27,Default,about where you can set this\Nfor the highlighted state, 
Dialogue: 0,1:00:43.27,1:00:45.18,Default,or the selected state,\Nor disabled state. 
Dialogue: 0,1:00:45.40,1:00:46.78,Default,We're just going\Nto do the normal 
Dialogue: 0,1:00:46.90,1:00:48.64,Default,or default state of this button.\N
Dialogue: 0,1:00:49.29,1:00:50.76,Default,Okay? So we're setting\Nthe background image 
Dialogue: 0,1:00:51.21,1:00:51.98,Default,for this button.\N
Dialogue: 0,1:00:52.54,1:00:56.11,Default,And we also need to set the\Ntitle because we don't want 
Dialogue: 0,1:00:56.11,1:00:58.45,Default,to see that ace of clubs when\Nwe flip it over backwards. 
Dialogue: 0,1:00:58.45,1:00:59.78,Default,So I'm just going\Nto set it to that. 
Dialogue: 0,1:01:01.13,1:01:02.33,Default,Okay. That's the empty string.\N
Dialogue: 0,1:01:02.33,1:01:03.67,Default,I could also say nil there.\N
Dialogue: 0,1:01:04.17,1:01:05.80,Default,Okay. But I'm saying\Nempty string just 
Dialogue: 0,1:01:05.80,1:01:06.99,Default,to see what empty\Nstring looks like. 
Dialogue: 0,1:01:07.25,1:01:13.54,Default,So actually if we run\Nthis, command three. 
Dialogue: 0,1:01:14.02,1:01:14.72,Default,Okay, let's try that.\N
Dialogue: 0,1:01:14.94,1:01:19.32,Default,Oh, cool. [Inaudible]\NSo there you go. 
Dialogue: 0,1:01:19.50,1:01:21.85,Default,So there's a miniature\Nversion of it. 
Dialogue: 0,1:01:21.85,1:01:22.95,Default,Okay. So here's our card.\N
Dialogue: 0,1:01:22.95,1:01:26.53,Default,And if I click on it,\Noh yeah, it flips over. 
Dialogue: 0,1:01:26.53,1:01:28.63,Default,Yes. Stanford logo\Nwith the tree. 
Dialogue: 0,1:01:29.19,1:01:30.99,Default,But now if I click, it\Ndoesn't do anything else; 
Dialogue: 0,1:01:30.99,1:01:32.56,Default,it always flips over\Nto the back, 
Dialogue: 0,1:01:33.04,1:01:35.29,Default,which is exactly what\Nour code does, right? 
Dialogue: 0,1:01:35.54,1:01:36.42,Default,So that's good.\N
Dialogue: 0,1:01:36.42,1:01:38.98,Default,So let's fix it so that\Nit flips both ways. 
Dialogue: 0,1:01:39.48,1:01:43.09,Default,Okay? And I'm going to do\Nthat by saying if the -- 
Dialogue: 0,1:01:43.33,1:01:45.25,Default,actually, I'm going to\Ndo one other thing first 
Dialogue: 0,1:01:45.90,1:01:47.71,Default,to make this code a\Nlittle simpler is instead 
Dialogue: 0,1:01:47.71,1:01:50.36,Default,of having this local\Nvariable, I can just take this 
Dialogue: 0,1:01:50.77,1:01:51.87,Default,and pop it right in there.\N
Dialogue: 0,1:01:52.59,1:01:54.66,Default,Okay? And that's very\Ncommon to do that. 
Dialogue: 0,1:01:55.11,1:01:57.85,Default,And if I wanted to wrap it,\Nit will automatically wrap 
Dialogue: 0,1:01:57.85,1:01:58.88,Default,if I make this too short.\N
Dialogue: 0,1:01:58.88,1:02:00.63,Default,But I can also put\Na return in there. 
Dialogue: 0,1:02:00.89,1:02:02.98,Default,And when I do, look what\Nit does with the colons. 
Dialogue: 0,1:02:02.98,1:02:05.19,Default,See how it lines the colons up?\N
Dialogue: 0,1:02:05.61,1:02:06.60,Default,It will always do that.\N
Dialogue: 0,1:02:06.91,1:02:09.35,Default,If you press return in the\Nmiddle of a message send 
Dialogue: 0,1:02:09.35,1:02:11.31,Default,that has multiple arguments,\Nit will line the colons 
Dialogue: 0,1:02:11.31,1:02:12.25,Default,up for all the arguments.\N
Dialogue: 0,1:02:12.25,1:02:12.92,Default,Really cool.\N
Dialogue: 0,1:02:12.92,1:02:16.40,Default,So you can see all the arguments\Nlined up left and right. 
Dialogue: 0,1:02:16.56,1:02:21.59,Default,So anyway, I'm going to check\Nto see if the current title -- 
Dialogue: 0,1:02:21.88,1:02:25.09,Default,okay, that's a button\Nmethod -- if it's a string. 
Dialogue: 0,1:02:25.48,1:02:32.13,Default,If that length, okay,\Nis nonzero, okay -- 
Dialogue: 0,1:02:32.40,1:02:34.80,Default,so that's testing there to see\Nif the length of nonzero -- 
Dialogue: 0,1:02:35.20,1:02:37.50,Default,that's a cool way to do\Nit because that will work 
Dialogue: 0,1:02:37.50,1:02:40.82,Default,if the button title is nil\Nor it's if the empty string. 
Dialogue: 0,1:02:41.39,1:02:42.99,Default,Because the button\Ntitle starts out nil. 
Dialogue: 0,1:02:43.21,1:02:44.84,Default,If you don't set it to\Nanything, it starts out nil. 
Dialogue: 0,1:02:45.01,1:02:47.72,Default,So here with one line of code\NI've checked both the initial 
Dialogue: 0,1:02:47.72,1:02:50.32,Default,state possibly -- not in our\Ncase because we set the title 
Dialogue: 0,1:02:50.32,1:02:52.51,Default,to the A club -- but in\Nyour case it might be. 
Dialogue: 0,1:02:53.11,1:02:54.94,Default,Then we'll set it to one thing,\N
Dialogue: 0,1:02:54.94,1:02:56.47,Default,else we'll set it\Nto the other thing. 
Dialogue: 0,1:02:57.05,1:03:00.28,Default,So we just wanted\Nto set this to this. 
Dialogue: 0,1:03:00.59,1:03:00.88,Default,All right?\N
Dialogue: 0,1:03:01.16,1:03:03.42,Default,So if there's a title\Non the button, 
Dialogue: 0,1:03:03.42,1:03:05.60,Default,in other words it has the ace\Nof clubs, then we're going 
Dialogue: 0,1:03:05.60,1:03:06.76,Default,to switch over to the back.\N
Dialogue: 0,1:03:07.29,1:03:09.59,Default,And if there's no title on\Nthe button, then we're going 
Dialogue: 0,1:03:09.59,1:03:11.88,Default,to switch back to the front.\N
Dialogue: 0,1:03:13.35,1:03:17.11,Default,Okay? Ace of clubs.\N
Dialogue: 0,1:03:17.64,1:03:25.67,Default,Okay? So now when we run,\Nour card will flip both ways. 
Dialogue: 0,1:03:27.17,1:03:30.36,Default,Okay? So really simple\Nto wire stuff 
Dialogue: 0,1:03:30.36,1:03:31.98,Default,into your controller\Nto do what you want. 
Dialogue: 0,1:03:32.44,1:03:38.27,Default,The next thing we're\Ngoing to do is in the -- 
Dialogue: 0,1:03:38.27,1:03:40.06,Default,okay, I'll show you\Nreally quickly here. 
Dialogue: 0,1:03:40.34,1:03:42.92,Default,If you hold down the option\Nkey, a very important key, 
Dialogue: 0,1:03:42.92,1:03:44.44,Default,do you see how it\Nputs a question mark 
Dialogue: 0,1:03:44.44,1:03:45.77,Default,and starts highlighting things?\N
Dialogue: 0,1:03:45.77,1:03:47.71,Default,That's going to allow\Nto you to transition 
Dialogue: 0,1:03:47.71,1:03:48.69,Default,into the documentation.\N
Dialogue: 0,1:03:49.00,1:03:51.19,Default,So if I want to know more\Nabout this current title, 
Dialogue: 0,1:03:51.39,1:03:52.98,Default,if I hit option, click on it --\N
Dialogue: 0,1:03:53.86,1:03:55.42,Default,see, I get a little\Nbit of help right here. 
Dialogue: 0,1:03:55.42,1:03:56.23,Default,It's a property.\N
Dialogue: 0,1:03:56.23,1:03:57.74,Default,It's read-only, it's nonatomic.\N
Dialogue: 0,1:03:58.07,1:04:00.20,Default,By the way, if you see\N"retain" in the documentation, 
Dialogue: 0,1:04:00.20,1:04:01.28,Default,that's the same as "strong."\N
Dialogue: 0,1:04:02.04,1:04:04.04,Default,Okay? Retain is the same\Nas strong basically. 
Dialogue: 0,1:04:04.64,1:04:07.29,Default,Little bit of description\Nhere but also hyperlinks. 
Dialogue: 0,1:04:07.41,1:04:09.65,Default,And if I click on one of these\Nhyperlinks, like this one, 
Dialogue: 0,1:04:10.12,1:04:11.53,Default,it takes me into\Nthe documentation. 
Dialogue: 0,1:04:11.53,1:04:13.24,Default,This is a separate\Nwindow right here. 
Dialogue: 0,1:04:13.86,1:04:16.48,Default,And you can navigate around\Nin this documentation. 
Dialogue: 0,1:04:16.91,1:04:18.80,Default,You really want to get\Nfamiliar with all this. 
Dialogue: 0,1:04:18.97,1:04:21.67,Default,I can't really show it all to\Nyou today for time constraints, 
Dialogue: 0,1:04:21.76,1:04:23.45,Default,but you can do things\Nlike search, 
Dialogue: 0,1:04:23.45,1:04:25.49,Default,like I can go find\NUI button here. 
Dialogue: 0,1:04:26.32,1:04:27.34,Default,Okay. There's UI button.\N
Dialogue: 0,1:04:27.63,1:04:30.73,Default,I might scroll down\Nand go to, for example, 
Dialogue: 0,1:04:30.88,1:04:33.88,Default,set background image\Nor set background image 
Dialogue: 0,1:04:33.88,1:04:35.17,Default,for state, which we just saw.\N
Dialogue: 0,1:04:35.37,1:04:37.24,Default,Maybe I'll click to go UI image.\N
Dialogue: 0,1:04:37.53,1:04:38.91,Default,You see all this.\N
Dialogue: 0,1:04:38.95,1:04:40.92,Default,There's nice descriptions of\Nthe class in the beginning 
Dialogue: 0,1:04:40.92,1:04:44.42,Default,and then all the methods,\Netc., etc. So definitely want 
Dialogue: 0,1:04:44.42,1:04:46.31,Default,to become a master of\Nthat documentation. 
Dialogue: 0,1:04:46.57,1:04:48.30,Default,You can also option\Ndouble-click on things 
Dialogue: 0,1:04:48.30,1:04:49.74,Default,and it will send you\Nstraight to the documentation. 
Dialogue: 0,1:04:49.74,1:04:51.98,Default,If you don't want to get\Nthe little help one first, 
Dialogue: 0,1:04:51.98,1:04:52.62,Default,you can go straight in.\N
Dialogue: 0,1:04:52.72,1:04:56.27,Default,So option is the\Nkey one for that. 
Dialogue: 0,1:04:57.01,1:04:58.66,Default,Let's go ahead -- okay.\N
Dialogue: 0,1:04:58.86,1:05:02.82,Default,Notice that this little space\Nalong the bottom here appeared 
Dialogue: 0,1:05:02.82,1:05:04.96,Default,when we ran the application\N-- you see that? 
Dialogue: 0,1:05:05.38,1:05:07.87,Default,This is the debugger\Non the left, 
Dialogue: 0,1:05:08.26,1:05:10.35,Default,and this is the console\Non the right. 
Dialogue: 0,1:05:10.35,1:05:13.54,Default,Okay? And you are definitely\Ngoing to be using the debugger 
Dialogue: 0,1:05:13.54,1:05:15.69,Default,and the console both\Nin this class. 
Dialogue: 0,1:05:15.69,1:05:17.71,Default,And actually, I might\Nhave time to do a quick -- 
Dialogue: 0,1:05:17.71,1:05:18.78,Default,show you how to do the console.\N
Dialogue: 0,1:05:19.38,1:05:22.02,Default,But anyway, you can hide it\Nby dragging it down or also 
Dialogue: 0,1:05:22.02,1:05:22.89,Default,by clicking this\Nthing [inaudible]. 
Dialogue: 0,1:05:23.41,1:05:25.00,Default,All right.\N
Dialogue: 0,1:05:25.36,1:05:27.72,Default,So the next thing we're\Ngoing to do is we're going 
Dialogue: 0,1:05:27.72,1:05:31.44,Default,to put a little label on our\NUI that counts the flips. 
Dialogue: 0,1:05:31.87,1:05:33.64,Default,Okay? A little incremental thing\N
Dialogue: 0,1:05:33.64,1:05:35.18,Default,that increments every\Ntime there's a flip. 
Dialogue: 0,1:05:35.73,1:05:38.71,Default,And we do that by\Ngoing back to here 
Dialogue: 0,1:05:39.36,1:05:43.96,Default,and grabbing ourselves a label.\N
Dialogue: 0,1:05:43.96,1:05:47.40,Default,So a label is a read-only piece\Nof text, noneditable text. 
Dialogue: 0,1:05:47.40,1:05:49.07,Default,And I'm just going\Nto drag it over here 
Dialogue: 0,1:05:49.07,1:05:50.28,Default,and put it in the lower left.\N
Dialogue: 0,1:05:50.75,1:05:54.10,Default,I'm going to double-click on it\Nto call it "flips colon zero." 
Dialogue: 0,1:05:54.10,1:05:57.74,Default,This is what I want it to look\Nlike when my UI first launches. 
Dialogue: 0,1:05:57.74,1:06:00.02,Default,Now here, I'm never going\Nto be tapping on this 
Dialogue: 0,1:06:00.16,1:06:02.80,Default,and causing a message to\Nbe sent like the button; 
Dialogue: 0,1:06:03.04,1:06:04.01,Default,it's the other way around.\N
Dialogue: 0,1:06:04.09,1:06:06.26,Default,My controller wants to\Ntalk to this and tell it 
Dialogue: 0,1:06:06.26,1:06:07.77,Default,when the flips changes\Nall the time. 
Dialogue: 0,1:06:08.18,1:06:11.76,Default,Okay? So you might think that\Nyou would drag from your code 
Dialogue: 0,1:06:12.02,1:06:14.97,Default,down to this flips, but\Nunfortunately you don't do that. 
Dialogue: 0,1:06:15.23,1:06:18.90,Default,You still hold down\Ncontrol and drag from here. 
Dialogue: 0,1:06:19.18,1:06:21.58,Default,But instead of dragging it down\Ninto your implementation area, 
Dialogue: 0,1:06:22.03,1:06:24.30,Default,you drag it into the interface\Narea because you're going 
Dialogue: 0,1:06:24.30,1:06:27.23,Default,to create a property\Nthat connects 
Dialogue: 0,1:06:27.23,1:06:28.40,Default,to that label basically.\N
Dialogue: 0,1:06:28.91,1:06:29.39,Default,So we do that.\N
Dialogue: 0,1:06:29.76,1:06:30.55,Default,We get a thing here.\N
Dialogue: 0,1:06:30.55,1:06:32.09,Default,It's asking us a little\Nbit different questions: 
Dialogue: 0,1:06:32.09,1:06:33.61,Default,"What's the name\Nof this property?" 
Dialogue: 0,1:06:33.82,1:06:35.49,Default,I'm going to call\Nit "flips label." 
Dialogue: 0,1:06:36.24,1:06:38.70,Default,Okay? Notice that\Nthis property is weak. 
Dialogue: 0,1:06:38.99,1:06:41.71,Default,Okay? When I click connect, it's\Ngoing to make a property here 
Dialogue: 0,1:06:41.71,1:06:42.64,Default,and it's going to be weak.\N
Dialogue: 0,1:06:43.21,1:06:46.11,Default,This is the first time we've\Nseen weak versus strong. 
Dialogue: 0,1:06:46.54,1:06:48.16,Default,The reason this is weak is\N
Dialogue: 0,1:06:48.16,1:06:53.48,Default,because this label is held\Nstrongly by the view itself. 
Dialogue: 0,1:06:53.83,1:06:55.84,Default,So we don't need to have\Na strong pointer to it, 
Dialogue: 0,1:06:55.84,1:06:56.65,Default,to keep it in the heap.\N
Dialogue: 0,1:06:56.85,1:06:57.53,Default,The view will.\N
Dialogue: 0,1:06:57.75,1:06:59.71,Default,And if this label\Never leaves the view, 
Dialogue: 0,1:07:00.20,1:07:01.82,Default,it will get cleaned\Nout from the heap. 
Dialogue: 0,1:07:02.02,1:07:04.61,Default,And this property --\Nthis pointer to it -- 
Dialogue: 0,1:07:04.61,1:07:06.50,Default,will get set to nil, which\Nis exactly what we want. 
Dialogue: 0,1:07:06.85,1:07:09.20,Default,Because if that flips label's\Nnot in the view, we don't want 
Dialogue: 0,1:07:09.20,1:07:11.07,Default,to be updating it and\Nsending messages to it. 
Dialogue: 0,1:07:11.64,1:07:14.42,Default,So it's a great use\Nof weak right here. 
Dialogue: 0,1:07:15.64,1:07:18.30,Default,This is normal property\Nthat you're used to except 
Dialogue: 0,1:07:18.30,1:07:19.56,Default,for maybe this IB outlet.\N
Dialogue: 0,1:07:19.61,1:07:21.28,Default,That's just like IB action.\N
Dialogue: 0,1:07:21.62,1:07:23.97,Default,It's a meaningless thing\Nthe compiler ignores 
Dialogue: 0,1:07:24.65,1:07:26.08,Default,that Xcode is using.\N
Dialogue: 0,1:07:26.50,1:07:29.69,Default,Okay? So that it can do this\N-- show you what it's connected 
Dialogue: 0,1:07:29.69,1:07:31.02,Default,to when you mouse over it.\N
Dialogue: 0,1:07:31.41,1:07:34.02,Default,Okay? By the way, you can\Nsee all the connections 
Dialogue: 0,1:07:34.02,1:07:36.28,Default,by also right-clicking\Non things. 
Dialogue: 0,1:07:36.28,1:07:38.68,Default,So here I just right-clicked\Non the button 
Dialogue: 0,1:07:38.68,1:07:40.40,Default,and you can see its connections.\N
Dialogue: 0,1:07:40.65,1:07:42.15,Default,If you ever want to rename --\N
Dialogue: 0,1:07:42.25,1:07:44.67,Default,like if I don't like touch card\Nbutton, I want to rename it 
Dialogue: 0,1:07:44.67,1:07:47.35,Default,to something, you can't\Njust rename unfortunately. 
Dialogue: 0,1:07:47.68,1:07:50.02,Default,You have to go in\Nhere, right-click, 
Dialogue: 0,1:07:50.37,1:07:52.47,Default,use this little thing\Nto disconnect it, 
Dialogue: 0,1:07:53.00,1:07:54.24,Default,and then control drag again.\N
Dialogue: 0,1:07:55.56,1:07:57.18,Default,Okay? Everybody got that?\N
Dialogue: 0,1:07:57.53,1:07:58.22,Default,It's unfortunate.\N
Dialogue: 0,1:07:58.22,1:07:59.78,Default,It would be really nice\Nif Xcode could track 
Dialogue: 0,1:07:59.78,1:08:00.92,Default,that for you but it can't.\N
Dialogue: 0,1:08:00.92,1:08:03.06,Default,So if you ever want\Nto rename something, 
Dialogue: 0,1:08:03.32,1:08:05.91,Default,you have to disconnect it\Nhere by right-clicking on it, 
Dialogue: 0,1:08:06.25,1:08:10.64,Default,and then control drag a new\None and set the name that way. 
Dialogue: 0,1:08:10.64,1:08:13.60,Default,You can also right-click\Non this little guy 
Dialogue: 0,1:08:13.60,1:08:16.27,Default,and it will show you all the\Nconnections for your controller. 
Dialogue: 0,1:08:16.78,1:08:17.68,Default,Brings up this window.\N
Dialogue: 0,1:08:17.80,1:08:18.95,Default,And I can see the label.\N
Dialogue: 0,1:08:18.95,1:08:20.93,Default,You see? I'm mousing\Nover the button. 
Dialogue: 0,1:08:21.53,1:08:23.45,Default,Label. There's also this\Nlittle property here, 
Dialogue: 0,1:08:23.45,1:08:25.83,Default,which is something\Nyou haven't seen, 
Dialogue: 0,1:08:25.83,1:08:27.32,Default,which is basically a\Nproperty that points 
Dialogue: 0,1:08:27.32,1:08:29.50,Default,to the entire view\Nfrom your controller. 
Dialogue: 0,1:08:29.50,1:08:31.20,Default,So this is the connections\Nto your controllers. 
Dialogue: 0,1:08:31.20,1:08:32.57,Default,See, it says "card\Ngame view controller"? 
Dialogue: 0,1:08:33.76,1:08:35.24,Default,Okay? So that's right-clicking.\N
Dialogue: 0,1:08:35.24,1:08:37.39,Default,I'm right-clicking over here.\N
Dialogue: 0,1:08:37.61,1:08:37.96,Default,All right.\N
Dialogue: 0,1:08:38.22,1:08:40.18,Default,So how are we going to\Nmake this flips label work? 
Dialogue: 0,1:08:40.63,1:08:44.99,Default,We are going to put\Nit aside for a second. 
Dialogue: 0,1:08:45.33,1:08:46.53,Default,Let's not think about it.\N
Dialogue: 0,1:08:46.60,1:08:49.27,Default,Let's instead do\Nanother property. 
Dialogue: 0,1:08:49.69,1:08:54.00,Default,Property. Which is\Nnonatomic, which is just going 
Dialogue: 0,1:08:54.00,1:08:56.88,Default,to be an int, which I'm\Ngoing to call "flip count." 
Dialogue: 0,1:08:57.86,1:09:00.07,Default,Okay? So flip count is just\Nan integer that's going 
Dialogue: 0,1:09:00.07,1:09:01.65,Default,to keep the count of flips.\N
Dialogue: 0,1:09:02.05,1:09:03.73,Default,And watch this.\N
Dialogue: 0,1:09:05.28,1:09:06.55,Default,Some more space here.\N
Dialogue: 0,1:09:06.55,1:09:10.27,Default,Go there. I'm just\Ngoing to go down here 
Dialogue: 0,1:09:10.27,1:09:12.86,Default,and say self.flip\Ncount plus plus. 
Dialogue: 0,1:09:14.19,1:09:16.60,Default,Okay? Now, does that\Ncall the setter 
Dialogue: 0,1:09:16.88,1:09:19.35,Default,or the getter for flip count?\N
Dialogue: 0,1:09:20.34,1:09:21.64,Default,Both. Exactly.\N
Dialogue: 0,1:09:21.79,1:09:23.50,Default,That is calling both the\Nsetter and the getter. 
Dialogue: 0,1:09:23.50,1:09:25.33,Default,It's calling the getter\Nto get the flip count, 
Dialogue: 0,1:09:25.69,1:09:26.98,Default,then it's plus plussing it;\N
Dialogue: 0,1:09:27.41,1:09:29.44,Default,and then it's calling the\Nsetter to set it back. 
Dialogue: 0,1:09:29.71,1:09:31.62,Default,Okay. So that's kind of a funky\Nlining of code right there. 
Dialogue: 0,1:09:32.06,1:09:34.45,Default,That's the same as saying\Nself.flip count equals self.flip 
Dialogue: 0,1:09:34.45,1:09:34.99,Default,count plus one.\N
Dialogue: 0,1:09:34.99,1:09:36.28,Default,So it's calling the\Ngetter and the setter. 
Dialogue: 0,1:09:36.92,1:09:39.04,Default,Okay. So now we've got\Nthis nice flip count. 
Dialogue: 0,1:09:39.04,1:09:41.73,Default,It's keeping track of the\Ncount; how do we hook that up 
Dialogue: 0,1:09:42.09,1:09:43.64,Default,to this thing over here?\N
Dialogue: 0,1:09:43.64,1:09:45.27,Default,Which I'm going to make a\Nlittle bigger, by the way. 
Dialogue: 0,1:09:45.93,1:09:48.92,Default,Okay. How do we hook that up\Nso that says flips colon one, 
Dialogue: 0,1:09:48.92,1:09:50.31,Default,flips colon two,\Nflips colon three? 
Dialogue: 0,1:09:50.61,1:09:56.52,Default,Well, we're going to do it\Nusing the setter for flip count. 
Dialogue: 0,1:09:57.24,1:10:00.02,Default,Okay? So normally a setter for\Nflip count would look like this. 
Dialogue: 0,1:10:00.66,1:10:04.94,Default,Okay? And here's another great\Nuse of setters and getters, 
Dialogue: 0,1:10:05.21,1:10:08.37,Default,which is to keep UI in\Nsync with a property. 
Dialogue: 0,1:10:08.37,1:10:12.10,Default,And I'll just do this by\Nsaying self.flips label -- 
Dialogue: 0,1:10:13.08,1:10:17.93,Default,flips label.text\Nequals -- oops, sorry. 
Dialogue: 0,1:10:18.39,1:10:20.67,Default,It's hard to type standing up.\N
Dialogue: 0,1:10:20.67,1:10:23.56,Default,Equals NS string,\Nstring with format, 
Dialogue: 0,1:10:23.56,1:10:29.37,Default,which you've seen before, flips\Ncolon percent D self.flip count. 
Dialogue: 0,1:10:30.90,1:10:33.97,Default,Okay? So now every time flip\Ncount is changed we're going 
Dialogue: 0,1:10:33.97,1:10:34.43,Default,to update the UI.\N
Dialogue: 0,1:10:35.14,1:10:36.95,Default,Make sense?\N
Dialogue: 0,1:10:36.95,1:10:38.81,Default,Any questions about that?\N
Dialogue: 0,1:10:39.87,1:10:40.67,Default,Okay. So let's run.\N
Dialogue: 0,1:10:45.13,1:10:45.90,Default,Okay. Here's our thing.\N
Dialogue: 0,1:10:45.90,1:10:49.06,Default,So click, flips over,\Nflip count updates. 
Dialogue: 0,1:10:49.24,1:10:50.44,Default,Flip, flip, flip, flip.\N
Dialogue: 0,1:10:50.51,1:10:53.33,Default,Back and forth working, and\Nthe flip count is keeping track 
Dialogue: 0,1:10:53.33,1:10:54.20,Default,of how many flips we're doing.\N
Dialogue: 0,1:10:54.56,1:10:58.42,Default,Okay? So you can see this stuff\Nis really simple to wire up. 
Dialogue: 0,1:10:58.69,1:11:00.58,Default,Okay? And, you know,\Nwhen you get 
Dialogue: 0,1:11:00.58,1:11:02.65,Default,into building even\Ncomplicated applications, 
Dialogue: 0,1:11:02.65,1:11:04.77,Default,because you're always going\Nto use these same mechanisms 
Dialogue: 0,1:11:04.77,1:11:06.48,Default,with target action and\Noutlets and you're going 
Dialogue: 0,1:11:06.48,1:11:08.62,Default,to be using setters and\Ngetters to keep things in sync, 
Dialogue: 0,1:11:08.62,1:11:09.71,Default,it's going to be easy for people\N
Dialogue: 0,1:11:09.71,1:11:11.20,Default,to understand how\Nyour code works. 
Dialogue: 0,1:11:11.20,1:11:14.40,Default,They know where to look to\Nsee where UI updating happens, 
Dialogue: 0,1:11:14.40,1:11:16.95,Default,etc. I'm going to do\None other thing here. 
Dialogue: 0,1:11:17.32,1:11:19.23,Default,Take a minute and\Nshow you NS log. 
Dialogue: 0,1:11:19.67,1:11:22.56,Default,Okay. I told you that you could\Nlog something in the console. 
Dialogue: 0,1:11:22.71,1:11:24.66,Default,So let's do every time\Nthis thing changes, 
Dialogue: 0,1:11:24.88,1:11:25.81,Default,let's do an NS log.\N
Dialogue: 0,1:11:25.81,1:11:27.03,Default,So it's just a C function.\N
Dialogue: 0,1:11:27.03,1:11:29.35,Default,And you give it a format\Nstring like printf. 
Dialogue: 0,1:11:29.97,1:11:35.30,Default,So I'll say flip count equals\Npercent V self.flip count. 
Dialogue: 0,1:11:36.52,1:11:38.48,Default,Okay? So you just put\Nthat NS log in there, 
Dialogue: 0,1:11:38.48,1:11:42.02,Default,and now when we run you're\Ngoing to see it in the console. 
Dialogue: 0,1:11:42.02,1:11:44.00,Default,It's going to come up when\NI click, and it's going 
Dialogue: 0,1:11:44.00,1:11:45.47,Default,to say what happened here.\N
Dialogue: 0,1:11:45.76,1:11:48.08,Default,By the way, of course,\NI can make that wider. 
Dialogue: 0,1:11:48.88,1:11:52.59,Default,And go back to the simulator.\N
Dialogue: 0,1:11:52.93,1:11:53.58,Default,Let's see.\N
Dialogue: 0,1:11:53.58,1:11:57.01,Default,Okay. So NS logging --\Nawesome way to debug. 
Dialogue: 0,1:11:57.01,1:11:59.89,Default,Okay? Sometimes a lot easier\Nthan setting a breakpoint 
Dialogue: 0,1:11:59.89,1:12:00.90,Default,and then when you\Nget there looking 
Dialogue: 0,1:12:00.90,1:12:01.77,Default,at the variables and stuff.\N
Dialogue: 0,1:12:01.77,1:12:03.59,Default,It just prints out what's\Ngoing on and you can watch it. 
Dialogue: 0,1:12:03.59,1:12:06.38,Default,Especially in the UI things\Nare sometimes animated, 
Dialogue: 0,1:12:06.54,1:12:07.70,Default,they're happening over time.\N
Dialogue: 0,1:12:07.95,1:12:09.52,Default,It's sometimes hard to set\Na breakpoint in the middle 
Dialogue: 0,1:12:09.52,1:12:11.00,Default,of an animation to\Nsee what's going on. 
Dialogue: 0,1:12:11.00,1:12:12.93,Default,But if you do some\NNS logs, you can kind 
Dialogue: 0,1:12:12.93,1:12:14.55,Default,of see how things progress.\N
Dialogue: 0,1:12:14.55,1:12:14.75,Default,All right.\N
Dialogue: 0,1:12:14.75,1:12:17.51,Default,The last thing I'm going\Nto show you here is how 
Dialogue: 0,1:12:17.51,1:12:20.11,Default,to add a new class to your app\N
Dialogue: 0,1:12:20.11,1:12:21.22,Default,because you're going\Nto need to do that. 
Dialogue: 0,1:12:21.22,1:12:22.92,Default,You're going to add\Nfour classes to this. 
Dialogue: 0,1:12:22.92,1:12:24.90,Default,Okay? You're going to\Nstart with this, okay, 
Dialogue: 0,1:12:24.90,1:12:27.74,Default,and then you're going\Nto add four classes -- 
Dialogue: 0,1:12:27.74,1:12:32.96,Default,card, deck, etc. And the way\Nyou add a class is you -- 
Dialogue: 0,1:12:33.21,1:12:37.70,Default,and in fact, the way you add\Nany file to your project -- 
Dialogue: 0,1:12:37.70,1:12:40.20,Default,is you go to the\Nfile menu, new file. 
Dialogue: 0,1:12:41.22,1:12:43.12,Default,Okay? And there's\Nall different kinds 
Dialogue: 0,1:12:43.12,1:12:45.33,Default,of things you can add\Nhere, database file, 
Dialogue: 0,1:12:45.33,1:12:46.50,Default,schema files and everything.\N
Dialogue: 0,1:12:46.50,1:12:50.58,Default,But you want this one\Ntop-left Objective-C class. 
Dialogue: 0,1:12:51.03,1:12:53.84,Default,Okay? Here you're just going\Nto type the name of the class. 
Dialogue: 0,1:12:53.84,1:12:55.51,Default,So for example, if\NI'm going to add card 
Dialogue: 0,1:12:56.16,1:12:57.89,Default,and the name of the superclass.\N
Dialogue: 0,1:12:58.29,1:13:01.23,Default,Okay. If you are doing playing\Ncard, you can type card here. 
Dialogue: 0,1:13:01.23,1:13:03.91,Default,It doesn't have to be something\Nthat's chosen from this list, 
Dialogue: 0,1:13:03.91,1:13:05.22,Default,okay, which are the iOS ones.\N
Dialogue: 0,1:13:05.25,1:13:07.67,Default,So here I'm going to make card.\N
Dialogue: 0,1:13:08.00,1:13:09.50,Default,I could put card right here.\N
Dialogue: 0,1:13:09.50,1:13:10.79,Default,It's asking where to store this.\N
Dialogue: 0,1:13:10.79,1:13:12.30,Default,I could put it right\Nin the same place 
Dialogue: 0,1:13:12.30,1:13:14.76,Default,that my card game\Ncontroller is, you see? 
Dialogue: 0,1:13:15.20,1:13:17.39,Default,But I'm actually a big fan\N
Dialogue: 0,1:13:17.39,1:13:19.64,Default,of putting your model\Nin its own directory. 
Dialogue: 0,1:13:20.39,1:13:22.62,Default,So you would use new\Nfolder down here. 
Dialogue: 0,1:13:23.45,1:13:25.07,Default,Let's create like\Na model directory, 
Dialogue: 0,1:13:25.56,1:13:27.33,Default,and that creates a\Nmodel directory here. 
Dialogue: 0,1:13:28.53,1:13:30.48,Default,There's a controller,\Nhere's the model directory. 
Dialogue: 0,1:13:31.10,1:13:32.47,Default,And so create.\N
Dialogue: 0,1:13:32.47,1:13:36.14,Default,So that's going to create card\Ndot H and M. Here's card dot H 
Dialogue: 0,1:13:36.14,1:13:39.06,Default,and M, okay, kind of\Nblank versions of them. 
Dialogue: 0,1:13:39.06,1:13:41.21,Default,You can switch back and\Nforth between them here. 
Dialogue: 0,1:13:41.21,1:13:43.13,Default,Notice that if I\Nswitch the left, 
Dialogue: 0,1:13:43.49,1:13:44.94,Default,the right changes to match.\N
Dialogue: 0,1:13:44.94,1:13:47.31,Default,You see? Change this,\Nthis matches. 
Dialogue: 0,1:13:47.51,1:13:49.68,Default,That's because I have\Ncounterparts chosen right here. 
Dialogue: 0,1:13:49.68,1:13:52.25,Default,If you go to manual and\Npick this file manually, 
Dialogue: 0,1:13:52.57,1:13:54.19,Default,then it won't be doing\Nthat magic anymore. 
Dialogue: 0,1:13:54.19,1:13:55.94,Default,But you can always go\Nback to counterparts 
Dialogue: 0,1:13:56.18,1:13:57.43,Default,and it will keep them in sync.\N
Dialogue: 0,1:13:57.70,1:14:00.24,Default,Okay. So you can have -- some\Npeople like their header file 
Dialogue: 0,1:14:00.24,1:14:02.04,Default,on the left, some on\Nthe right, whatever. 
Dialogue: 0,1:14:02.74,1:14:05.04,Default,Also, notice over\Nhere it would be nice 
Dialogue: 0,1:14:05.04,1:14:07.58,Default,if I can also group these\Nthings in the navigator. 
Dialogue: 0,1:14:07.58,1:14:11.69,Default,And I can by having them\Nselected right-click new group. 
Dialogue: 0,1:14:12.14,1:14:12.86,Default,Say model.\N
Dialogue: 0,1:14:13.55,1:14:14.02,Default,Right here.\N
Dialogue: 0,1:14:14.02,1:14:17.67,Default,And now I've put my model in\Nits own little place right here. 
Dialogue: 0,1:14:17.67,1:14:19.86,Default,I can even move this around,\Nput it down here, whatever. 
Dialogue: 0,1:14:20.30,1:14:22.56,Default,I could put all my\Nfour classes in there. 
Dialogue: 0,1:14:22.87,1:14:27.65,Default,It is possible to link this\Ngroup to the file system. 
Dialogue: 0,1:14:27.74,1:14:31.01,Default,In fact, if you just click on a\Nfile and bring up the inspector 
Dialogue: 0,1:14:31.01,1:14:33.70,Default,on it right here, you can see\Nthat it's got this location 
Dialogue: 0,1:14:33.70,1:14:36.34,Default,where you can specify\Nwhether it's an absolute path, 
Dialogue: 0,1:14:36.34,1:14:38.58,Default,or relevant to the group\Nit's in, or whatever. 
Dialogue: 0,1:14:38.81,1:14:41.01,Default,So you can control that.\N
Dialogue: 0,1:14:41.01,1:14:42.52,Default,And that's it.\N
Dialogue: 0,1:14:42.85,1:14:44.36,Default,So I think that's all you\Nneed to do your homework. 
Dialogue: 0,1:14:44.59,1:14:46.81,Default,You're just going to type in\Nall your code here for card 
Dialogue: 0,1:14:47.17,1:14:48.30,Default,and add your three other ones.\N
Dialogue: 0,1:14:48.30,1:14:49.16,Default,Type all that code in.\N
Dialogue: 0,1:14:49.16,1:14:51.39,Default,And then all you got to do\Nis make that card instead 
Dialogue: 0,1:14:51.39,1:14:52.82,Default,of showing ace of\Nclubs all the time, 
Dialogue: 0,1:14:52.89,1:14:55.43,Default,needs to go through\Nthe deck, okay? 
Dialogue: 0,1:14:55.65,1:14:58.17,Default,There's a detailed\Nhomework write up posted. 
Dialogue: 0,1:14:58.17,1:15:01.14,Default,It has all kinds of hints\Nand help, and tells you 
Dialogue: 0,1:15:01.14,1:15:02.66,Default,about what the required\Ntasks are, 
Dialogue: 0,1:15:02.66,1:15:04.94,Default,and evaluation criteria,\Nand all that stuff. 
Dialogue: 0,1:15:04.94,1:15:07.15,Default,So definitely read that\Nthing in detail, okay? 
Dialogue: 0,1:15:07.15,1:15:09.37,Default,Don't skip that stuff and just\Ntry to go straight to doing it. 
Dialogue: 0,1:15:09.52,1:15:11.09,Default,And if you have questions,\NI'll be here. 
Dialogue: 0,1:15:11.35,1:15:11.69,Default,That's it.\N
Dialogue: 0,1:15:13.58,1:15:17.70,Default,>> For more, please\Nvisit us at Stanford.edu. 
